{
	"info": {
		"_postman_id": "72c63702-c048-4de5-9881-e89126e47f27",
		"name": "10.40.0 - Jamf Pro API",
		"description": "## Overview\nThe Jamf Pro API is a RESTful API for Jamf Pro built to enable consistent and efficient programmatic access to Jamf Pro.<br/><br/>\nThe swagger schema can be found [here](/api/schema/).\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22210240"
	},
	"item": [
		{
			"name": "auth",
			"item": [
				{
					"name": "Get all the Authorization details associated with the current api\n",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth"
							]
						},
						"description": "Get all the authorization details associated with the current api token"
					},
					"response": [
						{
							"name": "Current authorization details.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"account\": {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"email\": \"ITBob@Jamf.com\",\n    \"preferences\": {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dateFormat\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timezone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDisableRelativeDates\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"isMultiSiteAdmin\": true,\n    \"accessLevel\": \"FullAccess\",\n    \"privilegeSet\": \"CUSTOM\",\n    \"privilegesBySite\": {\n      \"1\": [\n        \"Read SSO Settings\",\n        \"Delete eBooks\"\n      ]\n    },\n    \"groupIds\": [\n      1,\n      3\n    ],\n    \"currentSiteId\": 1\n  },\n  \"accountGroups\": [\n    {\n      \"accessLevel\": \"FullAccess\",\n      \"privilegeSet\": \"CUSTOM\",\n      \"siteId\": 1,\n      \"privileges\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"memberUserIds\": [\n        1,\n        3\n      ]\n    },\n    {\n      \"accessLevel\": \"FullAccess\",\n      \"privilegeSet\": \"CUSTOM\",\n      \"siteId\": 1,\n      \"privileges\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"memberUserIds\": [\n        1,\n        3\n      ]\n    }\n  ],\n  \"sites\": [\n    {\n      \"id\": 1,\n      \"name\": \"Eau Claire\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Eau Claire\"\n    }\n  ],\n  \"authenticationType\": \"JSS\"\n}"
						}
					]
				},
				{
					"name": "Get the authorization details associated with the current API token\n",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/current",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"current"
							]
						},
						"description": "Get the authorization details associated with the current API token for the users current site"
					},
					"response": [
						{
							"name": "Authorization details for users current site.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/current",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"current"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"account\": {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"email\": \"ITBob@Jamf.com\",\n    \"preferences\": {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dateFormat\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timezone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDisableRelativeDates\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"isMultiSiteAdmin\": true,\n    \"accessLevel\": \"FullAccess\",\n    \"privilegeSet\": \"CUSTOM\",\n    \"privileges\": [\n      \"Read SSO Settings\",\n      \"Delete eBooks\"\n    ],\n    \"groupIds\": [\n      1,\n      3\n    ],\n    \"currentSiteId\": 1\n  },\n  \"sites\": [\n    {\n      \"id\": 1,\n      \"name\": \"Eau Claire\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Eau Claire\"\n    }\n  ],\n  \"authenticationType\": \"JSS\"\n}"
						}
					]
				},
				{
					"name": "Invalidate current token\n",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/invalidateToken",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"invalidateToken"
							]
						},
						"description": "Invalidates current token"
					},
					"response": [
						{
							"name": "token invalidated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/invalidateToken",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"invalidateToken"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Invalidate existing token and generates new token\n",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/keepAlive",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"keepAlive"
							]
						},
						"description": "Invalidates existing token and generates new token with extended expiration based on existing token credentials."
					},
					"response": [
						{
							"name": "Updated token.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/keepAlive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"keepAlive"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJhdXRoZW50aWNhdGVkLWFwcCI6IkdFTkVSSUMiLCJhdXRoZW50aWNhdGlvbi10eXBlIjoiSlNTIiwiZ3JvdXBzIjpbXSwic3ViamVjdC10eXBlIjoiSlNTX1VTRVJfSUQiLCJ0b2tlbi11dWlkIjoiNzc0YWY3MGYtYWQ0Yy00N2QzLTk2MzktZjEwMjBhMTIwYzExIiwibGRhcC1zZXJ2ZXItaWQiOi0xLCJzdWIiOiIxIiwiZXhwIjoxNTM5NjE5MzQ4fQ.0t7sgYyIyA7kTTmrM8tMGE7fnXcJ1ZzQODAJp0pzg92-cBMQS0Cv8S9oWjkJD7VJS-CHA1dOppr0G_2dCPOfng\",\n  \"expires\": 1539619348124\n}"
						}
					]
				},
				{
					"name": "Create a token based on other authentication details (basic, etc.)\n",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "<Basic Auth Username>",
									"type": "string"
								},
								{
									"key": "password",
									"value": "<Basic Auth Password>",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/auth/tokens",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"tokens"
							]
						},
						"description": "Create a token based on other authentication details (basic, etc.)\n"
					},
					"response": [
						{
							"name": "New auth token generated.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: basic",
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/tokens",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"tokens"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJhdXRoZW50aWNhdGVkLWFwcCI6IkdFTkVSSUMiLCJhdXRoZW50aWNhdGlvbi10eXBlIjoiSlNTIiwiZ3JvdXBzIjpbXSwic3ViamVjdC10eXBlIjoiSlNTX1VTRVJfSUQiLCJ0b2tlbi11dWlkIjoiNzc0YWY3MGYtYWQ0Yy00N2QzLTk2MzktZjEwMjBhMTIwYzExIiwibGRhcC1zZXJ2ZXItaWQiOi0xLCJzdWIiOiIxIiwiZXhwIjoxNTM5NjE5MzQ4fQ.0t7sgYyIyA7kTTmrM8tMGE7fnXcJ1ZzQODAJp0pzg92-cBMQS0Cv8S9oWjkJD7VJS-CHA1dOppr0G_2dCPOfng\",\n  \"expires\": 1539619348124\n}"
						}
					]
				}
			]
		},
		{
			"name": "inventory-preload",
			"item": [
				{
					"name": "history",
					"item": [
						{
							"name": "Get Inventory Preload history entries\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inventory-preload/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory-preload",
										"history"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "100"
										},
										{
											"key": "pagesize",
											"value": "100"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "date:desc",
											"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Gets Inventory Preload history entries."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory-preload/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory-preload",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "100"
												},
												{
													"key": "pagesize",
													"value": "100"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "date:desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Add Inventory Preload history object notes\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/inventory-preload/history/notes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory-preload",
										"history",
										"notes"
									]
								},
								"description": "Adds Inventory Preload history object notes."
							},
							"response": [
								{
									"name": "Notes of Inventory Preload history were added",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory-preload/history/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory-preload",
												"history",
												"notes"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
								},
								{
									"name": "Inventory Preload history can not be saved",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory-preload/history/notes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory-preload",
												"history",
												"notes"
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get an Inventory Preload record\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inventory-preload/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory-preload",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) Inventory Preload identifier"
										}
									]
								},
								"description": "Retrieves an Inventory Preload record."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory-preload/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory-preload",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Inventory Preload identifier"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}"
								},
								{
									"name": "Inventory Preload record with specified id does not exist",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory-preload/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory-preload",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Inventory Preload identifier"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update an Inventory Preload record\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/inventory-preload/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory-preload",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) Inventory Preload identifier"
										}
									]
								},
								"description": "Updates an Inventory Preload record."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory-preload/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory-preload",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Inventory Preload identifier"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}"
								},
								{
									"name": "Inventory Preload record with specified id does not exist",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/inventory-preload/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory-preload",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Inventory Preload identifier"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete an Inventory Preload record\n",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inventory-preload/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory-preload",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) Inventory Preload identifier"
										}
									]
								},
								"description": "Deletes an Inventory Preload record."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory-preload/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory-preload",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Inventory Preload identifier"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Inventory Preload record with specified id does not exist",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/inventory-preload/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"inventory-preload",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Inventory Preload identifier"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Return all Inventory Preload records\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/inventory-preload?page=0&pagesize=100&sort=ASC&sortBy=id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"inventory-preload"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "pagesize",
									"value": "100"
								},
								{
									"key": "sort",
									"value": "ASC"
								},
								{
									"key": "sortBy",
									"value": "id"
								}
							]
						},
						"description": "Returns all Inventory Preload records."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inventory-preload?page=0&pagesize=100&sort=ASC&sortBy=id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory-preload"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "pagesize",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "ASC"
										},
										{
											"key": "sortBy",
											"value": "id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"totalCount\": 10,\n    \"results\": [\n      {\n        \"deviceType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"serialNumber\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"username\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fullName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"emailAddress\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"phoneNumber\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"position\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"department\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"building\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"room\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"poNumber\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"poDate\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"warrantyExpiration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"appleCareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"lifeExpectancy\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"purchasePrice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"purchasingContact\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"purchasingAccount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"leaseExpiration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"barCode1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"barCode2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"assetTag\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"vendor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"extensionAttributes\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"deviceType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"serialNumber\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"username\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fullName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"emailAddress\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"phoneNumber\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"position\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"department\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"building\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"room\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"poNumber\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"poDate\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"warrantyExpiration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"appleCareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"lifeExpectancy\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"purchasePrice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"purchasingContact\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"purchasingAccount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"leaseExpiration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"barCode1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"barCode2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"assetTag\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"vendor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"extensionAttributes\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  {\n    \"totalCount\": 10,\n    \"results\": [\n      {\n        \"deviceType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"serialNumber\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"username\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fullName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"emailAddress\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"phoneNumber\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"position\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"department\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"building\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"room\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"poNumber\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"poDate\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"warrantyExpiration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"appleCareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"lifeExpectancy\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"purchasePrice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"purchasingContact\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"purchasingAccount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"leaseExpiration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"barCode1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"barCode2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"assetTag\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"vendor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"extensionAttributes\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"deviceType\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"serialNumber\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"username\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"fullName\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"emailAddress\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"phoneNumber\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"position\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"department\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"building\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"room\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"poNumber\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"poDate\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"warrantyExpiration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"appleCareId\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"lifeExpectancy\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"purchasePrice\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"purchasingContact\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"purchasingAccount\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"leaseExpiration\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"barCode1\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"barCode2\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"assetTag\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"vendor\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"extensionAttributes\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  }\n]"
						}
					]
				},
				{
					"name": "Create a new Inventory Preload record using JSON or CSV\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/inventory-preload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"inventory-preload"
							]
						},
						"description": "Create a new Inventory Preload record using JSON or CSV.\nA CSV template can be downloaded from /api/inventory-preload/csv-template.\nSerial number and device type are required. All other fields are optional.\nWhen a matching serial number exists in the Inventory Preload data, the record will be overwritten with the CSV data.\nIf the CSV file contains a new username and an email address is provided, the new user is created in Jamf Pro.\nIf the CSV file contains an existing username, the following user-related fields are updated in Jamf Pro.\nFull Name,\nEmail Address,\nPhone Number,\nPosition.\nThis endpoint does not do full validation of each record in the CSV data.\nTo do full validation, use the /inventory-preload/validate-csv endpoint first.\n"
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/inventory-preload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory-preload"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad Request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/inventory-preload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory-preload"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Delete all Inventory Preload records\n",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/inventory-preload",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"inventory-preload"
							]
						},
						"description": "Deletes all Inventory Preload records."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inventory-preload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory-preload"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get the Inventory Preload CSV template\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "text/csv"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/inventory-preload/csv-template",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"inventory-preload",
								"csv-template"
							]
						},
						"description": "Retrieves the Inventory Preload CSV template."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/inventory-preload/csv-template",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory-preload",
										"csv-template"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/csv"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Validate a given CSV file\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "text/csv"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[object Object]"
						},
						"url": {
							"raw": "{{baseUrl}}/inventory-preload/validate-csv",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"inventory-preload",
								"validate-csv"
							]
						},
						"description": "Validate a given CSV file.\nSerial number and device type are required. All other fields are optional.\nA CSV template can be downloaded from /api/inventory-preload/csv-template.\n"
					},
					"response": [
						{
							"name": "Ok",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[object Object]"
								},
								"url": {
									"raw": "{{baseUrl}}/inventory-preload/validate-csv",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory-preload",
										"validate-csv"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"recordCount\": 10\n}"
						},
						{
							"name": "Precondition Failed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[object Object]"
								},
								"url": {
									"raw": "{{baseUrl}}/inventory-preload/validate-csv",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"inventory-preload",
										"validate-csv"
									]
								}
							},
							"status": "Precondition Failed",
							"code": 412,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpsStatus\": 400,\n  \"errors\": [\n    {\n      \"code\": \"SIZE_EXCEEDED\",\n      \"description\": \"Field 'vendor' exceeds max size 60\",\n      \"field\": \"vendor\",\n      \"value\": \"abcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyz\",\n      \"serialNumber\": \"R7QFDE2YCFN4\",\n      \"line\": 5,\n      \"fieldSize\": 60,\n      \"deviceType\": \"Computer\"\n    },\n    {\n      \"code\": \"SIZE_EXCEEDED\",\n      \"description\": \"Field 'vendor' exceeds max size 60\",\n      \"field\": \"vendor\",\n      \"value\": \"abcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyz\",\n      \"serialNumber\": \"R7QFDE2YCFN4\",\n      \"line\": 5,\n      \"fieldSize\": 60,\n      \"deviceType\": \"Computer\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "ldap",
			"item": [
				{
					"name": "Retrieve the configured access groups that contain the text in the search param\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ldap/groups?q=null",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ldap",
								"groups"
							],
							"query": [
								{
									"key": "q",
									"value": "null",
									"description": "Will perform a \"contains\" search on the names of access groups"
								}
							]
						},
						"description": "Retrieves the configured access groups that contain the text in the searchParam."
					},
					"response": [
						{
							"name": "Successful search.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ldap/groups?q=null",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ldap",
										"groups"
									],
									"query": [
										{
											"key": "q",
											"value": "null"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"id\": \"1\",\n      \"uuid\": \"89AF33FC-123C-1231-AEFD-9C3ED123AFCC\",\n      \"ldapServerId\": 1,\n      \"name\": \"Grade School Teachers\",\n      \"distinguishedName\": \"Grade School Teachers\"\n    },\n    {\n      \"id\": \"1\",\n      \"uuid\": \"89AF33FC-123C-1231-AEFD-9C3ED123AFCC\",\n      \"ldapServerId\": 1,\n      \"name\": \"Grade School Teachers\",\n      \"distinguishedName\": \"Grade School Teachers\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Retrieve all Servers including LDAP and Cloud Identity Providers.\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/ldap/servers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"ldap",
								"servers"
							]
						},
						"description": "Retrieve all Servers including LDAP and Cloud Identity Providers."
					},
					"response": [
						{
							"name": "Successfully completed.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/ldap/servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"ldap",
										"servers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 1,\n    \"name\": \"Server name\"\n  },\n  {\n    \"id\": 1,\n    \"name\": \"Server name\"\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "notifications/alerts",
			"item": [
				{
					"name": "Get Notifications for user and site\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notifications/alerts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"alerts"
							]
						},
						"description": "Gets notifications for user and site\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications/alerts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"alerts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"type\": \"EXCEEDED_LICENSE_COUNT\",\n    \"id\": 1,\n    \"params\": {}\n  },\n  {\n    \"type\": \"EXCEEDED_LICENSE_COUNT\",\n    \"id\": 1,\n    \"params\": {}\n  }\n]"
						}
					]
				},
				{
					"name": "DEPRECATED - USE \"alerts/{type}/{id}\" INSTEAD. Deletes only Patch Management notifications.\n",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notifications/alerts/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"alerts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "44454440",
									"description": "(Required) instance ID of the notification"
								}
							]
						},
						"description": "DEPRECATED - USE \"alerts/{type}/{id}\" INSTEAD. Deletes only Patch Management notifications.\n"
					},
					"response": [
						{
							"name": "Sucessful deletion",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications/alerts/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"alerts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) instance ID of the notification"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Delete Notifications\n",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/notifications/alerts/:type/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications",
								"alerts",
								":type",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "44454440",
									"description": "(Required) instance ID of the notification"
								},
								{
									"key": "type",
									"value": "LDAP_CONNECTION_CHECK_THROUGH_JIM_FAILED",
									"description": "(Required) type of the notification"
								}
							]
						},
						"description": "Deletes notifications. Option for 'type' is 'PATCH_UPDATE'.\n"
					},
					"response": [
						{
							"name": "Sucessful deletion",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications/alerts/:type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										"alerts",
										":type",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) instance ID of the notification"
										},
										{
											"key": "type",
											"value": "LDAP_CONNECTION_CHECK_THROUGH_JIM_FAILED",
											"description": "(Required) type of the notification"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "patch",
			"item": [
				{
					"name": "obj",
					"item": [
						{
							"name": "policy/{id}",
							"item": [
								{
									"name": "Return Patch Policy Summary\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/patch/obj/policy/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												"obj",
												"policy",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) patch policy id"
												}
											]
										},
										"description": "Returns patch policy summary."
									},
									"response": [
										{
											"name": "Patch policy summary found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/patch/obj/policy/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"patch",
														"obj",
														"policy",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) patch policy id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"policyId\": 1,\n  \"policyName\": \"Policy name\",\n  \"isPolicyEnabled\": false,\n  \"policyTargetVersion\": \"v1\",\n  \"policyDeploymentMethod\": \"automatically\",\n  \"softwareTitle\": \"Software title\",\n  \"softwareTitleConfigurationId\": 1,\n  \"pending\": 0,\n  \"completed\": 0,\n  \"deferred\": 0,\n  \"failed\": 0\n}"
										}
									]
								},
								{
									"name": "Return the count of the Patch Policy Logs for the policy is that are eligible for a retry attempt\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/patch/obj/policy/:id/logs/eligibleRetryCount",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												"obj",
												"policy",
												":id",
												"logs",
												"eligibleRetryCount"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) policy id"
												}
											]
										},
										"description": "return the count of the patch policy logs for the policy ID that are eligible for a retry attempt"
									},
									"response": [
										{
											"name": "Number of patch policy logs found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/patch/obj/policy/:id/logs/eligibleRetryCount",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"patch",
														"obj",
														"policy",
														":id",
														"logs",
														"eligibleRetryCount"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) policy id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "44454440"
										}
									]
								},
								{
									"name": "Return the Software Title Configuration Id for the given patch\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/patch/obj/policy/:id/softwareTitleConfigurationId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												"obj",
												"policy",
												":id",
												"softwareTitleConfigurationId"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) policy id"
												}
											]
										},
										"description": "Return the Software Title Configuration Id for the given patch policy."
									},
									"response": [
										{
											"name": "Found software title configuration id",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/patch/obj/policy/:id/softwareTitleConfigurationId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"patch",
														"obj",
														"policy",
														":id",
														"softwareTitleConfigurationId"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) policy id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "44454440"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Return Active Patch Summary\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/patch/obj/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												"obj",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) patch id"
												}
											]
										},
										"description": "Returns active patch summary."
									},
									"response": [
										{
											"name": "Active Patch Summary",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/patch/obj/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"patch",
														"obj",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) patch id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"softwareTitleID\": 1,\n  \"title\": \"Patch title\",\n  \"latestVersion\": \"2\",\n  \"releaseDate\": \"2018-10-15T16:39:56.307Z\",\n  \"upToDate\": 3,\n  \"outOfDate\": 6,\n  \"isOnDashboard\": false,\n  \"softwareTitleConfigurationID\": 1\n}"
										}
									]
								},
								{
									"name": "Update patch report\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"softwareTitleID\": 1,\n  \"title\": \"Patch title\",\n  \"latestVersion\": \"2\",\n  \"releaseDate\": \"2018-10-15T16:39:56.307Z\",\n  \"upToDate\": 3,\n  \"outOfDate\": 6,\n  \"isOnDashboard\": false,\n  \"softwareTitleConfigurationID\": 1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/patch/obj/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												"obj",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) patch id"
												}
											]
										},
										"description": "Updates patch report."
									},
									"response": [
										{
											"name": "Active Patch Summary",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"softwareTitleID\": 1,\n  \"title\": \"Patch title\",\n  \"latestVersion\": \"2\",\n  \"releaseDate\": \"2018-10-15T16:39:56.307Z\",\n  \"upToDate\": 3,\n  \"outOfDate\": 6,\n  \"isOnDashboard\": false,\n  \"softwareTitleConfigurationID\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/patch/obj/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"patch",
														"obj",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) patch id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"softwareTitleID\": 1,\n  \"title\": \"Patch title\",\n  \"latestVersion\": \"2\",\n  \"releaseDate\": \"2018-10-15T16:39:56.307Z\",\n  \"upToDate\": 3,\n  \"outOfDate\": 6,\n  \"isOnDashboard\": false,\n  \"softwareTitleConfigurationID\": 1\n}"
										}
									]
								},
								{
									"name": "Return patch versions\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/patch/obj/:id/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												"obj",
												":id",
												"versions"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) patch id"
												}
											]
										},
										"description": "Returns patch versions."
									},
									"response": [
										{
											"name": "Patch versions",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/patch/obj/:id/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"patch",
														"obj",
														":id",
														"versions"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) patch id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"absoluteOrderId\": 1,\n    \"version\": \"3\",\n    \"onVersion\": 1\n  },\n  {\n    \"absoluteOrderId\": 1,\n    \"version\": \"3\",\n    \"onVersion\": 1\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "Return the Summaries of the Patch Policies for the software title\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/patch/obj/softwareTitle/:id/policies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"obj",
										"softwareTitle",
										":id",
										"policies"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) software title id"
										}
									]
								},
								"description": "Returns the summaries of the patch policies for the software title."
							},
							"response": [
								{
									"name": "Software Title patch policy summaries found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/patch/obj/softwareTitle/:id/policies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												"obj",
												"softwareTitle",
												":id",
												"policies"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) software title id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"policyId\": 1,\n      \"policyName\": \"Policy name\",\n      \"isPolicyEnabled\": false,\n      \"policyTargetVersion\": \"v1\",\n      \"policyDeploymentMethod\": \"automatically\",\n      \"softwareTitle\": \"Software title\",\n      \"softwareTitleConfigurationId\": 1,\n      \"pending\": 0,\n      \"completed\": 0,\n      \"deferred\": 0,\n      \"failed\": 0\n    },\n    {\n      \"policyId\": 1,\n      \"policyName\": \"Policy name\",\n      \"isPolicyEnabled\": false,\n      \"policyTargetVersion\": \"v1\",\n      \"policyDeploymentMethod\": \"automatically\",\n      \"softwareTitle\": \"Software title\",\n      \"softwareTitleConfigurationId\": 1,\n      \"pending\": 0,\n      \"completed\": 0,\n      \"deferred\": 0,\n      \"failed\": 0\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Return the Software Title Configuration\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/patch/obj/softwareTitleConfiguration/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"obj",
										"softwareTitleConfiguration",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) software title configuration id"
										}
									]
								},
								"description": "Returns the software title configuration."
							},
							"response": [
								{
									"name": "Software Title Configuration found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/patch/obj/softwareTitleConfiguration/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												"obj",
												"softwareTitleConfiguration",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) software title configuration id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"displayName\": \"Configuration name\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "patch-policies",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "dashboard",
									"item": [
										{
											"name": "Return whether or not the requested patch policy is on the dashboard\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/patch/patch-policies/:id/dashboard",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"patch",
														"patch-policies",
														":id",
														"dashboard"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) patch policy id"
														}
													]
												},
												"description": "Returns whether or not the requested patch policy is on the dashboard"
											},
											"response": [
												{
													"name": "Whether the Patch Policy is on the Dashboard.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/patch/patch-policies/:id/dashboard",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"patch",
																"patch-policies",
																":id",
																"dashboard"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) patch policy id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"isOnDashboard\": true\n}"
												},
												{
													"name": "The requested Patch Policy does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/patch/patch-policies/:id/dashboard",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"patch",
																"patch-policies",
																":id",
																"dashboard"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) patch policy id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add a patch policy to the dashboard\n",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/patch/patch-policies/:id/dashboard",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"patch",
														"patch-policies",
														":id",
														"dashboard"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) patch policy id"
														}
													]
												},
												"description": "Adds a patch policy to the dashboard."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/patch/patch-policies/:id/dashboard",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"patch",
																"patch-policies",
																":id",
																"dashboard"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) patch policy id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Remove a patch policy from the dashboard\n",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/patch/patch-policies/:id/dashboard",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"patch",
														"patch-policies",
														":id",
														"dashboard"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) patch id"
														}
													]
												},
												"description": "Removes a patch policy from the dashboard."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/patch/patch-policies/:id/dashboard",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"patch",
																"patch-policies",
																":id",
																"dashboard"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) patch id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Return the Patch Policy Attempt details\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/patch/patch-policies/:id/logs?device-id=44454440",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												"patch-policies",
												":id",
												"logs"
											],
											"query": [
												{
													"key": "device-id",
													"value": "44454440",
													"description": "device id"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) patch policy id"
												}
											]
										},
										"description": "Returns the patch policy attempt details"
									},
									"response": [
										{
											"name": "Patch Policy Attempt Details",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/patch/patch-policies/:id/logs?device-id=44454440",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"patch",
														"patch-policies",
														":id",
														"logs"
													],
													"query": [
														{
															"key": "device-id",
															"value": "44454440"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) patch policy id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": 1,\n    \"attemptNo\": 1,\n    \"deviceId\": 1,\n    \"actions\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"actionOrder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"action\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"actionOrder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"action\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  },\n  {\n    \"id\": 1,\n    \"attemptNo\": 1,\n    \"deviceId\": 1,\n    \"actions\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"actionOrder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"action\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"actionOrder\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        \"action\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ]\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "Return a list of patch policies\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/patch/patch-policies?onDashboard=false&enabled=false",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"patch-policies"
									],
									"query": [
										{
											"key": "onDashboard",
											"value": "false",
											"description": "Filters whether or not the patch policies are on the dashboard."
										},
										{
											"key": "enabled",
											"value": "false",
											"description": "Filters whether or not the patch policies are enabled."
										}
									]
								},
								"description": "Returns a list of patch policies."
							},
							"response": [
								{
									"name": "Filtered list of patch policy summaries",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/patch/patch-policies?onDashboard=false&enabled=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												"patch-policies"
											],
											"query": [
												{
													"key": "onDashboard",
													"value": "false"
												},
												{
													"key": "enabled",
													"value": "false"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"policyId\": 1,\n    \"policyName\": \"Policy name\",\n    \"isPolicyEnabled\": false,\n    \"policyTargetVersion\": \"v1\",\n    \"policyDeploymentMethod\": \"automatically\",\n    \"softwareTitle\": \"Software title\",\n    \"softwareTitleConfigurationId\": 1,\n    \"pending\": 0,\n    \"completed\": 0,\n    \"deferred\": 0,\n    \"failed\": 0\n  },\n  {\n    \"policyId\": 1,\n    \"policyName\": \"Policy name\",\n    \"isPolicyEnabled\": false,\n    \"policyTargetVersion\": \"v1\",\n    \"policyDeploymentMethod\": \"automatically\",\n    \"softwareTitle\": \"Software title\",\n    \"softwareTitleConfigurationId\": 1,\n    \"pending\": 0,\n    \"completed\": 0,\n    \"deferred\": 0,\n    \"failed\": 0\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "svc",
					"item": [
						{
							"name": "Accept Patch reporting disclaimer\n",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/patch/svc/disclaimerAgree",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"svc",
										"disclaimerAgree"
									]
								},
								"description": "Accept Patch reporting disclaimer"
							},
							"response": [
								{
									"name": "Accepted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/patch/svc/disclaimerAgree",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												"svc",
												"disclaimerAgree"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retry policy\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"patchPolicyId\": 1,\n  \"deviceIds\": [\n    1,\n    3\n  ],\n  \"isRetryAllFailed\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/patch/svc/retryPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"svc",
										"retryPolicy"
									]
								},
								"description": "Retry policy"
							},
							"response": [
								{
									"name": "Accepted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"patchPolicyId\": 1,\n  \"deviceIds\": [\n    1,\n    3\n  ],\n  \"isRetryAllFailed\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/patch/svc/retryPolicy",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												"svc",
												"retryPolicy"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "Return Active Patch Summary\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/patch/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) patch id"
										}
									]
								},
								"description": "Returns active patch summary."
							},
							"response": [
								{
									"name": "Active Patch Summary",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/patch/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) patch id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"softwareTitleID\": 1,\n  \"title\": \"Patch title\",\n  \"latestVersion\": \"2\",\n  \"releaseDate\": \"2018-10-15T16:39:56.307Z\",\n  \"upToDate\": 3,\n  \"outOfDate\": 6,\n  \"isOnDashboard\": false,\n  \"softwareTitleConfigurationID\": 1\n}"
								}
							]
						},
						{
							"name": "Update patch report\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"softwareTitleID\": 1,\n  \"title\": \"Patch title\",\n  \"latestVersion\": \"2\",\n  \"releaseDate\": \"2018-10-15T16:39:56.307Z\",\n  \"upToDate\": 3,\n  \"outOfDate\": 6,\n  \"isOnDashboard\": false,\n  \"softwareTitleConfigurationID\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/patch/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) patch id"
										}
									]
								},
								"description": "Updates patch report."
							},
							"response": [
								{
									"name": "Active Patch Summary",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"softwareTitleID\": 1,\n  \"title\": \"Patch title\",\n  \"latestVersion\": \"2\",\n  \"releaseDate\": \"2018-10-15T16:39:56.307Z\",\n  \"upToDate\": 3,\n  \"outOfDate\": 6,\n  \"isOnDashboard\": false,\n  \"softwareTitleConfigurationID\": 1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/patch/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) patch id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"softwareTitleID\": 1,\n  \"title\": \"Patch title\",\n  \"latestVersion\": \"2\",\n  \"releaseDate\": \"2018-10-15T16:39:56.307Z\",\n  \"upToDate\": 3,\n  \"outOfDate\": 6,\n  \"isOnDashboard\": false,\n  \"softwareTitleConfigurationID\": 1\n}"
								}
							]
						},
						{
							"name": "Return patch versions\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/patch/:id/versions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										":id",
										"versions"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) patch id"
										}
									]
								},
								"description": "Returns patch versions."
							},
							"response": [
								{
									"name": "Patch versions",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/patch/:id/versions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"patch",
												":id",
												"versions"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) patch id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"absoluteOrderId\": 1,\n    \"version\": \"3\",\n    \"onVersion\": 1\n  },\n  {\n    \"absoluteOrderId\": 1,\n    \"version\": \"3\",\n    \"onVersion\": 1\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "Accept Patch reporting disclaimer\n",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/patch/disclaimerAgree",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patch",
								"disclaimerAgree"
							]
						},
						"description": "Accept Patch reporting disclaimer"
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/patch/disclaimerAgree",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"disclaimerAgree"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Return Patch Policy Summary\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/patch/objs/policy/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patch",
								"objs",
								"policy",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "44454440",
									"description": "(Required) patch policy id"
								}
							]
						},
						"description": "Returns patch policy summary."
					},
					"response": [
						{
							"name": "Patch policy summary found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/patch/objs/policy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"objs",
										"policy",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) patch policy id"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"policyId\": 1,\n  \"policyName\": \"Policy name\",\n  \"isPolicyEnabled\": false,\n  \"policyTargetVersion\": \"v1\",\n  \"policyDeploymentMethod\": \"automatically\",\n  \"softwareTitle\": \"Software title\",\n  \"softwareTitleConfigurationId\": 1,\n  \"pending\": 0,\n  \"completed\": 0,\n  \"deferred\": 0,\n  \"failed\": 0\n}"
						}
					]
				},
				{
					"name": "Return list of Patch ids on dashboard\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/patch/onDashboard",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patch",
								"onDashboard"
							]
						},
						"description": "Returns list of patch ids on dashboard."
					},
					"response": [
						{
							"name": "Instance IDs returned in associated array, or if no instances present, an empty array shall be returned.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/patch/onDashboard",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"onDashboard"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  -49535941,\n  -49385900\n]"
						}
					]
				},
				{
					"name": "Retry policy\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"patchPolicyId\": 1,\n  \"deviceIds\": [\n    1,\n    3\n  ],\n  \"isRetryAllFailed\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/patch/retryPolicy",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patch",
								"retryPolicy"
							]
						},
						"description": "Retry policy"
					},
					"response": [
						{
							"name": "Accepted",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"patchPolicyId\": 1,\n  \"deviceIds\": [\n    1,\n    3\n  ],\n  \"isRetryAllFailed\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/patch/retryPolicy",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"retryPolicy"
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Search the history for a Specific Active Patch\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pageNumber\": 1,\n  \"pageSize\": 100,\n  \"isLoadToEnd\": false,\n  \"softwareTitleID\": 1,\n  \"softwareTitleConfigurationID\": 1,\n  \"orderBy\": [\n    {\n      \"field\": \"Name\",\n      \"direction\": \"DESC\"\n    },\n    {\n      \"field\": \"Name\",\n      \"direction\": \"DESC\"\n    }\n  ],\n  \"filter\": [\n    {\n      \"field\": \"name\",\n      \"operator\": \"EQUALS\",\n      \"value\": \"value\"\n    },\n    {\n      \"field\": \"name\",\n      \"operator\": \"EQUALS\",\n      \"value\": \"value\"\n    }\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/patch/searchActivePatchHistory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patch",
								"searchActivePatchHistory"
							]
						},
						"description": "Searches the history for a specific active patch.  This is used to get detailed information about the computers/devices that a specific patch has been applied to."
					},
					"response": [
						{
							"name": "Search results.  No matches will be indicated by the return of an empty list.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pageNumber\": 1,\n  \"pageSize\": 100,\n  \"isLoadToEnd\": false,\n  \"softwareTitleID\": 1,\n  \"softwareTitleConfigurationID\": 1,\n  \"orderBy\": [\n    {\n      \"field\": \"Name\",\n      \"direction\": \"DESC\"\n    },\n    {\n      \"field\": \"Name\",\n      \"direction\": \"DESC\"\n    }\n  ],\n  \"filter\": [\n    {\n      \"field\": \"name\",\n      \"operator\": \"EQUALS\",\n      \"value\": \"value\"\n    },\n    {\n      \"field\": \"name\",\n      \"operator\": \"EQUALS\",\n      \"value\": \"value\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/patch/searchActivePatchHistory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"searchActivePatchHistory"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"patchId\": 1,\n      \"patchHistoryId\": 1,\n      \"deviceId\": 1,\n      \"deviceName\": \"iPad\",\n      \"buildingId\": 1,\n      \"buildingName\": \"The Empire State Building\",\n      \"departmentId\": 1,\n      \"departmentName\": \"Department of Redundancy Department\",\n      \"siteId\": -1,\n      \"siteName\": \"Eau Claire\",\n      \"username\": \"admin\",\n      \"osVersion\": \"11.4\",\n      \"lastCheckIn\": \"2018-10-15T16:39:56.307Z\",\n      \"installedVersion\": \"0.0.1\"\n    },\n    {\n      \"patchId\": 1,\n      \"patchHistoryId\": 1,\n      \"deviceId\": 1,\n      \"deviceName\": \"iPad\",\n      \"buildingId\": 1,\n      \"buildingName\": \"The Empire State Building\",\n      \"departmentId\": 1,\n      \"departmentName\": \"Department of Redundancy Department\",\n      \"siteId\": -1,\n      \"siteName\": \"Eau Claire\",\n      \"username\": \"admin\",\n      \"osVersion\": \"11.4\",\n      \"lastCheckIn\": \"2018-10-15T16:39:56.307Z\",\n      \"installedVersion\": \"0.0.1\"\n    }\n  ],\n  \"totalCount\": 3\n}"
						}
					]
				},
				{
					"name": "Return Patch Policy Logs\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pageNumber\": 1,\n  \"pageSize\": 100,\n  \"orderBy\": [\n    {\n      \"field\": \"Name\",\n      \"direction\": \"DESC\"\n    },\n    {\n      \"field\": \"Name\",\n      \"direction\": \"DESC\"\n    }\n  ],\n  \"filter\": [\n    {\n      \"field\": \"name\",\n      \"operator\": \"EQUALS\",\n      \"value\": \"value\"\n    },\n    {\n      \"field\": \"name\",\n      \"operator\": \"EQUALS\",\n      \"value\": \"value\"\n    }\n  ],\n  \"isLoadToEnd\": false,\n  \"patchPolicyId\": 1,\n  \"isLatest\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/patch/searchPatchPolicyLogs",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"patch",
								"searchPatchPolicyLogs"
							]
						},
						"description": "Return patch policy logs"
					},
					"response": [
						{
							"name": "Patch policy logs found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pageNumber\": 1,\n  \"pageSize\": 100,\n  \"orderBy\": [\n    {\n      \"field\": \"Name\",\n      \"direction\": \"DESC\"\n    },\n    {\n      \"field\": \"Name\",\n      \"direction\": \"DESC\"\n    }\n  ],\n  \"filter\": [\n    {\n      \"field\": \"name\",\n      \"operator\": \"EQUALS\",\n      \"value\": \"value\"\n    },\n    {\n      \"field\": \"name\",\n      \"operator\": \"EQUALS\",\n      \"value\": \"value\"\n    }\n  ],\n  \"isLoadToEnd\": false,\n  \"patchPolicyId\": 1,\n  \"isLatest\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/patch/searchPatchPolicyLogs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"patch",
										"searchPatchPolicyLogs"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"results\": [\n    {\n      \"patchPolicyId\": 1,\n      \"deviceId\": 1,\n      \"deviceName\": \"iPad\",\n      \"statusCode\": 1,\n      \"statusMessage\": \"Completed\",\n      \"statusDate\": \"2019-02-04T21:09:31.661Z\",\n      \"attempt\": 1,\n      \"ignored\": 1\n    },\n    {\n      \"patchPolicyId\": 1,\n      \"deviceId\": 1,\n      \"deviceName\": \"iPad\",\n      \"statusCode\": 1,\n      \"statusMessage\": \"Completed\",\n      \"statusDate\": \"2019-02-04T21:09:31.661Z\",\n      \"attempt\": 1,\n      \"ignored\": 1\n    }\n  ],\n  \"totalCount\": 3\n}"
						}
					]
				}
			]
		},
		{
			"name": "preview",
			"item": [
				{
					"name": "remote-administration-configurations",
					"item": [
						{
							"name": "team-viewer",
							"item": [
								{
									"name": "{configuration Id}/sessions",
									"item": [
										{
											"name": "{session Id}",
											"item": [
												{
													"name": "Get a session by its ID\n",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":configurationId",
																"sessions",
																":sessionId"
															],
															"variable": [
																{
																	"key": "configurationId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																},
																{
																	"key": "sessionId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer session"
																}
															]
														},
														"description": "Returns a session details if found."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"preview",
																		"remote-administration-configurations",
																		"team-viewer",
																		":configurationId",
																		"sessions",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "configurationId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer connection configuration"
																		},
																		{
																			"key": "sessionId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer session"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"1\",\n  \"code\": \"s1234-5678\",\n  \"description\": \"Customer reported that he cannot install application X\",\n  \"supporterLink\": \"https://get.teamviewer.com/v15/en/s12345678-a1b2c3d4e5f6\",\n  \"endUserLink\": \"https://get.teamviewer.com/v15/en/s12345678\",\n  \"deviceId\": \"1\",\n  \"deviceName\": \"Przemek MacBook Pro\",\n  \"deviceType\": \"COMPUTER\",\n  \"state\": \"OPEN\",\n  \"creatorId\": \"1\",\n  \"creatorName\": \"creator\",\n  \"createdAt\": \"2021-06-10T12:00:00Z\"\n}"
														},
														{
															"name": "Insufficient privileges",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"preview",
																		"remote-administration-configurations",
																		"team-viewer",
																		":configurationId",
																		"sessions",
																		":sessionId"
																	],
																	"variable": [
																		{
																			"key": "configurationId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer connection configuration"
																		},
																		{
																			"key": "sessionId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer session"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Close a session",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId/close",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":configurationId",
																"sessions",
																":sessionId",
																"close"
															],
															"variable": [
																{
																	"key": "configurationId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																},
																{
																	"key": "sessionId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer session"
																}
															]
														},
														"description": "Changes the session state from open to close. Closing a session means it is not possible to establish new remote connection between devices"
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId/close",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"preview",
																		"remote-administration-configurations",
																		"team-viewer",
																		":configurationId",
																		"sessions",
																		":sessionId",
																		"close"
																	],
																	"variable": [
																		{
																			"key": "configurationId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer connection configuration"
																		},
																		{
																			"key": "sessionId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer session"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Insufficient privileges",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId/close",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"preview",
																		"remote-administration-configurations",
																		"team-viewer",
																		":configurationId",
																		"sessions",
																		":sessionId",
																		"close"
																	],
																	"variable": [
																		{
																			"key": "configurationId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer connection configuration"
																		},
																		{
																			"key": "sessionId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer session"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														},
														{
															"name": "Connection configuration is not active",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId/close",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"preview",
																		"remote-administration-configurations",
																		"team-viewer",
																		":configurationId",
																		"sessions",
																		":sessionId",
																		"close"
																	],
																	"variable": [
																		{
																			"key": "configurationId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer connection configuration"
																		},
																		{
																			"key": "sessionId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer session"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Resend nofications for a session",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId/resend-notification",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":configurationId",
																"sessions",
																":sessionId",
																"resend-notification"
															],
															"variable": [
																{
																	"key": "configurationId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																},
																{
																	"key": "sessionId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer session"
																}
															]
														},
														"description": "Resends configured notifications (e.g. Self Service push notifications)."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId/resend-notification",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"preview",
																		"remote-administration-configurations",
																		"team-viewer",
																		":configurationId",
																		"sessions",
																		":sessionId",
																		"resend-notification"
																	],
																	"variable": [
																		{
																			"key": "configurationId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer connection configuration"
																		},
																		{
																			"key": "sessionId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer session"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Insufficient privileges",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId/resend-notification",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"preview",
																		"remote-administration-configurations",
																		"team-viewer",
																		":configurationId",
																		"sessions",
																		":sessionId",
																		"resend-notification"
																	],
																	"variable": [
																		{
																			"key": "configurationId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer connection configuration"
																		},
																		{
																			"key": "sessionId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer session"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														},
														{
															"name": "Connection configuration is not active or session is already closed",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId/resend-notification",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"preview",
																		"remote-administration-configurations",
																		"team-viewer",
																		":configurationId",
																		"sessions",
																		":sessionId",
																		"resend-notification"
																	],
																	"variable": [
																		{
																			"key": "configurationId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer connection configuration"
																		},
																		{
																			"key": "sessionId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer session"
																		}
																	]
																}
															},
															"status": "Conflict",
															"code": 409,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Get a session status by its ID\n",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":configurationId",
																"sessions",
																":sessionId",
																"status"
															],
															"variable": [
																{
																	"key": "configurationId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																},
																{
																	"key": "sessionId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer session"
																}
															]
														},
														"description": "Returns a session status if found."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId/status",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"preview",
																		"remote-administration-configurations",
																		"team-viewer",
																		":configurationId",
																		"sessions",
																		":sessionId",
																		"status"
																	],
																	"variable": [
																		{
																			"key": "configurationId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer connection configuration"
																		},
																		{
																			"key": "sessionId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer session"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"sessionState\": \"OPEN\",\n  \"online\": true\n}"
														},
														{
															"name": "Insufficient privileges",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId/status",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"preview",
																		"remote-administration-configurations",
																		"team-viewer",
																		":configurationId",
																		"sessions",
																		":sessionId",
																		"status"
																	],
																	"variable": [
																		{
																			"key": "configurationId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer connection configuration"
																		},
																		{
																			"key": "sessionId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer session"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														},
														{
															"name": "Team Viewer session status not found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions/:sessionId/status",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"preview",
																		"remote-administration-configurations",
																		"team-viewer",
																		":configurationId",
																		"sessions",
																		":sessionId",
																		"status"
																	],
																	"variable": [
																		{
																			"key": "configurationId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer connection configuration"
																		},
																		{
																			"key": "sessionId",
																			"value": "in aute",
																			"description": "(Required) ID of the Team Viewer session"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Get a paginated list of sessions\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions?page=0&page-size=100&filter=deviceId==1 and deviceType==\"COMPUTER\" and state==\"OPEN\"",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"preview",
														"remote-administration-configurations",
														"team-viewer",
														":configurationId",
														"sessions"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "filter",
															"value": "deviceId==1 and deviceType==\"COMPUTER\" and state==\"OPEN\"",
															"description": "Query in the RSQL format, allowing to filter sessions collection.\nDefault filter is empty query - returning all results for the requested page.\n\nFields allowed in the query: `deviceId`, `deviceType`, `state`\n\nThis param can be combined with paging.\n"
														}
													],
													"variable": [
														{
															"key": "configurationId",
															"value": "in aute",
															"description": "(Required) ID of the Team Viewer connection configuration"
														}
													]
												},
												"description": "Returns a paginated list of sessions for a given configuration ID"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions?page=0&page-size=100&filter=deviceId==1 and deviceType==\"COMPUTER\" and state==\"OPEN\"",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":configurationId",
																"sessions"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "deviceId==1 and deviceType==\"COMPUTER\" and state==\"OPEN\""
																}
															],
															"variable": [
																{
																	"key": "configurationId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": \"1\",\n      \"code\": \"s1234-5678\",\n      \"description\": \"Customer reported that he cannot install application X\",\n      \"supporterLink\": \"https://get.teamviewer.com/v15/en/s12345678-a1b2c3d4e5f6\",\n      \"endUserLink\": \"https://get.teamviewer.com/v15/en/s12345678\",\n      \"deviceId\": \"1\",\n      \"deviceName\": \"Przemek MacBook Pro\",\n      \"deviceType\": \"COMPUTER\",\n      \"state\": \"OPEN\",\n      \"creatorId\": \"1\",\n      \"creatorName\": \"creator\",\n      \"createdAt\": \"2021-06-10T12:00:00Z\"\n    },\n    {\n      \"id\": \"1\",\n      \"code\": \"s1234-5678\",\n      \"description\": \"Customer reported that he cannot install application X\",\n      \"supporterLink\": \"https://get.teamviewer.com/v15/en/s12345678-a1b2c3d4e5f6\",\n      \"endUserLink\": \"https://get.teamviewer.com/v15/en/s12345678\",\n      \"deviceId\": \"1\",\n      \"deviceName\": \"Przemek MacBook Pro\",\n      \"deviceType\": \"COMPUTER\",\n      \"state\": \"OPEN\",\n      \"creatorId\": \"1\",\n      \"creatorName\": \"creator\",\n      \"createdAt\": \"2021-06-10T12:00:00Z\"\n    }\n  ]\n}"
												},
												{
													"name": "Insufficient privileges",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions?page=0&page-size=100&filter=deviceId==1 and deviceType==\"COMPUTER\" and state==\"OPEN\"",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":configurationId",
																"sessions"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "filter",
																	"value": "deviceId==1 and deviceType==\"COMPUTER\" and state==\"OPEN\""
																}
															],
															"variable": [
																{
																	"key": "configurationId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Create a new session",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Customer reported that he cannot install application X\",\n  \"deviceId\": \"1\",\n  \"deviceType\": \"COMPUTER\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"preview",
														"remote-administration-configurations",
														"team-viewer",
														":configurationId",
														"sessions"
													],
													"variable": [
														{
															"key": "configurationId",
															"value": "in aute",
															"description": "(Required) ID of the Team Viewer connection configuration"
														}
													]
												},
												"description": "Creates a new Team Viewer session to be used to establish a remote connection"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"Customer reported that he cannot install application X\",\n  \"deviceId\": \"1\",\n  \"deviceType\": \"COMPUTER\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":configurationId",
																"sessions"
															],
															"variable": [
																{
																	"key": "configurationId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
												},
												{
													"name": "Invalid attributes for Team Viewer session",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"Customer reported that he cannot install application X\",\n  \"deviceId\": \"1\",\n  \"deviceType\": \"COMPUTER\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":configurationId",
																"sessions"
															],
															"variable": [
																{
																	"key": "configurationId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Insufficient privileges",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"Customer reported that he cannot install application X\",\n  \"deviceId\": \"1\",\n  \"deviceType\": \"COMPUTER\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":configurationId",
																"sessions"
															],
															"variable": [
																{
																	"key": "configurationId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Connection configuration is not active or there is an active session for the device",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": \"Customer reported that he cannot install application X\",\n  \"deviceId\": \"1\",\n  \"deviceType\": \"COMPUTER\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:configurationId/sessions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":configurationId",
																"sessions"
															],
															"variable": [
																{
																	"key": "configurationId",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get Team Viewer Remote Administration connection configuration",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"preview",
														"remote-administration-configurations",
														"team-viewer",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) ID of the Team Viewer connection configuration"
														}
													]
												},
												"description": "Returns Team Viewer Remote Administration connection configuration"
											},
											"response": [
												{
													"name": "Returns Team Viewer connection configuration response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"displayName\": \"teamViewerConfiguration\",\n  \"enabled\": true,\n  \"id\": \"1\",\n  \"sessionTimeout\": 15,\n  \"siteId\": \"1\"\n}"
												},
												{
													"name": "Team Viewer connection configuration does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete Team Viewer Remote Administration connection configuration",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"preview",
														"remote-administration-configurations",
														"team-viewer",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) ID of the Team Viewer connection configuration"
														}
													]
												},
												"description": "Deletes Team Viewer Remote Administration connection configuration"
											},
											"response": [
												{
													"name": "Team Viewer connection configuration deleted successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Update Team Viewer Remote Administration connection configuration",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"teamViewerConfiguration\",\n  \"enabled\": true,\n  \"sessionTimeout\": 15,\n  \"token\": \"12843140-nPAX96bsaADH4Gz6K6i2\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"preview",
														"remote-administration-configurations",
														"team-viewer",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) ID of the Team Viewer connection configuration"
														}
													]
												},
												"description": "Updates Team Viewer Remote Administration connection configuration"
											},
											"response": [
												{
													"name": "Team Viewer connection configuration updated successfully",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"displayName\": \"teamViewerConfiguration\",\n  \"enabled\": true,\n  \"sessionTimeout\": 15,\n  \"token\": \"12843140-nPAX96bsaADH4Gz6K6i2\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"displayName\": \"teamViewerConfiguration\",\n  \"enabled\": true,\n  \"id\": \"1\",\n  \"sessionTimeout\": 15,\n  \"siteId\": \"1\"\n}"
												},
												{
													"name": "Invalid field for Team Viewer connection configuration update request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"displayName\": \"teamViewerConfiguration\",\n  \"enabled\": true,\n  \"sessionTimeout\": 15,\n  \"token\": \"12843140-nPAX96bsaADH4Gz6K6i2\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Team Viewer connection configuration does not exist",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"displayName\": \"teamViewerConfiguration\",\n  \"enabled\": true,\n  \"sessionTimeout\": 15,\n  \"token\": \"12843140-nPAX96bsaADH4Gz6K6i2\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Get Team Viewer Remote Administration connection status",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:id/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"preview",
														"remote-administration-configurations",
														"team-viewer",
														":id",
														"status"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) ID of the Team Viewer connection configuration"
														}
													]
												},
												"description": "Returns Team Viewer Remote Administration connection status"
											},
											"response": [
												{
													"name": "Returns Team Viewer connection status response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer/:id/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"preview",
																"remote-administration-configurations",
																"team-viewer",
																":id",
																"status"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Team Viewer connection configuration"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"connectionVerificationResult\": \"VALID\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create Team Viewer Remote Administration connection configuration",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"teamViewerConfiguration\",\n  \"enabled\": true,\n  \"scriptToken\": \"12847340-nPAX96bsaADH4Gz6K6i2\",\n  \"sessionTimeout\": 15,\n  \"siteId\": \"1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"preview",
												"remote-administration-configurations",
												"team-viewer"
											]
										},
										"description": "Creates Team Viewer Remote Administration connection configuration"
									},
									"response": [
										{
											"name": "Team Viewer connection configuration created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"teamViewerConfiguration\",\n  \"enabled\": true,\n  \"scriptToken\": \"12847340-nPAX96bsaADH4Gz6K6i2\",\n  \"sessionTimeout\": 15,\n  \"siteId\": \"1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"preview",
														"remote-administration-configurations",
														"team-viewer"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "Invalid field for Team Viewer connection configuration",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"teamViewerConfiguration\",\n  \"enabled\": true,\n  \"scriptToken\": \"12847340-nPAX96bsaADH4Gz6K6i2\",\n  \"sessionTimeout\": 15,\n  \"siteId\": \"1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"preview",
														"remote-administration-configurations",
														"team-viewer"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Insufficient privileges or site not found for Team Viewer connection configuration",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"teamViewerConfiguration\",\n  \"enabled\": true,\n  \"scriptToken\": \"12847340-nPAX96bsaADH4Gz6K6i2\",\n  \"sessionTimeout\": 15,\n  \"siteId\": \"1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"preview",
														"remote-administration-configurations",
														"team-viewer"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Site limit exceeded for Team Viewer connection configuration",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"teamViewerConfiguration\",\n  \"enabled\": true,\n  \"scriptToken\": \"12847340-nPAX96bsaADH4Gz6K6i2\",\n  \"sessionTimeout\": 15,\n  \"siteId\": \"1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/preview/remote-administration-configurations/team-viewer",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"preview",
														"remote-administration-configurations",
														"team-viewer"
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get information about all remote administration configurations.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/preview/remote-administration-configurations?page=0&page-size=100",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preview",
										"remote-administration-configurations"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										}
									]
								},
								"description": "Remote administration feature creates a secure screen-sharing experience between Jamf Pro administrators and their end-users."
							},
							"response": [
								{
									"name": "Remote administration configurations returned.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/preview/remote-administration-configurations?page=0&page-size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"preview",
												"remote-administration-configurations"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": \"1\",\n      \"siteId\": \"1\",\n      \"displayName\": \"Remote administration\",\n      \"type\": \"team-viewer\"\n    },\n    {\n      \"id\": \"1\",\n      \"siteId\": \"1\",\n      \"displayName\": \"Remote administration\",\n      \"type\": \"team-viewer\"\n    }\n  ]\n}"
								},
								{
									"name": "Remote Administration feature is not available.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/preview/remote-administration-configurations?page=0&page-size=100",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"preview",
												"remote-administration-configurations"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Return a list of Computers\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/preview/computers?page=0&size=100&pagesize=100&page-size=100&sort=name:asc",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preview",
								"computers"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "100"
								},
								{
									"key": "pagesize",
									"value": "100"
								},
								{
									"key": "page-size",
									"value": "100"
								},
								{
									"key": "sort",
									"value": "name:asc",
									"description": "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc"
								}
							]
						},
						"description": "Returns a list of computers."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/preview/computers?page=0&size=100&pagesize=100&page-size=100&sort=name:asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preview",
										"computers"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "100"
										},
										{
											"key": "pagesize",
											"value": "100"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "name:asc"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"id\": \"7\",\n      \"location\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"Zach's hand me down MacBook Pro\",\n      \"udid\": \"6E47EF55-5318-494F-A09E-70F613E0AFD1\",\n      \"serialNumber\": \"C02L29ECF8J1\",\n      \"lastContactDate\": \"2000-04-25T21:09:31.661Z\",\n      \"lastReportDate\": \"2000-04-25T21:09:31.661Z\",\n      \"lastEnrolledDate\": \"2000-04-25T21:09:31.661Z\",\n      \"operatingSystemVersion\": \"10.9.5\",\n      \"operatingSystemBuild\": \"TK421\",\n      \"ipAddress\": \"93.184.216.34\",\n      \"macAddress\": \"F3:7C:6F:2C:B6:76\",\n      \"assetTag\": \"A123BC\",\n      \"modelIdentifier\": \"MNYF2XX/A\",\n      \"mdmAccessRights\": 1,\n      \"isManaged\": true,\n      \"managementId\": \"73226fb6-61df-4c10-9552-eb9bc353d507\"\n    },\n    {\n      \"id\": \"7\",\n      \"location\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": \"Zach's hand me down MacBook Pro\",\n      \"udid\": \"6E47EF55-5318-494F-A09E-70F613E0AFD1\",\n      \"serialNumber\": \"C02L29ECF8J1\",\n      \"lastContactDate\": \"2000-04-25T21:09:31.661Z\",\n      \"lastReportDate\": \"2000-04-25T21:09:31.661Z\",\n      \"lastEnrolledDate\": \"2000-04-25T21:09:31.661Z\",\n      \"operatingSystemVersion\": \"10.9.5\",\n      \"operatingSystemBuild\": \"TK421\",\n      \"ipAddress\": \"93.184.216.34\",\n      \"macAddress\": \"F3:7C:6F:2C:B6:76\",\n      \"assetTag\": \"A123BC\",\n      \"modelIdentifier\": \"MNYF2XX/A\",\n      \"mdmAccessRights\": 1,\n      \"isManaged\": true,\n      \"managementId\": \"73226fb6-61df-4c10-9552-eb9bc353d507\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Post a command for creation and queuing\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"clientData\": [\n    {\n      \"managementId\": \"aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937\",\n      \"clientType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"managementId\": \"aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937\",\n      \"clientType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"commandData\": {\n    \"lostModeMessage\": \"Lost Mode Message\",\n    \"lostModePhone\": \"123-456-7890\",\n    \"lostModeFootnote\": \"This is a footnote\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/preview/mdm/commands",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"preview",
								"mdm",
								"commands"
							]
						},
						"description": "Provided an MDM command type and appropriate information, will create and then queue said command."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clientData\": [\n    {\n      \"managementId\": \"aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937\",\n      \"clientType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"managementId\": \"aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937\",\n      \"clientType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"commandData\": {\n    \"lostModeMessage\": \"Lost Mode Message\",\n    \"lostModePhone\": \"123-456-7890\",\n    \"lostModeFootnote\": \"This is a footnote\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preview/mdm/commands",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preview",
										"mdm",
										"commands"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"1\",\n    \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n  },\n  {\n    \"id\": \"1\",\n    \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n  }\n]"
						},
						{
							"name": "Failure, unable to queue command.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clientData\": [\n    {\n      \"managementId\": \"aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937\",\n      \"clientType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"managementId\": \"aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937\",\n      \"clientType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"commandData\": {\n    \"lostModeMessage\": \"Lost Mode Message\",\n    \"lostModePhone\": \"123-456-7890\",\n    \"lostModeFootnote\": \"This is a footnote\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/preview/mdm/commands",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"preview",
										"mdm",
										"commands"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "settings",
			"item": [
				{
					"name": "obj/policy Properties",
					"item": [
						{
							"name": "Get Policy Properties object\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settings/obj/policyProperties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"obj",
										"policyProperties"
									]
								},
								"description": "Gets `Policy Properties` object.\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/settings/obj/policyProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"obj",
												"policyProperties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"isPoliciesRequireNetworkStateChange\": false,\n  \"isAllowNetworkStateChangeTriggers\": true\n}"
								}
							]
						},
						{
							"name": "Update Policy Properties object\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isPoliciesRequireNetworkStateChange\": false,\n  \"isAllowNetworkStateChangeTriggers\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/settings/obj/policyProperties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"obj",
										"policyProperties"
									]
								},
								"description": "Update Policy Properties object\n"
							},
							"response": [
								{
									"name": "Policy Properties was updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"isPoliciesRequireNetworkStateChange\": false,\n  \"isAllowNetworkStateChangeTriggers\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/settings/obj/policyProperties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"settings",
												"obj",
												"policyProperties"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"isPoliciesRequireNetworkStateChange\": false,\n  \"isAllowNetworkStateChangeTriggers\": true\n}"
								}
							]
						}
					]
				},
				{
					"name": "Generate a SSL Certificate using Jamf Certificate Authority\n",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/settings/issueTomcatSslCertificate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"settings",
								"issueTomcatSslCertificate"
							]
						},
						"description": "generate a SSL Certificate using Jamf Certificate Authority"
					},
					"response": [
						{
							"name": "SSL certificate created successfully",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settings/issueTomcatSslCertificate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"issueTomcatSslCertificate"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Find all sites\n",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/settings/sites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"settings",
								"sites"
							]
						},
						"description": "Found all sites.\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/settings/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"settings",
										"sites"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 1,\n    \"name\": \"Eau Claire\"\n  },\n  {\n    \"id\": 1,\n    \"name\": \"Eau Claire\"\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "system",
			"item": [
				{
					"name": "Set up fresh installed Jamf Pro Server\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"activationCode\": \"VFAB-YDAB-DFAB-UDAB-DEAB-EFAB-ABAB-DEAB\",\n  \"institutionName\": \"Jamf\",\n  \"isEulaAccepted\": false,\n  \"jssUrl\": \"https://jamf.jamfcloud.com\",\n  \"password\": \"12345\",\n  \"username\": \"admin\",\n  \"email\": \"ITBob@jamf.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/system/initialize",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"system",
								"initialize"
							]
						},
						"description": "Set up fresh installed Jamf Pro Server\n"
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activationCode\": \"VFAB-YDAB-DFAB-UDAB-DEAB-EFAB-ABAB-DEAB\",\n  \"institutionName\": \"Jamf\",\n  \"isEulaAccepted\": false,\n  \"jssUrl\": \"https://jamf.jamfcloud.com\",\n  \"password\": \"12345\",\n  \"username\": \"admin\",\n  \"email\": \"ITBob@jamf.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/system/initialize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"initialize"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The following are codes returned by this call:\nINVALID_ACTIVATION_CODE - activation code provided is not valid or is expired\nINVALID_STATE - The system is in an invalid state to be initialized.\nFIELD_REQUIRED - A required field was not provided.  The fiel",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activationCode\": \"VFAB-YDAB-DFAB-UDAB-DEAB-EFAB-ABAB-DEAB\",\n  \"institutionName\": \"Jamf\",\n  \"isEulaAccepted\": false,\n  \"jssUrl\": \"https://jamf.jamfcloud.com\",\n  \"password\": \"12345\",\n  \"username\": \"admin\",\n  \"email\": \"ITBob@jamf.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/system/initialize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"initialize"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Provide Database Password during startup\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"password\": \"12345\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/system/initialize-database-connection",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"system",
								"initialize-database-connection"
							]
						},
						"description": "Provide database password during startup. Endpoint is accessible when database password was not configured and Jamf Pro server has not been initialized yet."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"12345\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/system/initialize-database-connection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"initialize-database-connection"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Incorrect database password.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"12345\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/system/initialize-database-connection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"initialize-database-connection"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						},
						{
							"name": "Limit of requests per second was exceeded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"12345\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/system/initialize-database-connection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"system",
										"initialize-database-connection"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "obj/preference/{key}",
					"item": [
						{
							"name": "Get the user setting for the authenticated user and key\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/obj/preference/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"obj",
										"preference",
										":key"
									],
									"variable": [
										{
											"key": "key",
											"value": "in aute",
											"description": "(Required) user setting to be retrieved"
										}
									]
								},
								"description": "Gets the user setting for the authenticated user and key.\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/obj/preference/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"obj",
												"preference",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "in aute",
													"description": "(Required) user setting to be retrieved"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								},
								{
									"name": "setting not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/obj/preference/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"obj",
												"preference",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "in aute",
													"description": "(Required) user setting to be retrieved"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Persist the user setting\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "\"in aute\"",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/obj/preference/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"obj",
										"preference",
										":key"
									],
									"variable": [
										{
											"key": "key",
											"value": "in aute",
											"description": "(Required) key of user setting to be persisted"
										}
									]
								},
								"description": "Persists the user setting\n"
							},
							"response": [
								{
									"name": "setting sucessfully updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "\"in aute\"",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/obj/preference/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"obj",
												"preference",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "in aute",
													"description": "(Required) key of user setting to be persisted"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Remove specified setting for authenticated user\n",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/obj/preference/:key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"obj",
										"preference",
										":key"
									],
									"variable": [
										{
											"key": "key",
											"value": "in aute",
											"description": "(Required) key of user setting to be persisted"
										}
									]
								},
								"description": "Remove specified setting for authenticated user\n"
							},
							"response": [
								{
									"name": "setting was deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/obj/preference/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"obj",
												"preference",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "in aute",
													"description": "(Required) key of user setting to be persisted"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "setting not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/obj/preference/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"obj",
												"preference",
												":key"
											],
											"variable": [
												{
													"key": "key",
													"value": "in aute",
													"description": "(Required) key of user setting to be persisted"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Return all Jamf Pro user acounts\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						},
						"description": "Return all Jamf Pro user acounts.\n"
					},
					"response": [
						{
							"name": "List of all Jamf Pro user acounts.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"email\": \"ITBob@Jamf.com\",\n    \"preferences\": {\n      \"language\": \"en\",\n      \"dateFormat\": \"MM/dd/yyyy\",\n      \"region\": \"Europe\",\n      \"timezone\": \"Etc/GMT\",\n      \"isDisableRelativeDates\": false\n    },\n    \"isMultiSiteAdmin\": false,\n    \"accessLevel\": \"FullAccess\",\n    \"privilegeSet\": \"CUSTOM\",\n    \"privilegesBySite\": {\n      \"1\": [\n        \"Read SSO Settings\",\n        \"Delete eBooks\"\n      ]\n    },\n    \"groupIds\": [\n      1,\n      3\n    ],\n    \"currentSiteId\": 1\n  },\n  {\n    \"id\": 1,\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"email\": \"ITBob@Jamf.com\",\n    \"preferences\": {\n      \"language\": \"en\",\n      \"dateFormat\": \"MM/dd/yyyy\",\n      \"region\": \"Europe\",\n      \"timezone\": \"Etc/GMT\",\n      \"isDisableRelativeDates\": false\n    },\n    \"isMultiSiteAdmin\": false,\n    \"accessLevel\": \"FullAccess\",\n    \"privilegeSet\": \"CUSTOM\",\n    \"privilegesBySite\": {\n      \"1\": [\n        \"Read SSO Settings\",\n        \"Delete eBooks\"\n      ]\n    },\n    \"groupIds\": [\n      1,\n      3\n    ],\n    \"currentSiteId\": 1\n  }\n]"
						}
					]
				},
				{
					"name": "Update values in the User's current session\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"currentSiteId\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/updateSession",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"updateSession"
							]
						},
						"description": "Updates values in the user's current session.\n"
					},
					"response": [
						{
							"name": "The user's current session has been sucessfully updated.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"currentSiteId\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/updateSession",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"updateSession"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"currentSiteId\": 1\n}"
						}
					]
				}
			]
		},
		{
			"name": "v1",
			"item": [
				{
					"name": "adue-session-token-settings",
					"item": [
						{
							"name": "Retrieve the Account Driven User Enrollment Session Token Settings\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/adue-session-token-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"adue-session-token-settings"
									]
								},
								"description": "Retrieve the Account Driven User Enrollment Session Token Settings\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/adue-session-token-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"adue-session-token-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"expirationIntervalDays\": 1,\n  \"enabled\": false\n}"
								}
							]
						},
						{
							"name": "Update Account Driven User Enrollment Session Token Settings.\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"expirationIntervalDays\": 1,\n  \"enabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/adue-session-token-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"adue-session-token-settings"
									]
								},
								"description": "Update the Account Driven User Enrollment Session Token Settings object.\n"
							},
							"response": [
								{
									"name": "Successfully updated Account Driven User Enrollment Session Token Settings object",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"expirationIntervalDays\": 1,\n  \"enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/adue-session-token-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"adue-session-token-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"expirationIntervalDays\": 1,\n  \"enabled\": false\n}"
								},
								{
									"name": "Invalid data response",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"expirationIntervalDays\": 1,\n  \"enabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/adue-session-token-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"adue-session-token-settings"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "advanced-mobile-device-searches",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get specified Advanced Search object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-mobile-device-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) id of target Advanced Search"
												}
											]
										},
										"description": "Gets Specified Advanced Search Object\n"
									},
									"response": [
										{
											"name": "Successful response - Advanced Search retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"advanced-mobile-device-searches",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of target Advanced Search"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Andy's Search\",\n  \"id\": \"1\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"AirPlay Password\",\n    \"App Analytics Enabled\"\n  ],\n  \"siteId\": \"-1\"\n}"
										},
										{
											"name": "Target Advanced Search does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"advanced-mobile-device-searches",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of target Advanced Search"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get specified Advanced Search object\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Andy's Search\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"AirPlay Password\",\n    \"App Analytics Enabled\"\n  ],\n  \"siteId\": \"-1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-mobile-device-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) id of target Advanced Search"
												}
											]
										},
										"description": "Gets Specified Advanced Search Object\n"
									},
									"response": [
										{
											"name": "Successful response - Advanced Search updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Andy's Search\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"AirPlay Password\",\n    \"App Analytics Enabled\"\n  ],\n  \"siteId\": \"-1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"advanced-mobile-device-searches",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of target Advanced Search"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Andy's Search\",\n  \"id\": \"1\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"AirPlay Password\",\n    \"App Analytics Enabled\"\n  ],\n  \"siteId\": \"-1\"\n}"
										},
										{
											"name": "Target Advanced Search does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Andy's Search\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"AirPlay Password\",\n    \"App Analytics Enabled\"\n  ],\n  \"siteId\": \"-1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"advanced-mobile-device-searches",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of target Advanced Search"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Remove specified Advanced Search object\n",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-mobile-device-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of advanced search record"
												}
											]
										},
										"description": "Removes specified Advanced Search Object\n"
									},
									"response": [
										{
											"name": "Successful response - Advanced search deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"advanced-mobile-device-searches",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of advanced search record"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Target Advanced Search does not exist",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"advanced-mobile-device-searches",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of advanced search record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Advanced Search objects\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"advanced-mobile-device-searches"
									]
								},
								"description": "Gets Advanced Search Objects\n"
							},
							"response": [
								{
									"name": "Successful response - Advanced searches retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-mobile-device-searches"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"name\": \"Andy's Search\",\n      \"id\": \"1\",\n      \"criteria\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayFields\": [\n        \"AirPlay Password\",\n        \"App Analytics Enabled\"\n      ],\n      \"siteId\": \"-1\"\n    },\n    {\n      \"name\": \"Andy's Search\",\n      \"id\": \"1\",\n      \"criteria\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayFields\": [\n        \"AirPlay Password\",\n        \"App Analytics Enabled\"\n      ],\n      \"siteId\": \"-1\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create Advanced Search object\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Andy's Search\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"AirPlay Password\",\n    \"App Analytics Enabled\"\n  ],\n  \"siteId\": \"-1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"advanced-mobile-device-searches"
									]
								},
								"description": "Creates Advanced Search Object\n"
							},
							"response": [
								{
									"name": "Successful response - Advanced search created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Andy's Search\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"AirPlay Password\",\n    \"App Analytics Enabled\"\n  ],\n  \"siteId\": \"-1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-mobile-device-searches"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								}
							]
						},
						{
							"name": "Get Mobile Device Advanced Search criteria choices\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/choices?criteria=in aute&site=-1&contains=null",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"advanced-mobile-device-searches",
										"choices"
									],
									"query": [
										{
											"key": "criteria",
											"value": "in aute",
											"description": "(Required) "
										},
										{
											"key": "site",
											"value": "-1"
										},
										{
											"key": "contains",
											"value": "null"
										}
									]
								},
								"description": "Gets Mobile Device Advanced Search criteria choices. A list of potentially valid choices can be found by navigating to the Criteria page of the Advanced Mobile Device Search creation process. A few are \"App Name\", \"Building\", and \"Display Name\".\n"
							},
							"response": [
								{
									"name": "Successful response - Criteria choices retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/choices?criteria=in aute&site=-1&contains=null",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-mobile-device-searches",
												"choices"
											],
											"query": [
												{
													"key": "criteria",
													"value": "in aute"
												},
												{
													"key": "site",
													"value": "-1"
												},
												{
													"key": "contains",
													"value": "null"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"choices\": [\n    \"Option 1\",\n    \"Option 2\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Remove specified Advanced Search objects\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/delete-multiple",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"advanced-mobile-device-searches",
										"delete-multiple"
									]
								},
								"description": "Removes specified Advanced Search Objects\n"
							},
							"response": [
								{
									"name": "Successful response - Advanced searches deleted",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/delete-multiple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-mobile-device-searches",
												"delete-multiple"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "At least one target Advanced Search does not exist",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-mobile-device-searches/delete-multiple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-mobile-device-searches",
												"delete-multiple"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "advanced-user-content-searches",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Specified Advanced User Content Search object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-user-content-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-user-content-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) id of target Advanced User Content Search"
												}
											]
										},
										"description": "Gets Specified Advanced User Content Search Object\n"
									},
									"response": [
										{
											"name": "Successful response - Advanced User Content Search retrieved",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/advanced-user-content-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"advanced-user-content-searches",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of target Advanced User Content Search"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Andy's Search\",\n  \"id\": \"1\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"Content Name\",\n    \"Price\"\n  ],\n  \"siteId\": \"-1\"\n}"
										},
										{
											"name": "Target Advanced User Content Search does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/advanced-user-content-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"advanced-user-content-searches",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of target Advanced User Content Search"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get Specified Advanced User Content Search object\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Andy's Search\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"Content Name\",\n    \"Price\"\n  ],\n  \"siteId\": \"-1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-user-content-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-user-content-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) id of target Advanced User Content Search"
												}
											]
										},
										"description": "Gets Specified Advanced User Content Search Object\n"
									},
									"response": [
										{
											"name": "Successful response - Advanced User Content Search updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Andy's Search\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"Content Name\",\n    \"Price\"\n  ],\n  \"siteId\": \"-1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/advanced-user-content-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"advanced-user-content-searches",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of target Advanced User Content Search"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Andy's Search\",\n  \"id\": \"1\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"Content Name\",\n    \"Price\"\n  ],\n  \"siteId\": \"-1\"\n}"
										},
										{
											"name": "Target Advanced User Content Search does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Andy's Search\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"Content Name\",\n    \"Price\"\n  ],\n  \"siteId\": \"-1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/advanced-user-content-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"advanced-user-content-searches",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of target Advanced User Content Search"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Remove specified Advanced User Content Search object\n",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-user-content-searches/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-user-content-searches",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of Advanced User Content Search record"
												}
											]
										},
										"description": "Removes specified Advanced User Content Search Object\n"
									},
									"response": [
										{
											"name": "Successful response - Advanced User Content Search deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/advanced-user-content-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"advanced-user-content-searches",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of Advanced User Content Search record"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Target Advanced User Content Search does not exist",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/advanced-user-content-searches/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"advanced-user-content-searches",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of Advanced User Content Search record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get All Advanced User Content Search objects\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/advanced-user-content-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"advanced-user-content-searches"
									]
								},
								"description": "Get All Advanced User Content Search Objects\n"
							},
							"response": [
								{
									"name": "Successful response - Advanced User Content Searches retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-user-content-searches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-user-content-searches"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"name\": \"Andy's Search\",\n      \"id\": \"1\",\n      \"criteria\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayFields\": [\n        \"Content Name\",\n        \"Price\"\n      ],\n      \"siteId\": \"-1\"\n    },\n    {\n      \"name\": \"Andy's Search\",\n      \"id\": \"1\",\n      \"criteria\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"displayFields\": [\n        \"Content Name\",\n        \"Price\"\n      ],\n      \"siteId\": \"-1\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create Advanced User Content Search object\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Andy's Search\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"Content Name\",\n    \"Price\"\n  ],\n  \"siteId\": \"-1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/advanced-user-content-searches",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"advanced-user-content-searches"
									]
								},
								"description": "Creates Advanced User Content Search Object\n"
							},
							"response": [
								{
									"name": "Successful response - Advanced User Content Search created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Andy's Search\",\n  \"criteria\": [\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    },\n    {\n      \"name\": \"Account\",\n      \"priority\": 0,\n      \"andOr\": \"and\",\n      \"searchType\": \"is\",\n      \"value\": \"test\",\n      \"openingParen\": false,\n      \"closingParen\": false\n    }\n  ],\n  \"displayFields\": [\n    \"Content Name\",\n    \"Price\"\n  ],\n  \"siteId\": \"-1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/advanced-user-content-searches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"advanced-user-content-searches"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "app-request",
					"item": [
						{
							"name": "form-input-fields",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get specified Form Input Field object\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/app-request/form-input-fields/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"app-request",
														"form-input-fields",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Instance id of form input field record"
														}
													]
												},
												"description": "Gets specified form input field object\n"
											},
											"response": [
												{
													"name": "Details of form input field were found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/app-request/form-input-fields/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"app-request",
																"form-input-fields",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Instance id of form input field record"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"priority\": 1,\n  \"title\": \"Quantity\",\n  \"id\": 1,\n  \"description\": \"How many of these would you like?\"\n}"
												},
												{
													"name": "Specified form input field object does not exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/app-request/form-input-fields/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"app-request",
																"form-input-fields",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Instance id of form input field record"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update specified Form Input Field object\n",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"priority\": 1,\n  \"title\": \"Quantity\",\n  \"description\": \"How many of these would you like?\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/app-request/form-input-fields/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"app-request",
														"form-input-fields",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Instance id of form input field record"
														}
													]
												},
												"description": "Update specified form input field object\n"
											},
											"response": [
												{
													"name": "form input field update",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"priority\": 1,\n  \"title\": \"Quantity\",\n  \"description\": \"How many of these would you like?\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/app-request/form-input-fields/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"app-request",
																"form-input-fields",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Instance id of form input field record"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"priority\": 1,\n  \"title\": \"Quantity\",\n  \"id\": 1,\n  \"description\": \"How many of these would you like?\"\n}"
												},
												{
													"name": "Invalid data response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"priority\": 1,\n  \"title\": \"Quantity\",\n  \"description\": \"How many of these would you like?\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/app-request/form-input-fields/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"app-request",
																"form-input-fields",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Instance id of form input field record"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Specified form input field object does not exist.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"priority\": 1,\n  \"title\": \"Quantity\",\n  \"description\": \"How many of these would you like?\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/app-request/form-input-fields/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"app-request",
																"form-input-fields",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Instance id of form input field record"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Remove specified Form Input Field record\n",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/app-request/form-input-fields/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"app-request",
														"form-input-fields",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Instance id of form input field record"
														}
													]
												},
												"description": "Removes specified form input field record\n"
											},
											"response": [
												{
													"name": "form input field record was deleted",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/app-request/form-input-fields/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"app-request",
																"form-input-fields",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Instance id of form input field record"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Specified form input field object does not exist.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/app-request/form-input-fields/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"app-request",
																"form-input-fields",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Instance id of form input field record"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Search for Form Input Fields\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/app-request/form-input-fields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"app-request",
												"form-input-fields"
											]
										},
										"description": "Search for form input fields"
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/app-request/form-input-fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"app-request",
														"form-input-fields"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"priority\": 1,\n      \"title\": \"Quantity\",\n      \"id\": 1,\n      \"description\": \"How many of these would you like?\"\n    },\n    {\n      \"priority\": 1,\n      \"title\": \"Quantity\",\n      \"id\": 1,\n      \"description\": \"How many of these would you like?\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Replace all Form Input Fields\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"priority\": 1,\n    \"title\": \"Quantity\",\n    \"description\": \"How many of these would you like?\"\n  },\n  {\n    \"priority\": 1,\n    \"title\": \"Quantity\",\n    \"description\": \"How many of these would you like?\"\n  }\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/app-request/form-input-fields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"app-request",
												"form-input-fields"
											]
										},
										"description": "Replace all form input fields. Will delete, update, and create all input fields accordingly.\n"
									},
									"response": [
										{
											"name": "form input fields were replaced",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"priority\": 1,\n    \"title\": \"Quantity\",\n    \"description\": \"How many of these would you like?\"\n  },\n  {\n    \"priority\": 1,\n    \"title\": \"Quantity\",\n    \"description\": \"How many of these would you like?\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/app-request/form-input-fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"app-request",
														"form-input-fields"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"priority\": 1,\n    \"title\": \"Quantity\",\n    \"id\": 1,\n    \"description\": \"How many of these would you like?\"\n  },\n  {\n    \"priority\": 1,\n    \"title\": \"Quantity\",\n    \"id\": 1,\n    \"description\": \"How many of these would you like?\"\n  }\n]"
										},
										{
											"name": "Invalid data response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"priority\": 1,\n    \"title\": \"Quantity\",\n    \"description\": \"How many of these would you like?\"\n  },\n  {\n    \"priority\": 1,\n    \"title\": \"Quantity\",\n    \"description\": \"How many of these would you like?\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/app-request/form-input-fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"app-request",
														"form-input-fields"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Specified form input field object does not exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"priority\": 1,\n    \"title\": \"Quantity\",\n    \"description\": \"How many of these would you like?\"\n  },\n  {\n    \"priority\": 1,\n    \"title\": \"Quantity\",\n    \"description\": \"How many of these would you like?\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/app-request/form-input-fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"app-request",
														"form-input-fields"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create Form Input Field record\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"priority\": 1,\n  \"title\": \"Quantity\",\n  \"description\": \"How many of these would you like?\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/app-request/form-input-fields",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"app-request",
												"form-input-fields"
											]
										},
										"description": "Create form input field record\n"
									},
									"response": [
										{
											"name": "form input field record was created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"priority\": 1,\n  \"title\": \"Quantity\",\n  \"description\": \"How many of these would you like?\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/app-request/form-input-fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"app-request",
														"form-input-fields"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"priority\": 1,\n  \"title\": \"Quantity\",\n  \"id\": 1,\n  \"description\": \"How many of these would you like?\"\n}"
										},
										{
											"name": "Invalid data response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"priority\": 1,\n  \"title\": \"Quantity\",\n  \"description\": \"How many of these would you like?\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/app-request/form-input-fields",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"app-request",
														"form-input-fields"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "settings",
							"item": [
								{
									"name": "Get Applicastion Request Settings\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/app-request/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"app-request",
												"settings"
											]
										},
										"description": "Get app request settings\n"
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/app-request/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"app-request",
														"settings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"isEnabled\": true,\n  \"appStoreLocale\": \"deviceLocale\",\n  \"requesterUserGroupId\": 1,\n  \"approverEmails\": [\n    \"jane.doe@company.com, john.doe@company.com\",\n    \"jane.doe@company.com, john.doe@company.com\"\n  ]\n}"
										}
									]
								},
								{
									"name": "Update Application Request Settings\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"isEnabled\": true,\n  \"appStoreLocale\": \"deviceLocale\",\n  \"requesterUserGroupId\": 1,\n  \"approverEmails\": [\n    \"jane.doe@company.com, john.doe@company.com\",\n    \"jane.doe@company.com, john.doe@company.com\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/app-request/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"app-request",
												"settings"
											]
										},
										"description": "Update app request settings\n"
									},
									"response": [
										{
											"name": "App request settings updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"isEnabled\": true,\n  \"appStoreLocale\": \"deviceLocale\",\n  \"requesterUserGroupId\": 1,\n  \"approverEmails\": [\n    \"jane.doe@company.com, john.doe@company.com\",\n    \"jane.doe@company.com, john.doe@company.com\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/app-request/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"app-request",
														"settings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"isEnabled\": true,\n  \"appStoreLocale\": \"deviceLocale\",\n  \"requesterUserGroupId\": 1,\n  \"approverEmails\": [\n    \"jane.doe@company.com, john.doe@company.com\",\n    \"jane.doe@company.com, john.doe@company.com\"\n  ]\n}"
										},
										{
											"name": "Invalid data response",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"isEnabled\": true,\n  \"appStoreLocale\": \"deviceLocale\",\n  \"requesterUserGroupId\": 1,\n  \"approverEmails\": [\n    \"jane.doe@company.com, john.doe@company.com\",\n    \"jane.doe@company.com, john.doe@company.com\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/app-request/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"app-request",
														"settings"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "auth",
					"item": [
						{
							"name": "Get all the Authorization details associated with the current api\n",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "<Bearer Token>",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/auth",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"auth"
									]
								},
								"description": "Get all the authorization details associated with the current api token"
							},
							"response": [
								{
									"name": "Current authorization details.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/auth",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"auth"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"account\": {\n    \"id\": \"1\",\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"email\": \"ITBob@Jamf.com\",\n    \"preferences\": {\n      \"language\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dateFormat\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"region\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"timezone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"disableRelativeDates\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"multiSiteAdmin\": true,\n    \"accessLevel\": \"FullAccess\",\n    \"privilegeSet\": \"CUSTOM\",\n    \"privilegesBySite\": {\n      \"1\": [\n        \"Read SSO Settings\",\n        \"Delete eBooks\"\n      ]\n    },\n    \"groupIds\": [\n      \"Ut officia\",\n      \"ad\"\n    ],\n    \"currentSiteId\": \"1\"\n  },\n  \"accountGroups\": [\n    {\n      \"accessLevel\": \"FullAccess\",\n      \"privilegeSet\": \"CUSTOM\",\n      \"siteId\": 1,\n      \"privileges\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"memberUserIds\": [\n        1,\n        3\n      ]\n    },\n    {\n      \"accessLevel\": \"FullAccess\",\n      \"privilegeSet\": \"CUSTOM\",\n      \"siteId\": 1,\n      \"privileges\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"memberUserIds\": [\n        1,\n        3\n      ]\n    }\n  ],\n  \"sites\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"Eau Claire\"\n    },\n    {\n      \"id\": \"1\",\n      \"name\": \"Eau Claire\"\n    }\n  ],\n  \"authenticationType\": \"JSS\"\n}"
								}
							]
						},
						{
							"name": "Invalidate current token\n",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "<Bearer Token>",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/auth/invalidate-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"auth",
										"invalidate-token"
									]
								},
								"description": "Invalidates current token"
							},
							"response": [
								{
									"name": "token invalidated",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/auth/invalidate-token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"auth",
												"invalidate-token"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Invalidate existing token and generates new token\n",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "<Bearer Token>",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/auth/keep-alive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"auth",
										"keep-alive"
									]
								},
								"description": "Invalidates existing token and generates new token with extended expiration based on existing token credentials."
							},
							"response": [
								{
									"name": "Updated token.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/auth/keep-alive",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"auth",
												"keep-alive"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJhdXRoZW50aWNhdGVkLWFwcCI6IkdFTkVSSUMiLCJhdXRoZW50aWNhdGlvbi10eXBlIjoiSlNTIiwiZ3JvdXBzIjpbXSwic3ViamVjdC10eXBlIjoiSlNTX1VTRVJfSUQiLCJ0b2tlbi11dWlkIjoiNzc0YWY3MGYtYWQ0Yy00N2QzLTk2MzktZjEwMjBhMTIwYzExIiwibGRhcC1zZXJ2ZXItaWQiOi0xLCJzdWIiOiIxIiwiZXhwIjoxNTM5NjE5MzQ4fQ.0t7sgYyIyA7kTTmrM8tMGE7fnXcJ1ZzQODAJp0pzg92-cBMQS0Cv8S9oWjkJD7VJS-CHA1dOppr0G_2dCPOfng\",\n  \"expires\": \"2020-04-21T21:09:31.626Z\"\n}"
								}
							]
						},
						{
							"name": "Create a token based on other authentication details (basic, etc.)\n",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "username",
											"value": "<Basic Auth Username>",
											"type": "string"
										},
										{
											"key": "password",
											"value": "<Basic Auth Password>",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/auth/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"auth",
										"token"
									]
								},
								"description": "Create a token based on other authentication details (basic, etc.)\n"
							},
							"response": [
								{
									"name": "New auth token generated.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: basic",
												"key": "Authorization",
												"value": "Basic <credentials>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/auth/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"auth",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"token\": \"eyJhbGciOiJIUzUxMiJ9.eyJhdXRoZW50aWNhdGVkLWFwcCI6IkdFTkVSSUMiLCJhdXRoZW50aWNhdGlvbi10eXBlIjoiSlNTIiwiZ3JvdXBzIjpbXSwic3ViamVjdC10eXBlIjoiSlNTX1VTRVJfSUQiLCJ0b2tlbi11dWlkIjoiNzc0YWY3MGYtYWQ0Yy00N2QzLTk2MzktZjEwMjBhMTIwYzExIiwibGRhcC1zZXJ2ZXItaWQiOi0xLCJzdWIiOiIxIiwiZXhwIjoxNTM5NjE5MzQ4fQ.0t7sgYyIyA7kTTmrM8tMGE7fnXcJ1ZzQODAJp0pzg92-cBMQS0Cv8S9oWjkJD7VJS-CHA1dOppr0G_2dCPOfng\",\n  \"expires\": \"2020-04-21T21:09:31.626Z\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "azure-ad-migration/reports",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Check status of azure ad migration report",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/azure-ad-migration/reports/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"azure-ad-migration",
												"reports",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Existing report ID"
												}
											]
										},
										"description": "Returns dto with minimal info about running process"
									},
									"response": [
										{
											"name": "Azure report status returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/azure-ad-migration/reports/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"azure-ad-migration",
														"reports",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Existing report ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"migrationReportFinishedEpoch\": 1,\n  \"migrationReportStartedEpoch\": 1,\n  \"migrationReportStatus\": \"PENDING\",\n  \"reportId\": 1\n}"
										},
										{
											"name": "Report with provided ID does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/azure-ad-migration/reports/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"azure-ad-migration",
														"reports",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Existing report ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Download report of provided report ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/azure-ad-migration/reports/:id/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"azure-ad-migration",
												"reports",
												":id",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Existing report ID"
												}
											]
										},
										"description": "Returns excel file of generated report"
									},
									"response": [
										{
											"name": "Azure report excel file returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/azure-ad-migration/reports/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"azure-ad-migration",
														"reports",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Existing report ID"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Report with provided ID hasn't been generated",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/azure-ad-migration/reports/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"azure-ad-migration",
														"reports",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Existing report ID"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Start Azure Ad Migration report generation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"azureMappings\": {\n    \"building\": \"companyName\",\n    \"department\": \"department\",\n    \"email\": \"mail\",\n    \"groupId\": \"id\",\n    \"groupName\": \"displayName\",\n    \"phone\": \"mobilePhone\",\n    \"position\": \"jobTitle\",\n    \"realName\": \"displayName\",\n    \"room\": \"officeLocation\",\n    \"userId\": \"id\",\n    \"userName\": \"userPrincipalName\"\n  },\n  \"azureServerId\": 1001,\n  \"ldapServerId\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/azure-ad-migration/reports",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"azure-ad-migration",
										"reports"
									]
								},
								"description": "Starts a new process in background that will generate Excel report"
							},
							"response": [
								{
									"name": "Azure report generation started.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"azureMappings\": {\n    \"building\": \"companyName\",\n    \"department\": \"department\",\n    \"email\": \"mail\",\n    \"groupId\": \"id\",\n    \"groupName\": \"displayName\",\n    \"phone\": \"mobilePhone\",\n    \"position\": \"jobTitle\",\n    \"realName\": \"displayName\",\n    \"room\": \"officeLocation\",\n    \"userId\": \"id\",\n    \"userName\": \"userPrincipalName\"\n  },\n  \"azureServerId\": 1001,\n  \"ldapServerId\": 1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/azure-ad-migration/reports",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"azure-ad-migration",
												"reports"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								},
								{
									"name": "Azure report generation cannot be started.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"azureMappings\": {\n    \"building\": \"companyName\",\n    \"department\": \"department\",\n    \"email\": \"mail\",\n    \"groupId\": \"id\",\n    \"groupName\": \"displayName\",\n    \"phone\": \"mobilePhone\",\n    \"position\": \"jobTitle\",\n    \"realName\": \"displayName\",\n    \"room\": \"officeLocation\",\n    \"userId\": \"id\",\n    \"userName\": \"userPrincipalName\"\n  },\n  \"azureServerId\": 1001,\n  \"ldapServerId\": 1\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/azure-ad-migration/reports",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"azure-ad-migration",
												"reports"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get pending azure migration report",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/azure-ad-migration/reports/pending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"azure-ad-migration",
										"reports",
										"pending"
									]
								},
								"description": "Returs dto with info about pending report"
							},
							"response": [
								{
									"name": "Azure report dto returned.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/azure-ad-migration/reports/pending",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"azure-ad-migration",
												"reports",
												"pending"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"migrationReportFinishedEpoch\": 1,\n  \"migrationReportStartedEpoch\": 1,\n  \"migrationReportStatus\": \"PENDING\",\n  \"reportId\": 1\n}"
								},
								{
									"name": "Pending report does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/azure-ad-migration/reports/pending",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"azure-ad-migration",
												"reports",
												"pending"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "buildings",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "history",
									"item": [
										{
											"name": "Get specified Building History object\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/buildings/:id/history?page=0&page-size=100&sort=date:desc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"buildings",
														":id",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc",
															"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
														},
														{
															"key": "filter",
															"value": "",
															"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of building history record"
														}
													]
												},
												"description": "Gets specified Building history object\n"
											},
											"response": [
												{
													"name": "Details of building history were found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/buildings/:id/history?page=0&page-size=100&sort=date:desc&filter=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"buildings",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																},
																{
																	"key": "filter",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of building history record"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
												},
												{
													"name": "Specified building object does not exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/buildings/:id/history?page=0&page-size=100&sort=date:desc&filter=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"buildings",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																},
																{
																	"key": "filter",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of building history record"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add specified Building history object notes\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/buildings/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"buildings",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of building history record"
														}
													]
												},
												"description": "Adds specified Building history object notes\n"
											},
											"response": [
												{
													"name": "Notes of building history were added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/buildings/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"buildings",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of building history record"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
												},
												{
													"name": "Specified building object does not exist.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/buildings/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"buildings",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of building history record"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Building history can not be saved",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/buildings/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"buildings",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of building history record"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get specified Building object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/buildings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"buildings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of building record"
												}
											]
										},
										"description": "Gets specified Building object\n"
									},
									"response": [
										{
											"name": "Details of building were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/buildings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"buildings",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of building record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Apple Park\",\n  \"id\": \"1\",\n  \"streetAddress1\": \"The McIntosh Tree\",\n  \"streetAddress2\": \"One Apple Park Way\",\n  \"city\": \"Cupertino\",\n  \"stateProvince\": \"California\",\n  \"zipPostalCode\": \"95014\",\n  \"country\": \"The United States of America\"\n}"
										},
										{
											"name": "Specified building object does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/buildings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"buildings",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of building record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update specified Building object\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Apple Park\",\n  \"streetAddress1\": \"The McIntosh Tree\",\n  \"streetAddress2\": \"One Apple Park Way\",\n  \"city\": \"Cupertino\",\n  \"stateProvince\": \"California\",\n  \"zipPostalCode\": \"95014\",\n  \"country\": \"The United States of America\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/buildings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"buildings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of building record"
												}
											]
										},
										"description": "Update specified building object\n"
									},
									"response": [
										{
											"name": "Building update",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Apple Park\",\n  \"streetAddress1\": \"The McIntosh Tree\",\n  \"streetAddress2\": \"One Apple Park Way\",\n  \"city\": \"Cupertino\",\n  \"stateProvince\": \"California\",\n  \"zipPostalCode\": \"95014\",\n  \"country\": \"The United States of America\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/buildings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"buildings",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of building record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Apple Park\",\n  \"id\": \"1\",\n  \"streetAddress1\": \"The McIntosh Tree\",\n  \"streetAddress2\": \"One Apple Park Way\",\n  \"city\": \"Cupertino\",\n  \"stateProvince\": \"California\",\n  \"zipPostalCode\": \"95014\",\n  \"country\": \"The United States of America\"\n}"
										}
									]
								},
								{
									"name": "Remove specified Building record\n",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/buildings/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"buildings",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of building record"
												}
											]
										},
										"description": "Removes specified building record\n"
									},
									"response": [
										{
											"name": "Building record was deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/buildings/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"buildings",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of building record"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Search for sorted and paged Buildings\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/buildings?page=0&page-size=100&sort=id:asc&filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"buildings"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										},
										{
											"key": "filter",
											"value": "",
											"description": "Query in the RSQL format, allowing to filter buildings collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: name, streetAddress1, streetAddress2, city, stateProvince, zipPostalCode, country. This param can be combined with paging and sorting. Example: filter=city==\"Chicago\" and name==\"*build*\""
										}
									]
								},
								"description": "Search for sorted and paged buildings"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/buildings?page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"buildings"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												},
												{
													"key": "filter",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"name\": \"Apple Park\",\n      \"id\": \"1\",\n      \"streetAddress1\": \"The McIntosh Tree\",\n      \"streetAddress2\": \"One Apple Park Way\",\n      \"city\": \"Cupertino\",\n      \"stateProvince\": \"California\",\n      \"zipPostalCode\": \"95014\",\n      \"country\": \"The United States of America\"\n    },\n    {\n      \"name\": \"Apple Park\",\n      \"id\": \"1\",\n      \"streetAddress1\": \"The McIntosh Tree\",\n      \"streetAddress2\": \"One Apple Park Way\",\n      \"city\": \"Cupertino\",\n      \"stateProvince\": \"California\",\n      \"zipPostalCode\": \"95014\",\n      \"country\": \"The United States of America\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create Building record\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Apple Park\",\n  \"streetAddress1\": \"The McIntosh Tree\",\n  \"streetAddress2\": \"One Apple Park Way\",\n  \"city\": \"Cupertino\",\n  \"stateProvince\": \"California\",\n  \"zipPostalCode\": \"95014\",\n  \"country\": \"The United States of America\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/buildings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"buildings"
									]
								},
								"description": "Create building record\n"
							},
							"response": [
								{
									"name": "Building record was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Apple Park\",\n  \"streetAddress1\": \"The McIntosh Tree\",\n  \"streetAddress2\": \"One Apple Park Way\",\n  \"city\": \"Cupertino\",\n  \"stateProvince\": \"California\",\n  \"zipPostalCode\": \"95014\",\n  \"country\": \"The United States of America\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/buildings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"buildings"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								}
							]
						},
						{
							"name": "Delete multiple Buildings by their ids\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/buildings/delete-multiple",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"buildings",
										"delete-multiple"
									]
								},
								"description": "multiple many Buildings by their ids"
							},
							"response": [
								{
									"name": "All building ids passed in request sucessfully deleted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/buildings/delete-multiple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"buildings",
												"delete-multiple"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request processed.  Returns ids and error codes of any buildings unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occurred trying to delete the building.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/buildings/delete-multiple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"buildings",
												"delete-multiple"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "cache-settings",
					"item": [
						{
							"name": "Get Cache Settings\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/cache-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"cache-settings"
									]
								},
								"description": "gets cache settings"
							},
							"response": [
								{
									"name": "cache settings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cache-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cache-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"cacheType\": \"ehcache\",\n  \"cacheUniqueId\": \"24864549-94ea-4cc1-bb80-d7fb392c6556\",\n  \"memcachedEndpoints\": [],\n  \"timeToLiveSeconds\": 120,\n  \"id\": \"0\",\n  \"name\": \"cache configuration\",\n  \"timeToIdleSeconds\": 120,\n  \"directoryTimeToLiveSeconds\": 120,\n  \"ehcacheMaxBytesLocalHeap\": \"null\",\n  \"elasticache\": false\n}"
								}
							]
						},
						{
							"name": "Update Cache Settings\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cacheType\": \"ehcache\",\n  \"cacheUniqueId\": \"24864549-94ea-4cc1-bb80-d7fb392c6556\",\n  \"memcachedEndpoints\": [],\n  \"timeToLiveSeconds\": 120,\n  \"name\": \"cache configuration\",\n  \"timeToIdleSeconds\": 120,\n  \"directoryTimeToLiveSeconds\": 120,\n  \"ehcacheMaxBytesLocalHeap\": \"null\",\n  \"elasticache\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/cache-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"cache-settings"
									]
								},
								"description": "updates cache settings\n"
							},
							"response": [
								{
									"name": "cache has been updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cacheType\": \"ehcache\",\n  \"cacheUniqueId\": \"24864549-94ea-4cc1-bb80-d7fb392c6556\",\n  \"memcachedEndpoints\": [],\n  \"timeToLiveSeconds\": 120,\n  \"name\": \"cache configuration\",\n  \"timeToIdleSeconds\": 120,\n  \"directoryTimeToLiveSeconds\": 120,\n  \"ehcacheMaxBytesLocalHeap\": \"null\",\n  \"elasticache\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cache-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cache-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"cacheType\": \"ehcache\",\n  \"cacheUniqueId\": \"24864549-94ea-4cc1-bb80-d7fb392c6556\",\n  \"memcachedEndpoints\": [],\n  \"timeToLiveSeconds\": 120,\n  \"id\": \"0\",\n  \"name\": \"cache configuration\",\n  \"timeToIdleSeconds\": 120,\n  \"directoryTimeToLiveSeconds\": 120,\n  \"ehcacheMaxBytesLocalHeap\": \"null\",\n  \"elasticache\": false\n}"
								},
								{
									"name": "The following code is returned by this call:\nHOSTED_ENVIRONMENT - PUT command is not available in hosted environments.\n",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cacheType\": \"ehcache\",\n  \"cacheUniqueId\": \"24864549-94ea-4cc1-bb80-d7fb392c6556\",\n  \"memcachedEndpoints\": [],\n  \"timeToLiveSeconds\": 120,\n  \"name\": \"cache configuration\",\n  \"timeToIdleSeconds\": 120,\n  \"directoryTimeToLiveSeconds\": 120,\n  \"ehcacheMaxBytesLocalHeap\": \"null\",\n  \"elasticache\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cache-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cache-settings"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "categories",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "history",
									"item": [
										{
											"name": "Get specified Category history object\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/categories/:id/history?page=0&page-size=100&sort=date:desc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"categories",
														":id",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc",
															"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
														},
														{
															"key": "filter",
															"value": "",
															"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of category history record"
														}
													]
												},
												"description": "Gets specified Category history object\n"
											},
											"response": [
												{
													"name": "Details of category history were found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/categories/:id/history?page=0&page-size=100&sort=date:desc&filter=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"categories",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																},
																{
																	"key": "filter",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of category history record"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
												},
												{
													"name": "Specified category object does not exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/categories/:id/history?page=0&page-size=100&sort=date:desc&filter=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"categories",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																},
																{
																	"key": "filter",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of category history record"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add specified Category history object notes\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/categories/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"categories",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of category history record"
														}
													]
												},
												"description": "Adds specified Category history object notes\n"
											},
											"response": [
												{
													"name": "Notes of category history were added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/categories/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"categories",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of category history record"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
												},
												{
													"name": "Specified category object does not exist.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/categories/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"categories",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of category history record"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Category history can not be saved",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/categories/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"categories",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of category history record"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get specified Category object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of category record"
												}
											]
										},
										"description": "Gets specified Category object\n"
									},
									"response": [
										{
											"name": "Details of category were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of category record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"The Best\",\n  \"priority\": 9,\n  \"id\": \"1\"\n}"
										},
										{
											"name": "Specified category object does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of category record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update specified Category object\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"The Best\",\n  \"priority\": 9\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of category record"
												}
											]
										},
										"description": "Update specified category object\n"
									},
									"response": [
										{
											"name": "Category record was updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"The Best\",\n  \"priority\": 9\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of category record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"The Best\",\n  \"priority\": 9,\n  \"id\": \"1\"\n}"
										}
									]
								},
								{
									"name": "Remove specified Category record\n",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/categories/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"categories",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of category record"
												}
											]
										},
										"description": "Removes specified category record\n"
									},
									"response": [
										{
											"name": "Category record was deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/categories/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"categories",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of category record"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get Category objects\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/categories?page=0&page-size=100&sort=id:asc&filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"categories"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										},
										{
											"key": "filter",
											"value": "",
											"description": "Query in the RSQL format, allowing to filter categories collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: name, priority. This param can be combined with paging and sorting. Example: filter=name==\"Apps*\" and priority>=5"
										}
									]
								},
								"description": "Gets `Category` objects.\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/categories?page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"categories"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												},
												{
													"key": "filter",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"name\": \"The Best\",\n      \"priority\": 9,\n      \"id\": \"1\"\n    },\n    {\n      \"name\": \"The Best\",\n      \"priority\": 9,\n      \"id\": \"1\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create Category record\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"The Best\",\n  \"priority\": 9\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/categories",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"categories"
									]
								},
								"description": "Create category record\n"
							},
							"response": [
								{
									"name": "Category record was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"The Best\",\n  \"priority\": 9\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/categories",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"categories"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								}
							]
						},
						{
							"name": "Delete multiple Categories by their IDs\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/categories/delete-multiple",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"categories",
										"delete-multiple"
									]
								},
								"description": "Delete multiple Categories by their IDs"
							},
							"response": [
								{
									"name": "All Category IDs passed in request sucessfully deleted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/categories/delete-multiple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"categories",
												"delete-multiple"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request processed.  Returns IDs and error codes of any categories unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occurred trying to delete the category.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/categories/delete-multiple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"categories",
												"delete-multiple"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "cloud-azure",
					"item": [
						{
							"name": "defaults",
							"item": [
								{
									"name": "Get default mappings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-azure/defaults/mappings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-azure",
												"defaults",
												"mappings"
											]
										},
										"description": "This is the default set of attributes that allows you to return the data you need from Azure AD. Some fields may be empty and may be edited when creating a new configuration."
									},
									"response": [
										{
											"name": "Default mappings returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/defaults/mappings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														"defaults",
														"mappings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"building\": \"companyName\",\n  \"department\": \"department\",\n  \"email\": \"mail\",\n  \"groupId\": \"id\",\n  \"groupName\": \"displayName\",\n  \"phone\": \"mobilePhone\",\n  \"position\": \"jobTitle\",\n  \"realName\": \"displayName\",\n  \"room\": \"officeLocation\",\n  \"userId\": \"id\",\n  \"userName\": \"userPrincipalName\"\n}"
										},
										{
											"name": "Files cannot be loaded.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/defaults/mappings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														"defaults",
														"mappings"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "This endpoint is not available for your environment.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/defaults/mappings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														"defaults",
														"mappings"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get default server configuration",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-azure/defaults/server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-azure",
												"defaults",
												"server-configuration"
											]
										},
										"description": "This is the default set of attributes that allows you to return the data you need from Azure AD. Some fields may be empty and may be edited when creating a new configuration."
									},
									"response": [
										{
											"name": "Default server configuration returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/defaults/server-configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														"defaults",
														"server-configuration"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"enabled\": true,\n  \"id\": \"1001\",\n  \"mappings\": {\n    \"building\": \"companyName\",\n    \"department\": \"department\",\n    \"email\": \"mail\",\n    \"groupId\": \"id\",\n    \"groupName\": \"displayName\",\n    \"phone\": \"mobilePhone\",\n    \"position\": \"jobTitle\",\n    \"realName\": \"displayName\",\n    \"room\": \"officeLocation\",\n    \"userId\": \"id\",\n    \"userName\": \"userPrincipalName\"\n  },\n  \"migrated\": true,\n  \"searchTimeout\": 30,\n  \"tenantId\": \"db65d325-0350-4a17-9af9-b302d0fc386b\",\n  \"transitiveDirectoryMembershipEnabled\": false,\n  \"transitiveMembershipEnabled\": false,\n  \"transitiveMembershipUserField\": \"userPrincipalName\"\n}"
										},
										{
											"name": "Default server configuration cannot be loaded.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/defaults/server-configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														"defaults",
														"server-configuration"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "This endpoint is not available for your environment.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/defaults/server-configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														"defaults",
														"server-configuration"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Azure Cloud Identity Provider configuration with given ID.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-azure/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-azure",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Cloud Identity Provider identifier"
												}
											]
										},
										"description": "Get Azure Cloud Identity Provider configuration with given ID."
									},
									"response": [
										{
											"name": "Cloud Identity Provider configuration returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"enabled\": true,\n    \"id\": \"1001\",\n    \"mappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"migrated\": true,\n    \"searchTimeout\": 30,\n    \"tenantId\": \"db65d325-0350-4a17-9af9-b302d0fc386b\",\n    \"transitiveDirectoryMembershipEnabled\": false,\n    \"transitiveMembershipEnabled\": false,\n    \"transitiveMembershipUserField\": \"userPrincipalName\"\n  }\n}"
										},
										{
											"name": "ID can only be a number.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "This endpoint is not available for your environment if CLOUD_ONLY reason code or specified Azure Cloud Identity Provider configuration does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update Azure Cloud Identity Provider configuration",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"enabled\": true,\n    \"id\": \"1001\",\n    \"mappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"searchTimeout\": 30,\n    \"transitiveDirectoryMembershipEnabled\": false,\n    \"transitiveMembershipEnabled\": false,\n    \"transitiveMembershipUserField\": \"userPrincipalName\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-azure/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-azure",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Cloud Identity Provider identifier"
												}
											]
										},
										"description": "Update Azure Cloud Identity Provider configuration. Cannot be used for partial updates, all content body must be sent."
									},
									"response": [
										{
											"name": "Cloud Identity Provider configuration updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"enabled\": true,\n    \"id\": \"1001\",\n    \"mappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"searchTimeout\": 30,\n    \"transitiveDirectoryMembershipEnabled\": false,\n    \"transitiveMembershipEnabled\": false,\n    \"transitiveMembershipUserField\": \"userPrincipalName\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"enabled\": true,\n    \"id\": \"1001\",\n    \"mappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"migrated\": true,\n    \"searchTimeout\": 30,\n    \"tenantId\": \"db65d325-0350-4a17-9af9-b302d0fc386b\",\n    \"transitiveDirectoryMembershipEnabled\": false,\n    \"transitiveMembershipEnabled\": false,\n    \"transitiveMembershipUserField\": \"userPrincipalName\"\n  }\n}"
										},
										{
											"name": "One or more parameters were invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"enabled\": true,\n    \"id\": \"1001\",\n    \"mappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"searchTimeout\": 30,\n    \"transitiveDirectoryMembershipEnabled\": false,\n    \"transitiveMembershipEnabled\": false,\n    \"transitiveMembershipUserField\": \"userPrincipalName\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "This endpoint is not available for your environment if CLOUD_ONLY reason code or Cloud Identity Provider configuration does not exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"enabled\": true,\n    \"id\": \"1001\",\n    \"mappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"searchTimeout\": 30,\n    \"transitiveDirectoryMembershipEnabled\": false,\n    \"transitiveMembershipEnabled\": false,\n    \"transitiveMembershipUserField\": \"userPrincipalName\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "The request URL configuration id value does not match the id value in the request body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"enabled\": true,\n    \"id\": \"1001\",\n    \"mappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"searchTimeout\": 30,\n    \"transitiveDirectoryMembershipEnabled\": false,\n    \"transitiveMembershipEnabled\": false,\n    \"transitiveMembershipUserField\": \"userPrincipalName\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete Cloud Identity Provider configuration.",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-azure/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-azure",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Cloud Identity Provider identifier"
												}
											]
										},
										"description": "Delete Cloud Identity Provider configuration."
									},
									"response": [
										{
											"name": "Cloud Identity Provider configuration deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "ID can only be a number.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "This endpoint is not available for your environment if CLOUD_ONLY reason code or Cloud Identity Provider configuration does not exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-azure/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-azure",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create Azure Cloud Identity Provider configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"code\": \"auth\",\n    \"enabled\": true,\n    \"mappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"searchTimeout\": 30,\n    \"tenantId\": \"db65d325-0350-4a17-9af9-b302d0fc386b\",\n    \"transitiveDirectoryMembershipEnabled\": false,\n    \"transitiveMembershipEnabled\": false,\n    \"transitiveMembershipUserField\": \"userPrincipalName\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/cloud-azure",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"cloud-azure"
									]
								},
								"description": "Create new Azure Cloud Identity Provider configuration with unique display name."
							},
							"response": [
								{
									"name": "Azure Cloud Identity Provider configuration created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"code\": \"auth\",\n    \"enabled\": true,\n    \"mappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"searchTimeout\": 30,\n    \"tenantId\": \"db65d325-0350-4a17-9af9-b302d0fc386b\",\n    \"transitiveDirectoryMembershipEnabled\": false,\n    \"transitiveMembershipEnabled\": false,\n    \"transitiveMembershipUserField\": \"userPrincipalName\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-azure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-azure"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								},
								{
									"name": "Azure Cloud Identity Provider configuration cannot be saved.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"code\": \"auth\",\n    \"enabled\": true,\n    \"mappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"searchTimeout\": 30,\n    \"tenantId\": \"db65d325-0350-4a17-9af9-b302d0fc386b\",\n    \"transitiveDirectoryMembershipEnabled\": false,\n    \"transitiveMembershipEnabled\": false,\n    \"transitiveMembershipUserField\": \"userPrincipalName\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-azure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-azure"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								{
									"name": "This endpoint is not available for your environment.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"code\": \"auth\",\n    \"enabled\": true,\n    \"mappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"email\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"searchTimeout\": 30,\n    \"tenantId\": \"db65d325-0350-4a17-9af9-b302d0fc386b\",\n    \"transitiveDirectoryMembershipEnabled\": false,\n    \"transitiveMembershipEnabled\": false,\n    \"transitiveMembershipUserField\": \"userPrincipalName\"\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-azure",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-azure"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "cloud-idp",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "history",
									"item": [
										{
											"name": "Get Cloud Identity Provider history",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-idp/:id/history?page=0&page-size=100&sort=date:desc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-idp",
														":id",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc",
															"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												},
												"description": "Gets specified Cloud Identity Provider object history"
											},
											"response": [
												{
													"name": "Details of Cloud Identity Provider history were found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cloud-idp/:id/history?page=0&page-size=100&sort=date:desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cloud-idp",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
												},
												{
													"name": "Id can only be a number.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cloud-idp/:id/history?page=0&page-size=100&sort=date:desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cloud-idp",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Specified Cloud Identity Provider object does not exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/cloud-idp/:id/history?page=0&page-size=100&sort=date:desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cloud-idp",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add Cloud Identity Provider history note",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-idp/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-idp",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												},
												"description": "Adds specified Cloud Identity Provider object history notes\n"
											},
											"response": [
												{
													"name": "Notes of Cloud Identity Provider history were added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/cloud-idp/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cloud-idp",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
												},
												{
													"name": "Specified Cloud Identity Provider object does not exist.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/cloud-idp/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cloud-idp",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Notes of Cloud Identity Provider can not be saved",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/cloud-idp/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"cloud-idp",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Cloud Identity Provider configuration with given ID.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-idp/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-idp",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Cloud Identity Provider identifier"
												}
											]
										},
										"description": "Get Cloud Identity Provider configuration with given ID."
									},
									"response": [
										{
											"name": "Cloud Identity Provider configuration returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-idp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-idp",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"displayName\": \"Google Secure LDAP\",\n  \"id\": \"1001\",\n  \"providerName\": \"GOOGLE\"\n}"
										},
										{
											"name": "ID can only be a number.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-idp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-idp",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Specified Cloud Identity Provider configuration does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-idp/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-idp",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get group test search",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupname\": \"users\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-idp/:id/test-group",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-idp",
												":id",
												"test-group"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Cloud Identity Provider identifier"
												}
											]
										},
										"description": "Do test search to ensure about configuration and mappings"
									},
									"response": [
										{
											"name": "Cloud Identity Provider test search result returned.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupname\": \"users\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-idp/:id/test-group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-idp",
														":id",
														"test-group"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"distinguishedName\": \"cn=users,ou=Groups,dc=jamf,dc=com\",\n      \"id\": \"users\",\n      \"uuid\": \"121100023\",\n      \"serverId\": \"1001\",\n      \"name\": \"users\"\n    },\n    {\n      \"distinguishedName\": \"cn=users,ou=Groups,dc=jamf,dc=com\",\n      \"id\": \"users\",\n      \"uuid\": \"121100023\",\n      \"serverId\": \"1001\",\n      \"name\": \"users\"\n    }\n  ]\n}"
										},
										{
											"name": "Cloud Identity Provider does not exist or is not active.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupname\": \"users\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-idp/:id/test-group",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-idp",
														":id",
														"test-group"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get user test search",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"username\": \"admin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-idp/:id/test-user",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-idp",
												":id",
												"test-user"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Cloud Identity Provider identifier"
												}
											]
										},
										"description": "Do test search to ensure about configuration and mappings"
									},
									"response": [
										{
											"name": "Cloud Identity Provider test search result returned.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"username\": \"admin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-idp/:id/test-user",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-idp",
														":id",
														"test-user"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"distinguishedName\": \"uid=admin,ou=Users,dc=jamf,dc=com\",\n      \"id\": \"admin@jamf.com\",\n      \"uuid\": \"admin\",\n      \"serverId\": \"1001\",\n      \"name\": \"admin\",\n      \"attributes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"distinguishedName\": \"uid=admin,ou=Users,dc=jamf,dc=com\",\n      \"id\": \"admin@jamf.com\",\n      \"uuid\": \"admin\",\n      \"serverId\": \"1001\",\n      \"name\": \"admin\",\n      \"attributes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Cloud Identity Provider does not exist or is not active.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"username\": \"admin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-idp/:id/test-user",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-idp",
														":id",
														"test-user"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get membership test search",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupname\": \"users\",\n  \"username\": \"admin\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-idp/:id/test-user-membership",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-idp",
												":id",
												"test-user-membership"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Cloud Identity Provider identifier"
												}
											]
										},
										"description": "Do test search to ensure about configuration and mappings"
									},
									"response": [
										{
											"name": "Cloud Identity Provider test search result returned.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupname\": \"users\",\n  \"username\": \"admin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-idp/:id/test-user-membership",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-idp",
														":id",
														"test-user-membership"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"username\": \"admin\",\n  \"isMember\": true\n}"
										},
										{
											"name": "Cloud Identity Provider does not exist or is not active.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupname\": \"users\",\n  \"username\": \"admin\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/cloud-idp/:id/test-user-membership",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"cloud-idp",
														":id",
														"test-user-membership"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get information about all Cloud Identity Providers configurations.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/cloud-idp?page=0&page-size=100&sort=id:desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"cloud-idp"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:desc",
											"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Returns basic informations about all configured Cloud Identity Provider."
							},
							"response": [
								{
									"name": "Cloud Identity Provider configurations informations returned.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-idp?page=0&page-size=100&sort=id:desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-idp"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": \"1001\",\n      \"displayName\": \"Google Secure LDAP\",\n      \"enabled\": true,\n      \"providerName\": \"GOOGLE\"\n    },\n    {\n      \"id\": \"1001\",\n      \"displayName\": \"Google Secure LDAP\",\n      \"enabled\": true,\n      \"providerName\": \"GOOGLE\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Export Cloud Identity Providers collection\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/csv"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/cloud-idp/export?page=0&page-size=100&sort=id:asc&filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"cloud-idp",
										"export"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be seperated with a comma. Example: sort=id:desc,name:asc"
										},
										{
											"key": "filter",
											"value": "",
											"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name==\"*department*\""
										}
									]
								},
								"description": "Export Cloud Identity Providers collection\n"
							},
							"response": [
								{
									"name": "Export successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-idp/export?page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-idp",
												"export"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												},
												{
													"key": "filter",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/csv"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Export fields specified incorrectly - non-existing column or duplicate on the list.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-idp/export?page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-idp",
												"export"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												},
												{
													"key": "filter",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								{
									"name": "Export currently unavailable, all export-related resources are in use. Try again later.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/cloud-idp/export?page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"cloud-idp",
												"export"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												},
												{
													"key": "filter",
													"value": ""
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "computer-inventory-collection-settings",
					"item": [
						{
							"name": "custom-path",
							"item": [
								{
									"name": "Create Computer Inventory Collection Settings Custom Path",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"path\": \"/Example/Path/\",\n  \"scope\": \"APP\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/computer-inventory-collection-settings/custom-path",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computer-inventory-collection-settings",
												"custom-path"
											]
										},
										"description": "Creates a custom search path to use when collecting applications, fonts, and plug-ins."
									},
									"response": [
										{
											"name": "Custom path created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"path\": \"/Example/Path/\",\n  \"scope\": \"APP\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/computer-inventory-collection-settings/custom-path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-inventory-collection-settings",
														"custom-path"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "Invalid data response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"path\": \"/Example/Path/\",\n  \"scope\": \"APP\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/computer-inventory-collection-settings/custom-path",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-inventory-collection-settings",
														"custom-path"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete Custom Path from Computer Inventory Collection Settings",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/computer-inventory-collection-settings/custom-path/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computer-inventory-collection-settings",
												"custom-path",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) id of Custom Path"
												}
											]
										},
										"description": "Delete Custom Path from Computer Inventory Collection Settings"
									},
									"response": [
										{
											"name": "Custom path deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/computer-inventory-collection-settings/custom-path/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-inventory-collection-settings",
														"custom-path",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of Custom Path"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Invalid data response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/computer-inventory-collection-settings/custom-path/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-inventory-collection-settings",
														"custom-path",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of Custom Path"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Returns computer inventory settings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/computer-inventory-collection-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"computer-inventory-collection-settings"
									]
								},
								"description": "Returns computer inventory settings"
							},
							"response": [
								{
									"name": "Successful response returns the computer inventory settings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/computer-inventory-collection-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computer-inventory-collection-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"computerInventoryCollectionPreferences\": {\n    \"monitorApplicationUsage\": true,\n    \"includeFonts\": true,\n    \"includePlugins\": true,\n    \"includePackages\": true,\n    \"includeSoftwareUpdates\": true,\n    \"includeAccounts\": true,\n    \"calculateSizes\": false,\n    \"includeHiddenAccounts\": true,\n    \"includePrinters\": true,\n    \"includeServices\": true,\n    \"collectSyncedMobileDeviceInfo\": false,\n    \"updateLdapInfoOnComputerInventorySubmissions\": false,\n    \"monitorBeacons\": true,\n    \"allowChangingUserAndLocation\": true,\n    \"useUnixUserPaths\": true\n  },\n  \"applicationPaths\": [\n    {\n      \"id\": \"1\",\n      \"path\": \"/Example/Path/To/App/\"\n    },\n    {\n      \"id\": \"1\",\n      \"path\": \"/Example/Path/To/App/\"\n    }\n  ],\n  \"fontPaths\": [\n    {\n      \"id\": \"2\",\n      \"path\": \"/Example/Path/To/Font/\"\n    },\n    {\n      \"id\": \"2\",\n      \"path\": \"/Example/Path/To/Font/\"\n    }\n  ],\n  \"pluginPaths\": [\n    {\n      \"id\": \"3\",\n      \"path\": \"/Example/Path/To/Plugin/\"\n    },\n    {\n      \"id\": \"3\",\n      \"path\": \"/Example/Path/To/Plugin/\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update computer inventory settings",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"computerInventoryCollectionPreferences\": {\n    \"monitorApplicationUsage\": true,\n    \"includeFonts\": true,\n    \"includePlugins\": true,\n    \"includePackages\": true,\n    \"includeSoftwareUpdates\": true,\n    \"includeAccounts\": true,\n    \"calculateSizes\": false,\n    \"includeHiddenAccounts\": true,\n    \"includePrinters\": true,\n    \"includeServices\": true,\n    \"collectSyncedMobileDeviceInfo\": false,\n    \"updateLdapInfoOnComputerInventorySubmissions\": false,\n    \"monitorBeacons\": true,\n    \"allowChangingUserAndLocation\": true,\n    \"useUnixUserPaths\": true\n  },\n  \"applicationPaths\": [\n    {\n      \"id\": \"1\",\n      \"path\": \"/Example/Path/To/App/\"\n    },\n    {\n      \"id\": \"1\",\n      \"path\": \"/Example/Path/To/App/\"\n    }\n  ],\n  \"fontPaths\": [\n    {\n      \"id\": \"2\",\n      \"path\": \"/Example/Path/To/Font/\"\n    },\n    {\n      \"id\": \"2\",\n      \"path\": \"/Example/Path/To/Font/\"\n    }\n  ],\n  \"pluginPaths\": [\n    {\n      \"id\": \"3\",\n      \"path\": \"/Example/Path/To/Plugin/\"\n    },\n    {\n      \"id\": \"3\",\n      \"path\": \"/Example/Path/To/Plugin/\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/computer-inventory-collection-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"computer-inventory-collection-settings"
									]
								},
								"description": "Update computer inventory settings"
							},
							"response": [
								{
									"name": "Computer inventory settings updated",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"computerInventoryCollectionPreferences\": {\n    \"monitorApplicationUsage\": true,\n    \"includeFonts\": true,\n    \"includePlugins\": true,\n    \"includePackages\": true,\n    \"includeSoftwareUpdates\": true,\n    \"includeAccounts\": true,\n    \"calculateSizes\": false,\n    \"includeHiddenAccounts\": true,\n    \"includePrinters\": true,\n    \"includeServices\": true,\n    \"collectSyncedMobileDeviceInfo\": false,\n    \"updateLdapInfoOnComputerInventorySubmissions\": false,\n    \"monitorBeacons\": true,\n    \"allowChangingUserAndLocation\": true,\n    \"useUnixUserPaths\": true\n  },\n  \"applicationPaths\": [\n    {\n      \"id\": \"1\",\n      \"path\": \"/Example/Path/To/App/\"\n    },\n    {\n      \"id\": \"1\",\n      \"path\": \"/Example/Path/To/App/\"\n    }\n  ],\n  \"fontPaths\": [\n    {\n      \"id\": \"2\",\n      \"path\": \"/Example/Path/To/Font/\"\n    },\n    {\n      \"id\": \"2\",\n      \"path\": \"/Example/Path/To/Font/\"\n    }\n  ],\n  \"pluginPaths\": [\n    {\n      \"id\": \"3\",\n      \"path\": \"/Example/Path/To/Plugin/\"\n    },\n    {\n      \"id\": \"3\",\n      \"path\": \"/Example/Path/To/Plugin/\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/computer-inventory-collection-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computer-inventory-collection-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"computerInventoryCollectionPreferences\": {\n    \"monitorApplicationUsage\": true,\n    \"includeFonts\": true,\n    \"includePlugins\": true,\n    \"includePackages\": true,\n    \"includeSoftwareUpdates\": true,\n    \"includeAccounts\": true,\n    \"calculateSizes\": false,\n    \"includeHiddenAccounts\": true,\n    \"includePrinters\": true,\n    \"includeServices\": true,\n    \"collectSyncedMobileDeviceInfo\": false,\n    \"updateLdapInfoOnComputerInventorySubmissions\": false,\n    \"monitorBeacons\": true,\n    \"allowChangingUserAndLocation\": true,\n    \"useUnixUserPaths\": true\n  },\n  \"applicationPaths\": [\n    {\n      \"id\": \"1\",\n      \"path\": \"/Example/Path/To/App/\"\n    },\n    {\n      \"id\": \"1\",\n      \"path\": \"/Example/Path/To/App/\"\n    }\n  ],\n  \"fontPaths\": [\n    {\n      \"id\": \"2\",\n      \"path\": \"/Example/Path/To/Font/\"\n    },\n    {\n      \"id\": \"2\",\n      \"path\": \"/Example/Path/To/Font/\"\n    }\n  ],\n  \"pluginPaths\": [\n    {\n      \"id\": \"3\",\n      \"path\": \"/Example/Path/To/Plugin/\"\n    },\n    {\n      \"id\": \"3\",\n      \"path\": \"/Example/Path/To/Plugin/\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "computer-prestages",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "scope",
									"item": [
										{
											"name": "Get device Scope for a specific Computer Prestage\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												},
												"description": "Get device scope for a specific computer prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": 1,\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "Computer Prestage with that id does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Replace device Scope for a specific Computer Prestage\n",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												},
												"description": "Replace device scope for a specific computer prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": 1,\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "One or more serial numbers are not valid",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Computer Prestage with that id does not exist",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add device Scope for a specific Computer Prestage\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												},
												"description": "Add device scope for a specific computer prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": 1,\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "One or more serial numbers are not valid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Computer Prestage with that id does not exist",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Remove device Scope for a specific Computer Prestage\n",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												},
												"description": "Remove device scope for a specific computer prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": 1,\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "One or more serial numbers are not valid",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Computer Prestage with that id does not exist",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve a Computer Prestage with the supplied id\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/computer-prestages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computer-prestages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Computer Prestage identifier"
												}
											]
										},
										"description": "Retrieves a Computer Prestage with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": 1,\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isInstallProfilesDuringSetup\": true,\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": 1,\n  \"profileUUID\": \"29d-a8d8f-b8sdjndf-dsa9\",\n  \"siteId\": 5,\n  \"versionLock\": 0\n}"
										},
										{
											"name": "Computer Prestage with that id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update a Computer Prestage\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": 1,\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isInstallProfilesDuringSetup\": true,\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"versionLock\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/computer-prestages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computer-prestages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Computer Prestage identifier"
												}
											]
										},
										"description": "Updates a Computer Prestage"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": 1,\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isInstallProfilesDuringSetup\": true,\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": 1,\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isInstallProfilesDuringSetup\": true,\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": 1,\n  \"profileUUID\": \"29d-a8d8f-b8sdjndf-dsa9\",\n  \"siteId\": 5,\n  \"versionLock\": 0\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": 1,\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isInstallProfilesDuringSetup\": true,\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Computer Prestage with that id does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": 1,\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isInstallProfilesDuringSetup\": true,\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "The Computer Prestage was modified by another process. Read the Computer Prestage again for updated changes.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": 1,\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isInstallProfilesDuringSetup\": true,\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a Computer Prestage with the supplied id\n",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/computer-prestages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computer-prestages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Computer Prestage identifier"
												}
											]
										},
										"description": "Deletes a Computer Prestage with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Search for sorted and paged Computer Prestages\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/computer-prestages?page=0&size=100&pagesize=100&page-size=100&sort=id:asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"computer-prestages"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "100"
										},
										{
											"key": "pagesize",
											"value": "100"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Search for sorted and paged computer prestages"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/computer-prestages?page=0&size=100&pagesize=100&page-size=100&sort=id:asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computer-prestages"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "100"
												},
												{
													"key": "pagesize",
													"value": "100"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"profileUUID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"siteId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"versionLock\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"profileUUID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"siteId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"versionLock\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create a Computer Prestage\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authenticationPrompt\": \"LDAP authentication prompt\",\n  \"customPackageDistributionPointId\": 1,\n  \"customPackageIds\": [\n    1,\n    1\n  ],\n  \"department\": \"Oxbow\",\n  \"deviceEnrollmentProgramInstanceId\": 5,\n  \"displayName\": \"Example Mobile Prestage Name\",\n  \"enrollmentSiteId\": -1,\n  \"isDefaultPrestage\": false,\n  \"isEnableDeviceBasedActivationLock\": true,\n  \"isInstallProfilesDuringSetup\": true,\n  \"isKeepExistingLocationInformation\": true,\n  \"isKeepExistingSiteMembership\": true,\n  \"isMandatory\": false,\n  \"isMdmRemovable\": true,\n  \"isPreventActivationLock\": true,\n  \"isRequireAuthentication\": true,\n  \"locationInformation\": {\n    \"buildingId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"departmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"position\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"realname\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"room\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"username\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"prestageInstalledProfileIds\": [\n    1,\n    1\n  ],\n  \"purchasingInformation\": {\n    \"appleCareID\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isLeased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPurchased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"leaseDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lifeExpectancy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasePrice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingAccount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingContact\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vendor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"warrantyDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"supportEmailAddress\": \"example@example.com\",\n  \"supportPhoneNumber\": \"5555555555\",\n  \"skipSetupItems\": {\n    \"Location\": true,\n    \"Privacy\": false\n  },\n  \"anchorCertificates\": [\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"\n  ],\n  \"enrollmentCustomizationId\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/computer-prestages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"computer-prestages"
									]
								},
								"description": "Create a computer prestage"
							},
							"response": [
								{
									"name": "Computer Prestage was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationPrompt\": \"LDAP authentication prompt\",\n  \"customPackageDistributionPointId\": 1,\n  \"customPackageIds\": [\n    1,\n    1\n  ],\n  \"department\": \"Oxbow\",\n  \"deviceEnrollmentProgramInstanceId\": 5,\n  \"displayName\": \"Example Mobile Prestage Name\",\n  \"enrollmentSiteId\": -1,\n  \"isDefaultPrestage\": false,\n  \"isEnableDeviceBasedActivationLock\": true,\n  \"isInstallProfilesDuringSetup\": true,\n  \"isKeepExistingLocationInformation\": true,\n  \"isKeepExistingSiteMembership\": true,\n  \"isMandatory\": false,\n  \"isMdmRemovable\": true,\n  \"isPreventActivationLock\": true,\n  \"isRequireAuthentication\": true,\n  \"locationInformation\": {\n    \"buildingId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"departmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"position\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"realname\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"room\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"username\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"prestageInstalledProfileIds\": [\n    1,\n    1\n  ],\n  \"purchasingInformation\": {\n    \"appleCareID\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isLeased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPurchased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"leaseDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lifeExpectancy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasePrice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingAccount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingContact\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vendor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"warrantyDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"supportEmailAddress\": \"example@example.com\",\n  \"supportPhoneNumber\": \"5555555555\",\n  \"skipSetupItems\": {\n    \"Location\": true,\n    \"Privacy\": false\n  },\n  \"anchorCertificates\": [\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"\n  ],\n  \"enrollmentCustomizationId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/computer-prestages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computer-prestages"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": 1,\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isInstallProfilesDuringSetup\": true,\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": 1,\n  \"profileUUID\": \"29d-a8d8f-b8sdjndf-dsa9\",\n  \"siteId\": 5,\n  \"versionLock\": 0\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationPrompt\": \"LDAP authentication prompt\",\n  \"customPackageDistributionPointId\": 1,\n  \"customPackageIds\": [\n    1,\n    1\n  ],\n  \"department\": \"Oxbow\",\n  \"deviceEnrollmentProgramInstanceId\": 5,\n  \"displayName\": \"Example Mobile Prestage Name\",\n  \"enrollmentSiteId\": -1,\n  \"isDefaultPrestage\": false,\n  \"isEnableDeviceBasedActivationLock\": true,\n  \"isInstallProfilesDuringSetup\": true,\n  \"isKeepExistingLocationInformation\": true,\n  \"isKeepExistingSiteMembership\": true,\n  \"isMandatory\": false,\n  \"isMdmRemovable\": true,\n  \"isPreventActivationLock\": true,\n  \"isRequireAuthentication\": true,\n  \"locationInformation\": {\n    \"buildingId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"departmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"position\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"realname\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"room\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"username\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"prestageInstalledProfileIds\": [\n    1,\n    1\n  ],\n  \"purchasingInformation\": {\n    \"appleCareID\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isLeased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPurchased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"leaseDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lifeExpectancy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasePrice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingAccount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingContact\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vendor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"warrantyDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"supportEmailAddress\": \"example@example.com\",\n  \"supportPhoneNumber\": \"5555555555\",\n  \"skipSetupItems\": {\n    \"Location\": true,\n    \"Privacy\": false\n  },\n  \"anchorCertificates\": [\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"\n  ],\n  \"enrollmentCustomizationId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/computer-prestages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computer-prestages"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get all device Scope for all Computer Prestages\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/computer-prestages/scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"computer-prestages",
										"scope"
									]
								},
								"description": "Get all device scope for all computer prestages"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/computer-prestages/scope",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computer-prestages",
												"scope"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"serialsByPrestageId\": {\n    \"ABCD\": 1,\n    \"XYZ\": 12\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "computers-inventory",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "attachments",
									"item": [
										{
											"name": "{attachment Id}",
											"item": [
												{
													"name": "Download attachment file",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "text/plain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/computers-inventory/:id/attachments/:attachmentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computers-inventory",
																":id",
																"attachments",
																":attachmentId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of computer record"
																},
																{
																	"key": "attachmentId",
																	"value": "in aute",
																	"description": "(Required) instance id of attachment object"
																}
															]
														},
														"description": "Download attachment file"
													},
													"response": [
														{
															"name": "Attachment successfully downloaded",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/computers-inventory/:id/attachments/:attachmentId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"computers-inventory",
																		":id",
																		"attachments",
																		":attachmentId"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) instance id of computer record"
																		},
																		{
																			"key": "attachmentId",
																			"value": "in aute",
																			"description": "(Required) instance id of attachment object"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": "eu est in"
														},
														{
															"name": "Specified computer object or attachment does not exist.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/computers-inventory/:id/attachments/:attachmentId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"computers-inventory",
																		":id",
																		"attachments",
																		":attachmentId"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) instance id of computer record"
																		},
																		{
																			"key": "attachmentId",
																			"value": "in aute",
																			"description": "(Required) instance id of attachment object"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Remove attachment",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/computers-inventory/:id/attachments/:attachmentId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computers-inventory",
																":id",
																"attachments",
																":attachmentId"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of computer record"
																},
																{
																	"key": "attachmentId",
																	"value": "in aute",
																	"description": "(Required) instance id of attachment object"
																}
															]
														},
														"description": "Remove attachment"
													},
													"response": [
														{
															"name": "Attachment successfully removed",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/computers-inventory/:id/attachments/:attachmentId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"computers-inventory",
																		":id",
																		"attachments",
																		":attachmentId"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) instance id of computer record"
																		},
																		{
																			"key": "attachmentId",
																			"value": "in aute",
																			"description": "(Required) instance id of attachment object"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Specified computer object or attachment does not exist.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/computers-inventory/:id/attachments/:attachmentId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"computers-inventory",
																		":id",
																		"attachments",
																		":attachmentId"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) instance id of computer record"
																		},
																		{
																			"key": "attachmentId",
																			"value": "in aute",
																			"description": "(Required) instance id of attachment object"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Upload attachment and assign to computer",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"description": "(Required) The file to upload",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/computers-inventory/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computers-inventory",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of computer record"
														}
													]
												},
												"description": "Upload attachment and assign to computer"
											},
											"response": [
												{
													"name": "Successfully uploaded attachment",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"description": "(Required) The file to upload",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computers-inventory/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computers-inventory",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of computer record"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
												},
												{
													"name": "Specified computer object does not exist.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"description": "(Required) The file to upload",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/computers-inventory/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"computers-inventory",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of computer record"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Return General section of a Computer",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/computers-inventory/:id?section=GENERAL",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computers-inventory",
												":id"
											],
											"query": [
												{
													"key": "section",
													"value": "GENERAL",
													"description": "section of computer details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section=general&section=hardware"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of computer record"
												}
											]
										},
										"description": "Return General section of a Computer"
									},
									"response": [
										{
											"name": "Details of computer were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/computers-inventory/:id?section=GENERAL",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computers-inventory",
														":id"
													],
													"query": [
														{
															"key": "section",
															"value": "GENERAL"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of computer record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"udid\": \"123\",\n  \"general\": {\n    \"name\": \"Boalime\",\n    \"lastIpAddress\": \"247.185.82.186\",\n    \"lastReportedIp\": \"247.185.82.186\",\n    \"jamfBinaryVersion\": \"9.27\",\n    \"platform\": \"Mac\",\n    \"barcode1\": \"5 12345 678900\",\n    \"barcode2\": \"5 12345 678900\",\n    \"assetTag\": \"304822\",\n    \"remoteManagement\": {\n      \"managed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementUsername\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"supervised\": true,\n    \"mdmCapable\": {\n      \"capable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"capableUsers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"reportDate\": \"2018-10-31T18:04:13Z\",\n    \"lastContactTime\": \"2018-10-31T18:04:13Z\",\n    \"lastCloudBackupDate\": \"2018-10-31T18:04:13Z\",\n    \"lastEnrolledDate\": \"2018-10-31T18:04:13Z\",\n    \"mdmProfileExpiration\": \"2018-10-31T18:04:13Z\",\n    \"initialEntryDate\": \"2018-10-31\",\n    \"distributionPoint\": \"distribution point name\",\n    \"enrollmentMethod\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"site\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"itunesStoreAccountActive\": true,\n    \"enrolledViaAutomatedDeviceEnrollment\": true,\n    \"userApprovedMdm\": true,\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"diskEncryption\": {\n    \"bootPartitionEncryptionDetails\": {\n      \"partitionName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partitionFileVault2State\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partitionFileVault2Percent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"individualRecoveryKeyValidityStatus\": \"NOT_APPLICABLE\",\n    \"institutionalRecoveryKeyPresent\": true,\n    \"diskEncryptionConfigurationName\": \"Test configuration\",\n    \"fileVault2EnabledUserNames\": [\n      \"admin\"\n    ],\n    \"fileVault2EligibilityMessage\": \"Not a boot partition\"\n  },\n  \"purchasing\": {\n    \"leased\": true,\n    \"purchased\": true,\n    \"poNumber\": \"53-1\",\n    \"poDate\": \"2019-01-01\",\n    \"vendor\": \"Example Vendor\",\n    \"warrantyDate\": \"2019-01-01\",\n    \"appleCareId\": \"abcd\",\n    \"leaseDate\": \"2019-01-01\",\n    \"purchasePrice\": \"$500\",\n    \"lifeExpectancy\": 5,\n    \"purchasingAccount\": \"admin\",\n    \"purchasingContact\": \"true\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"applications\": [\n    {\n      \"name\": \"Microsoft Word\",\n      \"path\": \"/usr/local/app\",\n      \"version\": \"1.0.0\",\n      \"macAppStore\": true,\n      \"sizeMegabytes\": 25,\n      \"bundleId\": \"1\",\n      \"updateAvailable\": false,\n      \"externalVersionId\": \"1\"\n    },\n    {\n      \"name\": \"Microsoft Word\",\n      \"path\": \"/usr/local/app\",\n      \"version\": \"1.0.0\",\n      \"macAppStore\": true,\n      \"sizeMegabytes\": 25,\n      \"bundleId\": \"1\",\n      \"updateAvailable\": false,\n      \"externalVersionId\": \"1\"\n    }\n  ],\n  \"storage\": {\n    \"bootDriveAvailableSpaceMegabytes\": 3072,\n    \"disks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"userAndLocation\": {\n    \"username\": \"Madison Anderson\",\n    \"realname\": \"13-inch MacBook\",\n    \"email\": \"email@com.pl\",\n    \"position\": \"IT Team Lead\",\n    \"phone\": \"123-456-789\",\n    \"departmentId\": \"1\",\n    \"buildingId\": \"1\",\n    \"room\": \"5\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"configurationProfiles\": [\n    {\n      \"id\": \"1\",\n      \"username\": \"username\",\n      \"lastInstalled\": \"2018-10-31T18:04:13Z\",\n      \"removable\": true,\n      \"displayName\": \"Displayed profile\",\n      \"profileIdentifier\": \"0ae590fe-9b30-11ea-bb37-0242ac130002\"\n    },\n    {\n      \"id\": \"1\",\n      \"username\": \"username\",\n      \"lastInstalled\": \"2018-10-31T18:04:13Z\",\n      \"removable\": true,\n      \"displayName\": \"Displayed profile\",\n      \"profileIdentifier\": \"0ae590fe-9b30-11ea-bb37-0242ac130002\"\n    }\n  ],\n  \"printers\": [\n    {\n      \"name\": \"My Printer\",\n      \"type\": \"XYZ 1122\",\n      \"uri\": \"ipp://10.0.0.5\",\n      \"location\": \"7th floor\"\n    },\n    {\n      \"name\": \"My Printer\",\n      \"type\": \"XYZ 1122\",\n      \"uri\": \"ipp://10.0.0.5\",\n      \"location\": \"7th floor\"\n    }\n  ],\n  \"services\": [\n    {\n      \"name\": \"SomeService\"\n    },\n    {\n      \"name\": \"SomeService\"\n    }\n  ],\n  \"hardware\": {\n    \"make\": \"Apple\",\n    \"model\": \"13-inch MacBook Pro (Mid 2012)\",\n    \"modelIdentifier\": \"MacBookPro9,2\",\n    \"serialNumber\": \"C02ZC2QYLVDL\",\n    \"processorSpeedMhz\": 2100,\n    \"processorCount\": 2,\n    \"coreCount\": 2,\n    \"processorType\": \"Intel Core i5\",\n    \"processorArchitecture\": \"i386\",\n    \"busSpeedMhz\": 2133,\n    \"cacheSizeKilobytes\": 3072,\n    \"networkAdapterType\": \"Foo\",\n    \"macAddress\": \"6A:2C:4B:B7:65:B5\",\n    \"altNetworkAdapterType\": \"Bar\",\n    \"altMacAddress\": \"82:45:58:44:dc:01\",\n    \"totalRamMegabytes\": 4096,\n    \"openRamSlots\": 0,\n    \"batteryCapacityPercent\": 85,\n    \"smcVersion\": \"2.2f38\",\n    \"nicSpeed\": \"N/A\",\n    \"opticalDrive\": \"MATSHITA DVD-R UJ-8A8\",\n    \"bootRom\": \"MBP91.00D3.B08\",\n    \"bleCapable\": false,\n    \"supportsIosAppInstalls\": false,\n    \"appleSilicon\": false,\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"localUserAccounts\": [\n    {\n      \"uid\": \"501\",\n      \"username\": \"jamf\",\n      \"fullName\": \"John Jamf\",\n      \"admin\": true,\n      \"homeDirectory\": \"/Users/jamf\",\n      \"homeDirectorySizeMb\": 131072,\n      \"fileVault2Enabled\": true,\n      \"userAccountType\": \"LOCAL\",\n      \"passwordMinLength\": 4,\n      \"passwordMaxAge\": 5,\n      \"passwordMinComplexCharacters\": 5,\n      \"passwordHistoryDepth\": 5,\n      \"passwordRequireAlphanumeric\": true,\n      \"computerAzureActiveDirectoryId\": \"1\",\n      \"userAzureActiveDirectoryId\": \"1\",\n      \"azureActiveDirectoryId\": \"ACTIVATED\"\n    },\n    {\n      \"uid\": \"501\",\n      \"username\": \"jamf\",\n      \"fullName\": \"John Jamf\",\n      \"admin\": true,\n      \"homeDirectory\": \"/Users/jamf\",\n      \"homeDirectorySizeMb\": 131072,\n      \"fileVault2Enabled\": true,\n      \"userAccountType\": \"LOCAL\",\n      \"passwordMinLength\": 4,\n      \"passwordMaxAge\": 5,\n      \"passwordMinComplexCharacters\": 5,\n      \"passwordHistoryDepth\": 5,\n      \"passwordRequireAlphanumeric\": true,\n      \"computerAzureActiveDirectoryId\": \"1\",\n      \"userAzureActiveDirectoryId\": \"1\",\n      \"azureActiveDirectoryId\": \"ACTIVATED\"\n    }\n  ],\n  \"certificates\": [\n    {\n      \"commonName\": \"jamf.com\",\n      \"identity\": true,\n      \"expirationDate\": \"2030-10-31T18:04:13Z\",\n      \"username\": \"test\",\n      \"lifecycleStatus\": \"ACTIVE\",\n      \"certificateStatus\": \"ISSUED\",\n      \"subjectName\": \"CN=jamf.com\",\n      \"serialNumber\": \"40f3d9fb\",\n      \"sha1Fingerprint\": \"ed361458724d06082b2314acdb82e1f586f085f5\",\n      \"issuedDate\": \"2022-05-23T14:54:10Z\"\n    },\n    {\n      \"commonName\": \"jamf.com\",\n      \"identity\": true,\n      \"expirationDate\": \"2030-10-31T18:04:13Z\",\n      \"username\": \"test\",\n      \"lifecycleStatus\": \"ACTIVE\",\n      \"certificateStatus\": \"ISSUED\",\n      \"subjectName\": \"CN=jamf.com\",\n      \"serialNumber\": \"40f3d9fb\",\n      \"sha1Fingerprint\": \"ed361458724d06082b2314acdb82e1f586f085f5\",\n      \"issuedDate\": \"2022-05-23T14:54:10Z\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"Attachment.pdf\",\n      \"fileType\": \"application/pdf\",\n      \"sizeBytes\": 1024\n    },\n    {\n      \"id\": \"1\",\n      \"name\": \"Attachment.pdf\",\n      \"fileType\": \"application/pdf\",\n      \"sizeBytes\": 1024\n    }\n  ],\n  \"plugins\": [\n    {\n      \"name\": \"plugin name\",\n      \"version\": \"1.02\",\n      \"path\": \"/Applications/\"\n    },\n    {\n      \"name\": \"plugin name\",\n      \"version\": \"1.02\",\n      \"path\": \"/Applications/\"\n    }\n  ],\n  \"packageReceipts\": {\n    \"installedByJamfPro\": [\n      \"com.jamf.protect.JamfProtect\",\n      \"com.jamf.protect.JamfProtect\"\n    ],\n    \"installedByInstallerSwu\": [\n      \"com.apple.pkg.Core\",\n      \"com.apple.pkg.Core\"\n    ],\n    \"cached\": [\n      \"com.jamf.protect.JamfProtect\",\n      \"com.jamf.protect.JamfProtect\"\n    ]\n  },\n  \"fonts\": [\n    {\n      \"name\": \"font name\",\n      \"version\": \"1.02\",\n      \"path\": \"/Applications/\"\n    },\n    {\n      \"name\": \"font name\",\n      \"version\": \"1.02\",\n      \"path\": \"/Applications/\"\n    }\n  ],\n  \"security\": {\n    \"sipStatus\": \"ENABLED\",\n    \"gatekeeperStatus\": \"APP_STORE_AND_IDENTIFIED_DEVELOPERS\",\n    \"xprotectVersion\": \"1.2.3\",\n    \"autoLoginDisabled\": false,\n    \"remoteDesktopEnabled\": true,\n    \"activationLockEnabled\": true,\n    \"recoveryLockEnabled\": true,\n    \"firewallEnabled\": true,\n    \"secureBootLevel\": \"FULL_SECURITY\",\n    \"externalBootLevel\": \"ALLOW_BOOTING_FROM_EXTERNAL_MEDIA\",\n    \"bootstrapTokenAllowed\": true\n  },\n  \"operatingSystem\": {\n    \"name\": \"Mac OS X\",\n    \"version\": \"10.9.5\",\n    \"build\": \"13A603\",\n    \"activeDirectoryStatus\": \"Not Bound\",\n    \"fileVault2Status\": \"ALL_ENCRYPTED\",\n    \"softwareUpdateDeviceId\": \"J132AP\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"licensedSoftware\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"Microsoft Word\"\n    },\n    {\n      \"id\": \"1\",\n      \"name\": \"Microsoft Word\"\n    }\n  ],\n  \"ibeacons\": [\n    {\n      \"name\": \"room A\"\n    },\n    {\n      \"name\": \"room A\"\n    }\n  ],\n  \"softwareUpdates\": [\n    {\n      \"name\": \"BEdit\",\n      \"version\": \"1.15.2\",\n      \"packageName\": \"com.apple.pkg.AdditionalEssentials\"\n    },\n    {\n      \"name\": \"BEdit\",\n      \"version\": \"1.15.2\",\n      \"packageName\": \"com.apple.pkg.AdditionalEssentials\"\n    }\n  ],\n  \"extensionAttributes\": [\n    {\n      \"definitionId\": \"23\",\n      \"name\": \"Some Attribute\",\n      \"description\": \"Some Attribute defines how much Foo impacts Bar.\",\n      \"enabled\": true,\n      \"multiValue\": true,\n      \"values\": [\n        \"foo\",\n        \"bar\"\n      ],\n      \"dataType\": \"STRING\",\n      \"options\": [\n        \"foo\",\n        \"bar\"\n      ],\n      \"inputType\": \"TEXT\"\n    },\n    {\n      \"definitionId\": \"23\",\n      \"name\": \"Some Attribute\",\n      \"description\": \"Some Attribute defines how much Foo impacts Bar.\",\n      \"enabled\": true,\n      \"multiValue\": true,\n      \"values\": [\n        \"foo\",\n        \"bar\"\n      ],\n      \"dataType\": \"STRING\",\n      \"options\": [\n        \"foo\",\n        \"bar\"\n      ],\n      \"inputType\": \"TEXT\"\n    }\n  ],\n  \"contentCaching\": {\n    \"computerContentCachingInformationId\": \"1\",\n    \"parents\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"alerts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"activated\": false,\n    \"active\": false,\n    \"actualCacheBytesUsed\": 0,\n    \"cacheDetails\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"cacheBytesFree\": 23353884672,\n    \"cacheBytesLimit\": 0,\n    \"cacheStatus\": \"OK\",\n    \"cacheBytesUsed\": 0,\n    \"dataMigrationCompleted\": false,\n    \"dataMigrationProgressPercentage\": 0,\n    \"dataMigrationError\": {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domain\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"maxCachePressureLast1HourPercentage\": 0,\n    \"personalCacheBytesFree\": 23353884672,\n    \"personalCacheBytesLimit\": 0,\n    \"personalCacheBytesUsed\": 0,\n    \"port\": 0,\n    \"publicAddress\": \"SomeAddress\",\n    \"registrationError\": \"NOT_ACTIVATED\",\n    \"registrationResponseCode\": 403,\n    \"registrationStarted\": \"2018-10-31T18:04:13Z\",\n    \"registrationStatus\": \"CONTENT_CACHING_FAILED\",\n    \"restrictedMedia\": false,\n    \"serverGuid\": \"CD1E1291-4AF9-4468-B5D5-0F780C13DB2F\",\n    \"startupStatus\": \"FAILED\",\n    \"tetheratorStatus\": \"CONTENT_CACHING_DISABLED\",\n    \"totalBytesAreSince\": \"2018-10-31T18:04:13Z\",\n    \"totalBytesDropped\": 0,\n    \"totalBytesImported\": 0,\n    \"totalBytesReturnedToChildren\": 0,\n    \"totalBytesReturnedToClients\": 0,\n    \"totalBytesReturnedToPeers\": 0,\n    \"totalBytesStoredFromOrigin\": 0,\n    \"totalBytesStoredFromParents\": 0,\n    \"totalBytesStoredFromPeers\": 0\n  },\n  \"groupMemberships\": [\n    {\n      \"groupId\": \"1\",\n      \"groupName\": \"groupOne\",\n      \"smartGroup\": true\n    },\n    {\n      \"groupId\": \"1\",\n      \"groupName\": \"groupOne\",\n      \"smartGroup\": true\n    }\n  ]\n}"
										},
										{
											"name": "Specified computer object does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/computers-inventory/:id?section=GENERAL",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computers-inventory",
														":id"
													],
													"query": [
														{
															"key": "section",
															"value": "GENERAL"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of computer record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Remove specified Computer record",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/computers-inventory/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computers-inventory",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of computer record"
												}
											]
										},
										"description": "Remove specified Computer record"
									},
									"response": [
										{
											"name": "Computer record sucessfully removed",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/computers-inventory/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computers-inventory",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of computer record"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Specified computer object id does not exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/computers-inventory/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computers-inventory",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of computer record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Return a Computers Recovery Lock Password",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/computers-inventory/:id/view-recovery-lock-password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computers-inventory",
												":id",
												"view-recovery-lock-password"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of computer record"
												}
											]
										},
										"description": "Return a Computers Recovery Lock Password"
									},
									"response": [
										{
											"name": "Recovery Lock Password",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/computers-inventory/:id/view-recovery-lock-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computers-inventory",
														":id",
														"view-recovery-lock-password"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of computer record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"recoveryLockPassword\": \"password123\"\n}"
										},
										{
											"name": "Specified computer object does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/computers-inventory/:id/view-recovery-lock-password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"computers-inventory",
														":id",
														"view-recovery-lock-password"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of computer record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Return paginated Computer Inventory records",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/computers-inventory?section=GENERAL&page=0&page-size=100&sort=id:asc&filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"computers-inventory"
									],
									"query": [
										{
											"key": "section",
											"value": "GENERAL",
											"description": "section of computer details, if not specified, General section data is returned. Multiple section parameters are supported, e.g. section=GENERAL&section=HARDWARE"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `general.name:asc`. Multiple sort criteria are supported and must be separated with\na comma.\n\nFields allowed in the sort: `general.name`, `udid`, `id`, `general.assetTag`,\n`general.jamfBinaryVersion`, `general.lastContactTime`, `general.lastEnrolledDate`, `general.lastCloudBackupDate`,\n`general.reportDate`, `general.remoteManagement.managementUsername`,\n`general.mdmCertificateExpiration`, `general.platform`,\n`hardware.make`, `hardware.model`,\n`operatingSystem.build`, `operatingSystem.name`, `operatingSystem.version`,\n`userAndLocation.realname`,\n`purchasing.lifeExpectancy`, `purchasing.warrantyDate`\n\nExample: `sort=udid:desc,general.name:asc`.\n"
										},
										{
											"key": "filter",
											"value": "",
											"description": "Query in the RSQL format, allowing to filter computer inventory collection.\nDefault filter is empty query - returning all results for the requested page.\n\nFields allowed in the query: `general.name`, `udid`, `id`, `general.assetTag`, `general.barcode1`, `general.barcode2`,\n`general.enrolledViaAutomatedDeviceEnrollment`, `general.lastIpAddress`, `general.itunesStoreAccountActive`,\n`general.jamfBinaryVersion`, `general.lastContactTime`, `general.lastEnrolledDate`, `general.lastCloudBackupDate`,\n`general.reportDate`, `general.lastReportedIp`, `general.remoteManagement.managed`, `general.remoteManagement.managementUsername`,\n`general.mdmCapable.capable`, `general.mdmCertificateExpiration`, `general.platform`, `general.supervised`, `general.userApprovedMdm`,\n`hardware.bleCapable`, `hardware.macAddress`, `hardware.make`, `hardware.model`, `hardware.modelIdentifier`, `hardware.serialNumber`,\n`hardware.supportsIosAppInstalls`,`hardware.isAppleSilicon`, `operatingSystem.activeDirectoryStatus`, `operatingSystem.fileVault2Status`,\n`operatingSystem.build`, `operatingSystem.name`, `operatingSystem.version`, `operatingSystem.softwareUpdateDeviceId`, `security.activationLockEnabled`,\n`security.recoveryLockEnabled`,`security.firewallEnabled`,`userAndLocation.buildingId`, `userAndLocation.departmentId`, `userAndLocation.email`, `userAndLocation.realname`,\n`userAndLocation.phone`, `userAndLocation.position`,`userAndLocation.room`, `userAndLocation.username`,\n`purchasing.appleCareId`, `purchasing.lifeExpectancy`, `purchasing.purchased`, `purchasing.leased`, `purchasing.vendor`, `purchasing.warrantyDate`,\n\nThis param can be combined with paging and sorting.\nExample: `filter=general.name==\"Orchard\"`\n"
										}
									]
								},
								"description": "Return paginated Computer Inventory records"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/computers-inventory?section=GENERAL&page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computers-inventory"
											],
											"query": [
												{
													"key": "section",
													"value": "GENERAL"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												},
												{
													"key": "filter",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"id\": \"1\",\n      \"udid\": \"123\",\n      \"general\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"diskEncryption\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasing\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"applications\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"storage\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userAndLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"configurationProfiles\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"printers\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"services\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"hardware\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"localUserAccounts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"certificates\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"attachments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"plugins\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"packageReceipts\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fonts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"security\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"operatingSystem\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licensedSoftware\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ibeacons\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"softwareUpdates\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"extensionAttributes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"contentCaching\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupMemberships\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"1\",\n      \"udid\": \"123\",\n      \"general\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"diskEncryption\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasing\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"applications\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"storage\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userAndLocation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"configurationProfiles\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"printers\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"services\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"hardware\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"localUserAccounts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"certificates\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"attachments\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"plugins\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"packageReceipts\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fonts\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"security\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"operatingSystem\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licensedSoftware\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"ibeacons\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"softwareUpdates\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"extensionAttributes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"contentCaching\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupMemberships\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "computers-inventory-detail/{id}",
					"item": [
						{
							"name": "Return all sections of a computer",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/computers-inventory-detail/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"computers-inventory-detail",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "in aute",
											"description": "(Required) instance id of computer record"
										}
									]
								},
								"description": "Return all sections of a computer"
							},
							"response": [
								{
									"name": "Details of computer were found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/computers-inventory-detail/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computers-inventory-detail",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of computer record"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"udid\": \"123\",\n  \"general\": {\n    \"name\": \"Boalime\",\n    \"lastIpAddress\": \"247.185.82.186\",\n    \"lastReportedIp\": \"247.185.82.186\",\n    \"jamfBinaryVersion\": \"9.27\",\n    \"platform\": \"Mac\",\n    \"barcode1\": \"5 12345 678900\",\n    \"barcode2\": \"5 12345 678900\",\n    \"assetTag\": \"304822\",\n    \"remoteManagement\": {\n      \"managed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementUsername\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"supervised\": true,\n    \"mdmCapable\": {\n      \"capable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"capableUsers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"reportDate\": \"2018-10-31T18:04:13Z\",\n    \"lastContactTime\": \"2018-10-31T18:04:13Z\",\n    \"lastCloudBackupDate\": \"2018-10-31T18:04:13Z\",\n    \"lastEnrolledDate\": \"2018-10-31T18:04:13Z\",\n    \"mdmProfileExpiration\": \"2018-10-31T18:04:13Z\",\n    \"initialEntryDate\": \"2018-10-31\",\n    \"distributionPoint\": \"distribution point name\",\n    \"enrollmentMethod\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"site\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"itunesStoreAccountActive\": true,\n    \"enrolledViaAutomatedDeviceEnrollment\": true,\n    \"userApprovedMdm\": true,\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"diskEncryption\": {\n    \"bootPartitionEncryptionDetails\": {\n      \"partitionName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partitionFileVault2State\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partitionFileVault2Percent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"individualRecoveryKeyValidityStatus\": \"INVALID\",\n    \"institutionalRecoveryKeyPresent\": true,\n    \"diskEncryptionConfigurationName\": \"Test configuration\",\n    \"fileVault2EnabledUserNames\": [\n      \"admin\"\n    ],\n    \"fileVault2EligibilityMessage\": \"Not a boot partition\"\n  },\n  \"purchasing\": {\n    \"leased\": true,\n    \"purchased\": true,\n    \"poNumber\": \"53-1\",\n    \"poDate\": \"2019-01-01\",\n    \"vendor\": \"Example Vendor\",\n    \"warrantyDate\": \"2019-01-01\",\n    \"appleCareId\": \"abcd\",\n    \"leaseDate\": \"2019-01-01\",\n    \"purchasePrice\": \"$500\",\n    \"lifeExpectancy\": 5,\n    \"purchasingAccount\": \"admin\",\n    \"purchasingContact\": \"true\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"applications\": [\n    {\n      \"name\": \"Microsoft Word\",\n      \"path\": \"/usr/local/app\",\n      \"version\": \"1.0.0\",\n      \"macAppStore\": true,\n      \"sizeMegabytes\": 25,\n      \"bundleId\": \"1\",\n      \"updateAvailable\": false,\n      \"externalVersionId\": \"1\"\n    },\n    {\n      \"name\": \"Microsoft Word\",\n      \"path\": \"/usr/local/app\",\n      \"version\": \"1.0.0\",\n      \"macAppStore\": true,\n      \"sizeMegabytes\": 25,\n      \"bundleId\": \"1\",\n      \"updateAvailable\": false,\n      \"externalVersionId\": \"1\"\n    }\n  ],\n  \"storage\": {\n    \"bootDriveAvailableSpaceMegabytes\": 3072,\n    \"disks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"userAndLocation\": {\n    \"username\": \"Madison Anderson\",\n    \"realname\": \"13-inch MacBook\",\n    \"email\": \"email@com.pl\",\n    \"position\": \"IT Team Lead\",\n    \"phone\": \"123-456-789\",\n    \"departmentId\": \"1\",\n    \"buildingId\": \"1\",\n    \"room\": \"5\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"configurationProfiles\": [\n    {\n      \"id\": \"1\",\n      \"username\": \"username\",\n      \"lastInstalled\": \"2018-10-31T18:04:13Z\",\n      \"removable\": true,\n      \"displayName\": \"Displayed profile\",\n      \"profileIdentifier\": \"0ae590fe-9b30-11ea-bb37-0242ac130002\"\n    },\n    {\n      \"id\": \"1\",\n      \"username\": \"username\",\n      \"lastInstalled\": \"2018-10-31T18:04:13Z\",\n      \"removable\": true,\n      \"displayName\": \"Displayed profile\",\n      \"profileIdentifier\": \"0ae590fe-9b30-11ea-bb37-0242ac130002\"\n    }\n  ],\n  \"printers\": [\n    {\n      \"name\": \"My Printer\",\n      \"type\": \"XYZ 1122\",\n      \"uri\": \"ipp://10.0.0.5\",\n      \"location\": \"7th floor\"\n    },\n    {\n      \"name\": \"My Printer\",\n      \"type\": \"XYZ 1122\",\n      \"uri\": \"ipp://10.0.0.5\",\n      \"location\": \"7th floor\"\n    }\n  ],\n  \"services\": [\n    {\n      \"name\": \"SomeService\"\n    },\n    {\n      \"name\": \"SomeService\"\n    }\n  ],\n  \"hardware\": {\n    \"make\": \"Apple\",\n    \"model\": \"13-inch MacBook Pro (Mid 2012)\",\n    \"modelIdentifier\": \"MacBookPro9,2\",\n    \"serialNumber\": \"C02ZC2QYLVDL\",\n    \"processorSpeedMhz\": 2100,\n    \"processorCount\": 2,\n    \"coreCount\": 2,\n    \"processorType\": \"Intel Core i5\",\n    \"processorArchitecture\": \"i386\",\n    \"busSpeedMhz\": 2133,\n    \"cacheSizeKilobytes\": 3072,\n    \"networkAdapterType\": \"Foo\",\n    \"macAddress\": \"6A:2C:4B:B7:65:B5\",\n    \"altNetworkAdapterType\": \"Bar\",\n    \"altMacAddress\": \"82:45:58:44:dc:01\",\n    \"totalRamMegabytes\": 4096,\n    \"openRamSlots\": 0,\n    \"batteryCapacityPercent\": 85,\n    \"smcVersion\": \"2.2f38\",\n    \"nicSpeed\": \"N/A\",\n    \"opticalDrive\": \"MATSHITA DVD-R UJ-8A8\",\n    \"bootRom\": \"MBP91.00D3.B08\",\n    \"bleCapable\": false,\n    \"supportsIosAppInstalls\": false,\n    \"appleSilicon\": false,\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"localUserAccounts\": [\n    {\n      \"uid\": \"501\",\n      \"username\": \"jamf\",\n      \"fullName\": \"John Jamf\",\n      \"admin\": true,\n      \"homeDirectory\": \"/Users/jamf\",\n      \"homeDirectorySizeMb\": 131072,\n      \"fileVault2Enabled\": true,\n      \"userAccountType\": \"LOCAL\",\n      \"passwordMinLength\": 4,\n      \"passwordMaxAge\": 5,\n      \"passwordMinComplexCharacters\": 5,\n      \"passwordHistoryDepth\": 5,\n      \"passwordRequireAlphanumeric\": true,\n      \"computerAzureActiveDirectoryId\": \"1\",\n      \"userAzureActiveDirectoryId\": \"1\",\n      \"azureActiveDirectoryId\": \"ACTIVATED\"\n    },\n    {\n      \"uid\": \"501\",\n      \"username\": \"jamf\",\n      \"fullName\": \"John Jamf\",\n      \"admin\": true,\n      \"homeDirectory\": \"/Users/jamf\",\n      \"homeDirectorySizeMb\": 131072,\n      \"fileVault2Enabled\": true,\n      \"userAccountType\": \"LOCAL\",\n      \"passwordMinLength\": 4,\n      \"passwordMaxAge\": 5,\n      \"passwordMinComplexCharacters\": 5,\n      \"passwordHistoryDepth\": 5,\n      \"passwordRequireAlphanumeric\": true,\n      \"computerAzureActiveDirectoryId\": \"1\",\n      \"userAzureActiveDirectoryId\": \"1\",\n      \"azureActiveDirectoryId\": \"ACTIVATED\"\n    }\n  ],\n  \"certificates\": [\n    {\n      \"commonName\": \"jamf.com\",\n      \"identity\": true,\n      \"expirationDate\": \"2030-10-31T18:04:13Z\",\n      \"username\": \"test\",\n      \"lifecycleStatus\": \"ACTIVE\",\n      \"certificateStatus\": \"ISSUED\",\n      \"subjectName\": \"CN=jamf.com\",\n      \"serialNumber\": \"40f3d9fb\",\n      \"sha1Fingerprint\": \"ed361458724d06082b2314acdb82e1f586f085f5\",\n      \"issuedDate\": \"2022-05-23T14:54:10Z\"\n    },\n    {\n      \"commonName\": \"jamf.com\",\n      \"identity\": true,\n      \"expirationDate\": \"2030-10-31T18:04:13Z\",\n      \"username\": \"test\",\n      \"lifecycleStatus\": \"ACTIVE\",\n      \"certificateStatus\": \"ISSUED\",\n      \"subjectName\": \"CN=jamf.com\",\n      \"serialNumber\": \"40f3d9fb\",\n      \"sha1Fingerprint\": \"ed361458724d06082b2314acdb82e1f586f085f5\",\n      \"issuedDate\": \"2022-05-23T14:54:10Z\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"Attachment.pdf\",\n      \"fileType\": \"application/pdf\",\n      \"sizeBytes\": 1024\n    },\n    {\n      \"id\": \"1\",\n      \"name\": \"Attachment.pdf\",\n      \"fileType\": \"application/pdf\",\n      \"sizeBytes\": 1024\n    }\n  ],\n  \"plugins\": [\n    {\n      \"name\": \"plugin name\",\n      \"version\": \"1.02\",\n      \"path\": \"/Applications/\"\n    },\n    {\n      \"name\": \"plugin name\",\n      \"version\": \"1.02\",\n      \"path\": \"/Applications/\"\n    }\n  ],\n  \"packageReceipts\": {\n    \"installedByJamfPro\": [\n      \"com.jamf.protect.JamfProtect\",\n      \"com.jamf.protect.JamfProtect\"\n    ],\n    \"installedByInstallerSwu\": [\n      \"com.apple.pkg.Core\",\n      \"com.apple.pkg.Core\"\n    ],\n    \"cached\": [\n      \"com.jamf.protect.JamfProtect\",\n      \"com.jamf.protect.JamfProtect\"\n    ]\n  },\n  \"fonts\": [\n    {\n      \"name\": \"font name\",\n      \"version\": \"1.02\",\n      \"path\": \"/Applications/\"\n    },\n    {\n      \"name\": \"font name\",\n      \"version\": \"1.02\",\n      \"path\": \"/Applications/\"\n    }\n  ],\n  \"security\": {\n    \"sipStatus\": \"ENABLED\",\n    \"gatekeeperStatus\": \"APP_STORE_AND_IDENTIFIED_DEVELOPERS\",\n    \"xprotectVersion\": \"1.2.3\",\n    \"autoLoginDisabled\": false,\n    \"remoteDesktopEnabled\": true,\n    \"activationLockEnabled\": true,\n    \"recoveryLockEnabled\": true,\n    \"firewallEnabled\": true,\n    \"secureBootLevel\": \"FULL_SECURITY\",\n    \"externalBootLevel\": \"ALLOW_BOOTING_FROM_EXTERNAL_MEDIA\",\n    \"bootstrapTokenAllowed\": true\n  },\n  \"operatingSystem\": {\n    \"name\": \"Mac OS X\",\n    \"version\": \"10.9.5\",\n    \"build\": \"13A603\",\n    \"activeDirectoryStatus\": \"Not Bound\",\n    \"fileVault2Status\": \"ALL_ENCRYPTED\",\n    \"softwareUpdateDeviceId\": \"J132AP\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"licensedSoftware\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"Microsoft Word\"\n    },\n    {\n      \"id\": \"1\",\n      \"name\": \"Microsoft Word\"\n    }\n  ],\n  \"ibeacons\": [\n    {\n      \"name\": \"room A\"\n    },\n    {\n      \"name\": \"room A\"\n    }\n  ],\n  \"softwareUpdates\": [\n    {\n      \"name\": \"BEdit\",\n      \"version\": \"1.15.2\",\n      \"packageName\": \"com.apple.pkg.AdditionalEssentials\"\n    },\n    {\n      \"name\": \"BEdit\",\n      \"version\": \"1.15.2\",\n      \"packageName\": \"com.apple.pkg.AdditionalEssentials\"\n    }\n  ],\n  \"extensionAttributes\": [\n    {\n      \"definitionId\": \"23\",\n      \"name\": \"Some Attribute\",\n      \"description\": \"Some Attribute defines how much Foo impacts Bar.\",\n      \"enabled\": true,\n      \"multiValue\": true,\n      \"values\": [\n        \"foo\",\n        \"bar\"\n      ],\n      \"dataType\": \"STRING\",\n      \"options\": [\n        \"foo\",\n        \"bar\"\n      ],\n      \"inputType\": \"TEXT\"\n    },\n    {\n      \"definitionId\": \"23\",\n      \"name\": \"Some Attribute\",\n      \"description\": \"Some Attribute defines how much Foo impacts Bar.\",\n      \"enabled\": true,\n      \"multiValue\": true,\n      \"values\": [\n        \"foo\",\n        \"bar\"\n      ],\n      \"dataType\": \"STRING\",\n      \"options\": [\n        \"foo\",\n        \"bar\"\n      ],\n      \"inputType\": \"TEXT\"\n    }\n  ],\n  \"contentCaching\": {\n    \"computerContentCachingInformationId\": \"1\",\n    \"parents\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"alerts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"activated\": false,\n    \"active\": false,\n    \"actualCacheBytesUsed\": 0,\n    \"cacheDetails\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"cacheBytesFree\": 23353884672,\n    \"cacheBytesLimit\": 0,\n    \"cacheStatus\": \"OK\",\n    \"cacheBytesUsed\": 0,\n    \"dataMigrationCompleted\": false,\n    \"dataMigrationProgressPercentage\": 0,\n    \"dataMigrationError\": {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domain\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"maxCachePressureLast1HourPercentage\": 0,\n    \"personalCacheBytesFree\": 23353884672,\n    \"personalCacheBytesLimit\": 0,\n    \"personalCacheBytesUsed\": 0,\n    \"port\": 0,\n    \"publicAddress\": \"SomeAddress\",\n    \"registrationError\": \"NOT_ACTIVATED\",\n    \"registrationResponseCode\": 403,\n    \"registrationStarted\": \"2018-10-31T18:04:13Z\",\n    \"registrationStatus\": \"CONTENT_CACHING_FAILED\",\n    \"restrictedMedia\": false,\n    \"serverGuid\": \"CD1E1291-4AF9-4468-B5D5-0F780C13DB2F\",\n    \"startupStatus\": \"FAILED\",\n    \"tetheratorStatus\": \"CONTENT_CACHING_DISABLED\",\n    \"totalBytesAreSince\": \"2018-10-31T18:04:13Z\",\n    \"totalBytesDropped\": 0,\n    \"totalBytesImported\": 0,\n    \"totalBytesReturnedToChildren\": 0,\n    \"totalBytesReturnedToClients\": 0,\n    \"totalBytesReturnedToPeers\": 0,\n    \"totalBytesStoredFromOrigin\": 0,\n    \"totalBytesStoredFromParents\": 0,\n    \"totalBytesStoredFromPeers\": 0\n  },\n  \"groupMemberships\": [\n    {\n      \"groupId\": \"1\",\n      \"groupName\": \"groupOne\",\n      \"smartGroup\": true\n    },\n    {\n      \"groupId\": \"1\",\n      \"groupName\": \"groupOne\",\n      \"smartGroup\": true\n    }\n  ]\n}"
								},
								{
									"name": "Specified computer object does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/computers-inventory-detail/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computers-inventory-detail",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of computer record"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update specific fields on a computer",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"udid\": \"45436edf-864e-4364-982a-330b01d39e65\",\n  \"general\": {\n    \"name\": \"Boalime\",\n    \"lastIpAddress\": \"247.185.82.186\",\n    \"barcode1\": \"5 12345 678900\",\n    \"barcode2\": \"5 12345 678900\",\n    \"assetTag\": \"304822\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"purchasing\": {\n    \"leased\": true,\n    \"purchased\": true,\n    \"poNumber\": \"53-1\",\n    \"poDate\": \"2019-01-01\",\n    \"vendor\": \"Example Vendor\",\n    \"warrantyDate\": \"2019-01-01\",\n    \"appleCareId\": \"abcd\",\n    \"leaseDate\": \"2019-01-01\",\n    \"purchasePrice\": \"$500\",\n    \"lifeExpectancy\": 5,\n    \"purchasingAccount\": \"admin\",\n    \"purchasingContact\": \"true\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"userAndLocation\": {\n    \"username\": \"Madison Anderson\",\n    \"realname\": \"13-inch MacBook\",\n    \"email\": \"email@com.pl\",\n    \"position\": \"IT Team Lead\",\n    \"phone\": \"123-456-789\",\n    \"departmentId\": \"1\",\n    \"buildingId\": \"1\",\n    \"room\": \"5\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"hardware\": {\n    \"networkAdapterType\": \"Foo\",\n    \"macAddress\": \"6A:2C:4B:B7:65:B5\",\n    \"altNetworkAdapterType\": \"Bar\",\n    \"altMacAddress\": \"82:45:58:44:dc:01\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"operatingSystem\": {\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"extensionAttributes\": [\n    {\n      \"definitionId\": \"23\",\n      \"values\": [\n        \"foo\",\n        \"bar\"\n      ]\n    },\n    {\n      \"definitionId\": \"23\",\n      \"values\": [\n        \"foo\",\n        \"bar\"\n      ]\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/computers-inventory-detail/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"computers-inventory-detail",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "in aute",
											"description": "(Required) instance id of computer record"
										}
									]
								},
								"description": "Update specific fields on a computer, then return the updated computer object."
							},
							"response": [
								{
									"name": "Details of computer were found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"udid\": \"45436edf-864e-4364-982a-330b01d39e65\",\n  \"general\": {\n    \"name\": \"Boalime\",\n    \"lastIpAddress\": \"247.185.82.186\",\n    \"barcode1\": \"5 12345 678900\",\n    \"barcode2\": \"5 12345 678900\",\n    \"assetTag\": \"304822\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"purchasing\": {\n    \"leased\": true,\n    \"purchased\": true,\n    \"poNumber\": \"53-1\",\n    \"poDate\": \"2019-01-01\",\n    \"vendor\": \"Example Vendor\",\n    \"warrantyDate\": \"2019-01-01\",\n    \"appleCareId\": \"abcd\",\n    \"leaseDate\": \"2019-01-01\",\n    \"purchasePrice\": \"$500\",\n    \"lifeExpectancy\": 5,\n    \"purchasingAccount\": \"admin\",\n    \"purchasingContact\": \"true\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"userAndLocation\": {\n    \"username\": \"Madison Anderson\",\n    \"realname\": \"13-inch MacBook\",\n    \"email\": \"email@com.pl\",\n    \"position\": \"IT Team Lead\",\n    \"phone\": \"123-456-789\",\n    \"departmentId\": \"1\",\n    \"buildingId\": \"1\",\n    \"room\": \"5\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"hardware\": {\n    \"networkAdapterType\": \"Foo\",\n    \"macAddress\": \"6A:2C:4B:B7:65:B5\",\n    \"altNetworkAdapterType\": \"Bar\",\n    \"altMacAddress\": \"82:45:58:44:dc:01\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"operatingSystem\": {\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"extensionAttributes\": [\n    {\n      \"definitionId\": \"23\",\n      \"values\": [\n        \"foo\",\n        \"bar\"\n      ]\n    },\n    {\n      \"definitionId\": \"23\",\n      \"values\": [\n        \"foo\",\n        \"bar\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/computers-inventory-detail/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computers-inventory-detail",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of computer record"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"udid\": \"123\",\n  \"general\": {\n    \"name\": \"Boalime\",\n    \"lastIpAddress\": \"247.185.82.186\",\n    \"lastReportedIp\": \"247.185.82.186\",\n    \"jamfBinaryVersion\": \"9.27\",\n    \"platform\": \"Mac\",\n    \"barcode1\": \"5 12345 678900\",\n    \"barcode2\": \"5 12345 678900\",\n    \"assetTag\": \"304822\",\n    \"remoteManagement\": {\n      \"managed\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"managementUsername\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"supervised\": true,\n    \"mdmCapable\": {\n      \"capable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"capableUsers\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"reportDate\": \"2018-10-31T18:04:13Z\",\n    \"lastContactTime\": \"2018-10-31T18:04:13Z\",\n    \"lastCloudBackupDate\": \"2018-10-31T18:04:13Z\",\n    \"lastEnrolledDate\": \"2018-10-31T18:04:13Z\",\n    \"mdmProfileExpiration\": \"2018-10-31T18:04:13Z\",\n    \"initialEntryDate\": \"2018-10-31\",\n    \"distributionPoint\": \"distribution point name\",\n    \"enrollmentMethod\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"site\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"itunesStoreAccountActive\": true,\n    \"enrolledViaAutomatedDeviceEnrollment\": true,\n    \"userApprovedMdm\": true,\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"diskEncryption\": {\n    \"bootPartitionEncryptionDetails\": {\n      \"partitionName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partitionFileVault2State\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"partitionFileVault2Percent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"individualRecoveryKeyValidityStatus\": \"INVALID\",\n    \"institutionalRecoveryKeyPresent\": true,\n    \"diskEncryptionConfigurationName\": \"Test configuration\",\n    \"fileVault2EnabledUserNames\": [\n      \"admin\"\n    ],\n    \"fileVault2EligibilityMessage\": \"Not a boot partition\"\n  },\n  \"purchasing\": {\n    \"leased\": true,\n    \"purchased\": true,\n    \"poNumber\": \"53-1\",\n    \"poDate\": \"2019-01-01\",\n    \"vendor\": \"Example Vendor\",\n    \"warrantyDate\": \"2019-01-01\",\n    \"appleCareId\": \"abcd\",\n    \"leaseDate\": \"2019-01-01\",\n    \"purchasePrice\": \"$500\",\n    \"lifeExpectancy\": 5,\n    \"purchasingAccount\": \"admin\",\n    \"purchasingContact\": \"true\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"applications\": [\n    {\n      \"name\": \"Microsoft Word\",\n      \"path\": \"/usr/local/app\",\n      \"version\": \"1.0.0\",\n      \"macAppStore\": true,\n      \"sizeMegabytes\": 25,\n      \"bundleId\": \"1\",\n      \"updateAvailable\": false,\n      \"externalVersionId\": \"1\"\n    },\n    {\n      \"name\": \"Microsoft Word\",\n      \"path\": \"/usr/local/app\",\n      \"version\": \"1.0.0\",\n      \"macAppStore\": true,\n      \"sizeMegabytes\": 25,\n      \"bundleId\": \"1\",\n      \"updateAvailable\": false,\n      \"externalVersionId\": \"1\"\n    }\n  ],\n  \"storage\": {\n    \"bootDriveAvailableSpaceMegabytes\": 3072,\n    \"disks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"userAndLocation\": {\n    \"username\": \"Madison Anderson\",\n    \"realname\": \"13-inch MacBook\",\n    \"email\": \"email@com.pl\",\n    \"position\": \"IT Team Lead\",\n    \"phone\": \"123-456-789\",\n    \"departmentId\": \"1\",\n    \"buildingId\": \"1\",\n    \"room\": \"5\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"configurationProfiles\": [\n    {\n      \"id\": \"1\",\n      \"username\": \"username\",\n      \"lastInstalled\": \"2018-10-31T18:04:13Z\",\n      \"removable\": true,\n      \"displayName\": \"Displayed profile\",\n      \"profileIdentifier\": \"0ae590fe-9b30-11ea-bb37-0242ac130002\"\n    },\n    {\n      \"id\": \"1\",\n      \"username\": \"username\",\n      \"lastInstalled\": \"2018-10-31T18:04:13Z\",\n      \"removable\": true,\n      \"displayName\": \"Displayed profile\",\n      \"profileIdentifier\": \"0ae590fe-9b30-11ea-bb37-0242ac130002\"\n    }\n  ],\n  \"printers\": [\n    {\n      \"name\": \"My Printer\",\n      \"type\": \"XYZ 1122\",\n      \"uri\": \"ipp://10.0.0.5\",\n      \"location\": \"7th floor\"\n    },\n    {\n      \"name\": \"My Printer\",\n      \"type\": \"XYZ 1122\",\n      \"uri\": \"ipp://10.0.0.5\",\n      \"location\": \"7th floor\"\n    }\n  ],\n  \"services\": [\n    {\n      \"name\": \"SomeService\"\n    },\n    {\n      \"name\": \"SomeService\"\n    }\n  ],\n  \"hardware\": {\n    \"make\": \"Apple\",\n    \"model\": \"13-inch MacBook Pro (Mid 2012)\",\n    \"modelIdentifier\": \"MacBookPro9,2\",\n    \"serialNumber\": \"C02ZC2QYLVDL\",\n    \"processorSpeedMhz\": 2100,\n    \"processorCount\": 2,\n    \"coreCount\": 2,\n    \"processorType\": \"Intel Core i5\",\n    \"processorArchitecture\": \"i386\",\n    \"busSpeedMhz\": 2133,\n    \"cacheSizeKilobytes\": 3072,\n    \"networkAdapterType\": \"Foo\",\n    \"macAddress\": \"6A:2C:4B:B7:65:B5\",\n    \"altNetworkAdapterType\": \"Bar\",\n    \"altMacAddress\": \"82:45:58:44:dc:01\",\n    \"totalRamMegabytes\": 4096,\n    \"openRamSlots\": 0,\n    \"batteryCapacityPercent\": 85,\n    \"smcVersion\": \"2.2f38\",\n    \"nicSpeed\": \"N/A\",\n    \"opticalDrive\": \"MATSHITA DVD-R UJ-8A8\",\n    \"bootRom\": \"MBP91.00D3.B08\",\n    \"bleCapable\": false,\n    \"supportsIosAppInstalls\": false,\n    \"appleSilicon\": false,\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"localUserAccounts\": [\n    {\n      \"uid\": \"501\",\n      \"username\": \"jamf\",\n      \"fullName\": \"John Jamf\",\n      \"admin\": true,\n      \"homeDirectory\": \"/Users/jamf\",\n      \"homeDirectorySizeMb\": 131072,\n      \"fileVault2Enabled\": true,\n      \"userAccountType\": \"LOCAL\",\n      \"passwordMinLength\": 4,\n      \"passwordMaxAge\": 5,\n      \"passwordMinComplexCharacters\": 5,\n      \"passwordHistoryDepth\": 5,\n      \"passwordRequireAlphanumeric\": true,\n      \"computerAzureActiveDirectoryId\": \"1\",\n      \"userAzureActiveDirectoryId\": \"1\",\n      \"azureActiveDirectoryId\": \"ACTIVATED\"\n    },\n    {\n      \"uid\": \"501\",\n      \"username\": \"jamf\",\n      \"fullName\": \"John Jamf\",\n      \"admin\": true,\n      \"homeDirectory\": \"/Users/jamf\",\n      \"homeDirectorySizeMb\": 131072,\n      \"fileVault2Enabled\": true,\n      \"userAccountType\": \"LOCAL\",\n      \"passwordMinLength\": 4,\n      \"passwordMaxAge\": 5,\n      \"passwordMinComplexCharacters\": 5,\n      \"passwordHistoryDepth\": 5,\n      \"passwordRequireAlphanumeric\": true,\n      \"computerAzureActiveDirectoryId\": \"1\",\n      \"userAzureActiveDirectoryId\": \"1\",\n      \"azureActiveDirectoryId\": \"ACTIVATED\"\n    }\n  ],\n  \"certificates\": [\n    {\n      \"commonName\": \"jamf.com\",\n      \"identity\": true,\n      \"expirationDate\": \"2030-10-31T18:04:13Z\",\n      \"username\": \"test\",\n      \"lifecycleStatus\": \"ACTIVE\",\n      \"certificateStatus\": \"ISSUED\",\n      \"subjectName\": \"CN=jamf.com\",\n      \"serialNumber\": \"40f3d9fb\",\n      \"sha1Fingerprint\": \"ed361458724d06082b2314acdb82e1f586f085f5\",\n      \"issuedDate\": \"2022-05-23T14:54:10Z\"\n    },\n    {\n      \"commonName\": \"jamf.com\",\n      \"identity\": true,\n      \"expirationDate\": \"2030-10-31T18:04:13Z\",\n      \"username\": \"test\",\n      \"lifecycleStatus\": \"ACTIVE\",\n      \"certificateStatus\": \"ISSUED\",\n      \"subjectName\": \"CN=jamf.com\",\n      \"serialNumber\": \"40f3d9fb\",\n      \"sha1Fingerprint\": \"ed361458724d06082b2314acdb82e1f586f085f5\",\n      \"issuedDate\": \"2022-05-23T14:54:10Z\"\n    }\n  ],\n  \"attachments\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"Attachment.pdf\",\n      \"fileType\": \"application/pdf\",\n      \"sizeBytes\": 1024\n    },\n    {\n      \"id\": \"1\",\n      \"name\": \"Attachment.pdf\",\n      \"fileType\": \"application/pdf\",\n      \"sizeBytes\": 1024\n    }\n  ],\n  \"plugins\": [\n    {\n      \"name\": \"plugin name\",\n      \"version\": \"1.02\",\n      \"path\": \"/Applications/\"\n    },\n    {\n      \"name\": \"plugin name\",\n      \"version\": \"1.02\",\n      \"path\": \"/Applications/\"\n    }\n  ],\n  \"packageReceipts\": {\n    \"installedByJamfPro\": [\n      \"com.jamf.protect.JamfProtect\",\n      \"com.jamf.protect.JamfProtect\"\n    ],\n    \"installedByInstallerSwu\": [\n      \"com.apple.pkg.Core\",\n      \"com.apple.pkg.Core\"\n    ],\n    \"cached\": [\n      \"com.jamf.protect.JamfProtect\",\n      \"com.jamf.protect.JamfProtect\"\n    ]\n  },\n  \"fonts\": [\n    {\n      \"name\": \"font name\",\n      \"version\": \"1.02\",\n      \"path\": \"/Applications/\"\n    },\n    {\n      \"name\": \"font name\",\n      \"version\": \"1.02\",\n      \"path\": \"/Applications/\"\n    }\n  ],\n  \"security\": {\n    \"sipStatus\": \"ENABLED\",\n    \"gatekeeperStatus\": \"APP_STORE_AND_IDENTIFIED_DEVELOPERS\",\n    \"xprotectVersion\": \"1.2.3\",\n    \"autoLoginDisabled\": false,\n    \"remoteDesktopEnabled\": true,\n    \"activationLockEnabled\": true,\n    \"recoveryLockEnabled\": true,\n    \"firewallEnabled\": true,\n    \"secureBootLevel\": \"FULL_SECURITY\",\n    \"externalBootLevel\": \"ALLOW_BOOTING_FROM_EXTERNAL_MEDIA\",\n    \"bootstrapTokenAllowed\": true\n  },\n  \"operatingSystem\": {\n    \"name\": \"Mac OS X\",\n    \"version\": \"10.9.5\",\n    \"build\": \"13A603\",\n    \"activeDirectoryStatus\": \"Not Bound\",\n    \"fileVault2Status\": \"ALL_ENCRYPTED\",\n    \"softwareUpdateDeviceId\": \"J132AP\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"licensedSoftware\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"Microsoft Word\"\n    },\n    {\n      \"id\": \"1\",\n      \"name\": \"Microsoft Word\"\n    }\n  ],\n  \"ibeacons\": [\n    {\n      \"name\": \"room A\"\n    },\n    {\n      \"name\": \"room A\"\n    }\n  ],\n  \"softwareUpdates\": [\n    {\n      \"name\": \"BEdit\",\n      \"version\": \"1.15.2\",\n      \"packageName\": \"com.apple.pkg.AdditionalEssentials\"\n    },\n    {\n      \"name\": \"BEdit\",\n      \"version\": \"1.15.2\",\n      \"packageName\": \"com.apple.pkg.AdditionalEssentials\"\n    }\n  ],\n  \"extensionAttributes\": [\n    {\n      \"definitionId\": \"23\",\n      \"name\": \"Some Attribute\",\n      \"description\": \"Some Attribute defines how much Foo impacts Bar.\",\n      \"enabled\": true,\n      \"multiValue\": true,\n      \"values\": [\n        \"foo\",\n        \"bar\"\n      ],\n      \"dataType\": \"STRING\",\n      \"options\": [\n        \"foo\",\n        \"bar\"\n      ],\n      \"inputType\": \"TEXT\"\n    },\n    {\n      \"definitionId\": \"23\",\n      \"name\": \"Some Attribute\",\n      \"description\": \"Some Attribute defines how much Foo impacts Bar.\",\n      \"enabled\": true,\n      \"multiValue\": true,\n      \"values\": [\n        \"foo\",\n        \"bar\"\n      ],\n      \"dataType\": \"STRING\",\n      \"options\": [\n        \"foo\",\n        \"bar\"\n      ],\n      \"inputType\": \"TEXT\"\n    }\n  ],\n  \"contentCaching\": {\n    \"computerContentCachingInformationId\": \"1\",\n    \"parents\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"alerts\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"activated\": false,\n    \"active\": false,\n    \"actualCacheBytesUsed\": 0,\n    \"cacheDetails\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"cacheBytesFree\": 23353884672,\n    \"cacheBytesLimit\": 0,\n    \"cacheStatus\": \"OK\",\n    \"cacheBytesUsed\": 0,\n    \"dataMigrationCompleted\": false,\n    \"dataMigrationProgressPercentage\": 0,\n    \"dataMigrationError\": {\n      \"code\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"domain\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userInfo\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"maxCachePressureLast1HourPercentage\": 0,\n    \"personalCacheBytesFree\": 23353884672,\n    \"personalCacheBytesLimit\": 0,\n    \"personalCacheBytesUsed\": 0,\n    \"port\": 0,\n    \"publicAddress\": \"SomeAddress\",\n    \"registrationError\": \"NOT_ACTIVATED\",\n    \"registrationResponseCode\": 403,\n    \"registrationStarted\": \"2018-10-31T18:04:13Z\",\n    \"registrationStatus\": \"CONTENT_CACHING_FAILED\",\n    \"restrictedMedia\": false,\n    \"serverGuid\": \"CD1E1291-4AF9-4468-B5D5-0F780C13DB2F\",\n    \"startupStatus\": \"FAILED\",\n    \"tetheratorStatus\": \"CONTENT_CACHING_DISABLED\",\n    \"totalBytesAreSince\": \"2018-10-31T18:04:13Z\",\n    \"totalBytesDropped\": 0,\n    \"totalBytesImported\": 0,\n    \"totalBytesReturnedToChildren\": 0,\n    \"totalBytesReturnedToClients\": 0,\n    \"totalBytesReturnedToPeers\": 0,\n    \"totalBytesStoredFromOrigin\": 0,\n    \"totalBytesStoredFromParents\": 0,\n    \"totalBytesStoredFromPeers\": 0\n  },\n  \"groupMemberships\": [\n    {\n      \"groupId\": \"1\",\n      \"groupName\": \"groupOne\",\n      \"smartGroup\": true\n    },\n    {\n      \"groupId\": \"1\",\n      \"groupName\": \"groupOne\",\n      \"smartGroup\": true\n    }\n  ]\n}"
								},
								{
									"name": "Specified computer object does not exist.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"udid\": \"45436edf-864e-4364-982a-330b01d39e65\",\n  \"general\": {\n    \"name\": \"Boalime\",\n    \"lastIpAddress\": \"247.185.82.186\",\n    \"barcode1\": \"5 12345 678900\",\n    \"barcode2\": \"5 12345 678900\",\n    \"assetTag\": \"304822\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"purchasing\": {\n    \"leased\": true,\n    \"purchased\": true,\n    \"poNumber\": \"53-1\",\n    \"poDate\": \"2019-01-01\",\n    \"vendor\": \"Example Vendor\",\n    \"warrantyDate\": \"2019-01-01\",\n    \"appleCareId\": \"abcd\",\n    \"leaseDate\": \"2019-01-01\",\n    \"purchasePrice\": \"$500\",\n    \"lifeExpectancy\": 5,\n    \"purchasingAccount\": \"admin\",\n    \"purchasingContact\": \"true\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"userAndLocation\": {\n    \"username\": \"Madison Anderson\",\n    \"realname\": \"13-inch MacBook\",\n    \"email\": \"email@com.pl\",\n    \"position\": \"IT Team Lead\",\n    \"phone\": \"123-456-789\",\n    \"departmentId\": \"1\",\n    \"buildingId\": \"1\",\n    \"room\": \"5\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"hardware\": {\n    \"networkAdapterType\": \"Foo\",\n    \"macAddress\": \"6A:2C:4B:B7:65:B5\",\n    \"altNetworkAdapterType\": \"Bar\",\n    \"altMacAddress\": \"82:45:58:44:dc:01\",\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"operatingSystem\": {\n    \"extensionAttributes\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"extensionAttributes\": [\n    {\n      \"definitionId\": \"23\",\n      \"values\": [\n        \"foo\",\n        \"bar\"\n      ]\n    },\n    {\n      \"definitionId\": \"23\",\n      \"values\": [\n        \"foo\",\n        \"bar\"\n      ]\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/computers-inventory-detail/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"computers-inventory-detail",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of computer record"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "conditional-access/device-compliance-information",
					"item": [
						{
							"name": "Get compliance information for a single computer device",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/conditional-access/device-compliance-information/computer/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"conditional-access",
										"device-compliance-information",
										"computer",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId",
											"value": "in aute",
											"description": "(Required) ID of the device the query pertains"
										}
									]
								},
								"description": "Return basic compliance information for the given computer device"
							},
							"response": [
								{
									"name": "Array of device compliance information records",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/conditional-access/device-compliance-information/computer/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"conditional-access",
												"device-compliance-information",
												"computer",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "in aute",
													"description": "(Required) ID of the device the query pertains"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"deviceId\": \"1\",\n    \"applicable\": true,\n    \"complianceState\": \"COMPLIANT\",\n    \"complianceVendor\": \"Vendor A\"\n  },\n  {\n    \"deviceId\": \"1\",\n    \"applicable\": false,\n    \"complianceState\": \"NON_COMPLIANT\",\n    \"complianceVendor\": \"Vendor B\"\n  }\n]"
								}
							]
						},
						{
							"name": "Get compliance information for a single mobile device",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/conditional-access/device-compliance-information/mobile/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"conditional-access",
										"device-compliance-information",
										"mobile",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId",
											"value": "in aute",
											"description": "(Required) ID of the device the query pertains"
										}
									]
								},
								"description": "Return basic compliance information for the given mobile device"
							},
							"response": [
								{
									"name": "Array of device compliance information records",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/conditional-access/device-compliance-information/mobile/:deviceId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"conditional-access",
												"device-compliance-information",
												"mobile",
												":deviceId"
											],
											"variable": [
												{
													"key": "deviceId",
													"value": "in aute",
													"description": "(Required) ID of the device the query pertains"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"deviceId\": \"1\",\n    \"applicable\": true,\n    \"complianceState\": \"COMPLIANT\",\n    \"complianceVendor\": \"Vendor A\"\n  },\n  {\n    \"deviceId\": \"1\",\n    \"applicable\": false,\n    \"complianceState\": \"NON_COMPLIANT\",\n    \"complianceVendor\": \"Vendor B\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "csa/token",
					"item": [
						{
							"name": "Get details regarding the CSA token exchange\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/csa/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"csa",
										"token"
									]
								},
								"description": "Get details regarding the CSA token exchange\n"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/csa/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"csa",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"refreshExpiration\": 1584544108,\n  \"scopes\": [\n    \"read mobile_device\",\n    \"write mobile_device\"\n  ]\n}"
								},
								{
									"name": "CSA token exchange has not been initialized",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/csa/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"csa",
												"token"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Re-initialize the CSA token exchange with new credentials\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailAddress\": \"emailAddress@mail.com\",\n  \"password\": \"12345\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/csa/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"csa",
										"token"
									]
								},
								"description": "Re-initialize the CSA token exchange with new credentials\n"
							},
							"response": [
								{
									"name": "CSA Token Exchange succesfully updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailAddress\": \"emailAddress@mail.com\",\n  \"password\": \"12345\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/csa/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"csa",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"refreshExpiration\": 1584544108,\n  \"scopes\": [\n    \"read mobile_device\",\n    \"write mobile_device\"\n  ]\n}"
								},
								{
									"name": "Jamf Nation credentials provided are invalid",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailAddress\": \"emailAddress@mail.com\",\n  \"password\": \"12345\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/csa/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"csa",
												"token"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								{
									"name": "CSA token exchange has not been initialized",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailAddress\": \"emailAddress@mail.com\",\n  \"password\": \"12345\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/csa/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"csa",
												"token"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Initialize the CSA token exchange\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"emailAddress\": \"emailAddress@mail.com\",\n  \"password\": \"12345\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/csa/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"csa",
										"token"
									]
								},
								"description": "Initializes the CSA token exchange - This will allow Jamf Pro to authenticate with cloud-hosted services\n"
							},
							"response": [
								{
									"name": "CSA Token Exchange succesfully initialized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailAddress\": \"emailAddress@mail.com\",\n  \"password\": \"12345\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/csa/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"csa",
												"token"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"refreshExpiration\": 1584544108,\n  \"scopes\": [\n    \"read mobile_device\",\n    \"write mobile_device\"\n  ]\n}"
								},
								{
									"name": "Jamf Nation credentials provided are invalid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailAddress\": \"emailAddress@mail.com\",\n  \"password\": \"12345\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/csa/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"csa",
												"token"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								{
									"name": "CSA token exchange has already been initialized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"emailAddress\": \"emailAddress@mail.com\",\n  \"password\": \"12345\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/csa/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"csa",
												"token"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete the CSA token exchange - This will disable Jamf Pro's ability to authenticate with cloud-hosted services\n",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/csa/token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"csa",
										"token"
									]
								},
								"description": "Delete the CSA token exchange - This will disable Jamf Pro's ability to authenticate with cloud-hosted services\n"
							},
							"response": [
								{
									"name": "CSA Token Exchange successfully deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/csa/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"csa",
												"token"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "CSA Token Exchange has not been initialized",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/csa/token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"csa",
												"token"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "departments",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "history",
									"item": [
										{
											"name": "Get specified Department history object\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/departments/:id/history?page=0&page-size=100&sort=date:desc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"departments",
														":id",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc",
															"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
														},
														{
															"key": "filter",
															"value": "",
															"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of department history record"
														}
													]
												},
												"description": "Gets specified Department history object\n"
											},
											"response": [
												{
													"name": "Details of department history were found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/departments/:id/history?page=0&page-size=100&sort=date:desc&filter=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"departments",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																},
																{
																	"key": "filter",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of department history record"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
												},
												{
													"name": "Specified department object does not exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/departments/:id/history?page=0&page-size=100&sort=date:desc&filter=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"departments",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																},
																{
																	"key": "filter",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of department history record"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add specified Department history object notes\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/departments/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"departments",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of department history record"
														}
													]
												},
												"description": "Adds specified Department history object notes\n"
											},
											"response": [
												{
													"name": "Notes of department history were added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/departments/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"departments",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of department history record"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
												},
												{
													"name": "Specified department object does not exist.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/departments/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"departments",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of department history record"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Department history can not be saved",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/departments/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"departments",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of department history record"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get specified Department object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/departments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"departments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of department record"
												}
											]
										},
										"description": "Gets specified Department object\n"
									},
									"response": [
										{
											"name": "Details of department were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/departments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"departments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of department record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Department of Redundancy Department\",\n  \"id\": \"1\"\n}"
										},
										{
											"name": "Specified department object does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/departments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"departments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of department record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update specified department object\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Department of Redundancy Department\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/departments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"departments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of department record"
												}
											]
										},
										"description": "Update specified department object\n"
									},
									"response": [
										{
											"name": "Department update",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Department of Redundancy Department\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/departments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"departments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of department record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Department of Redundancy Department\",\n  \"id\": \"1\"\n}"
										}
									]
								},
								{
									"name": "Remove specified department record\n",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/departments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"departments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of department record"
												}
											]
										},
										"description": "Removes specified department record\n"
									},
									"response": [
										{
											"name": "Department record was deleted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/departments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"departments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of department record"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Search for Departments\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/departments?page=0&page-size=100&sort=id:asc&filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"departments"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										},
										{
											"key": "filter",
											"value": "",
											"description": "Query in the RSQL format, allowing to filter department collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. Example: name==\"*department*\""
										}
									]
								},
								"description": "Search for Departments\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/departments?page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"departments"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												},
												{
													"key": "filter",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"name\": \"Department of Redundancy Department\",\n      \"id\": \"1\"\n    },\n    {\n      \"name\": \"Department of Redundancy Department\",\n      \"id\": \"1\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create department record\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Department of Redundancy Department\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/departments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"departments"
									]
								},
								"description": "Create department record\n"
							},
							"response": [
								{
									"name": "Department record was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Department of Redundancy Department\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/departments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"departments"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								}
							]
						},
						{
							"name": "Deletes all departments by ids passed in body\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/departments/delete-multiple",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"departments",
										"delete-multiple"
									]
								},
								"description": "Deletes all departments by ids passed in body\n"
							},
							"response": [
								{
									"name": "All department ids passed in request sucessfully deleted.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/departments/delete-multiple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"departments",
												"delete-multiple"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Request processed.  Returns ids and error codes of any departments unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occured trying to delete the department.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/departments/delete-multiple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"departments",
												"delete-multiple"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "device-communication-settings",
					"item": [
						{
							"name": "history",
							"item": [
								{
									"name": "Get Device Communication settings history\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/device-communication-settings/history?page=0&page-size=100&sort=date:desc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-communication-settings",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "date:desc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											]
										},
										"description": "Gets Device Communication settings history\n"
									},
									"response": [
										{
											"name": "Details of Device Communication Settings history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/device-communication-settings/history?page=0&page-size=100&sort=date:desc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-communication-settings",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add Device Communication Settings history notes\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/device-communication-settings/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-communication-settings",
												"history"
											]
										},
										"description": "Adds Device Communication Settings history notes\n"
									},
									"response": [
										{
											"name": "Notes to Device Communication Settings history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/device-communication-settings/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-communication-settings",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
										},
										{
											"name": "Device Communication Settings history can not be saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/device-communication-settings/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-communication-settings",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieves all settings for device communication\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/device-communication-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"device-communication-settings"
									]
								},
								"description": "Retrieves all device communication settings, including automatic renewal of the MDM profile.\n"
							},
							"response": [
								{
									"name": "Successful response - Device Communication Settings retrieved",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/device-communication-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-communication-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"autoRenewMobileDeviceMdmProfileWhenCaRenewed\": true,\n  \"autoRenewMobileDeviceMdmProfileWhenDeviceIdentityCertExpiring\": true,\n  \"autoRenewComputerMdmProfileWhenCaRenewed\": true,\n  \"autoRenewComputerMdmProfileWhenDeviceIdentityCertExpiring\": true,\n  \"mdmProfileMobileDeviceExpirationLimitInDays\": 180,\n  \"mdmProfileComputerExpirationLimitInDays\": 180\n}"
								}
							]
						},
						{
							"name": "Update device communication settings\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"autoRenewMobileDeviceMdmProfileWhenCaRenewed\": true,\n  \"autoRenewMobileDeviceMdmProfileWhenDeviceIdentityCertExpiring\": true,\n  \"autoRenewComputerMdmProfileWhenCaRenewed\": true,\n  \"autoRenewComputerMdmProfileWhenDeviceIdentityCertExpiring\": true,\n  \"mdmProfileMobileDeviceExpirationLimitInDays\": 180,\n  \"mdmProfileComputerExpirationLimitInDays\": 180\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/device-communication-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"device-communication-settings"
									]
								},
								"description": "Update device communication settings\n"
							},
							"response": [
								{
									"name": "Successful response - Device communication Settings updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"autoRenewMobileDeviceMdmProfileWhenCaRenewed\": true,\n  \"autoRenewMobileDeviceMdmProfileWhenDeviceIdentityCertExpiring\": true,\n  \"autoRenewComputerMdmProfileWhenCaRenewed\": true,\n  \"autoRenewComputerMdmProfileWhenDeviceIdentityCertExpiring\": true,\n  \"mdmProfileMobileDeviceExpirationLimitInDays\": 180,\n  \"mdmProfileComputerExpirationLimitInDays\": 180\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/device-communication-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-communication-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"autoRenewMobileDeviceMdmProfileWhenCaRenewed\": true,\n  \"autoRenewMobileDeviceMdmProfileWhenDeviceIdentityCertExpiring\": true,\n  \"autoRenewComputerMdmProfileWhenCaRenewed\": true,\n  \"autoRenewComputerMdmProfileWhenDeviceIdentityCertExpiring\": true,\n  \"mdmProfileMobileDeviceExpirationLimitInDays\": 180,\n  \"mdmProfileComputerExpirationLimitInDays\": 180\n}"
								}
							]
						}
					]
				},
				{
					"name": "device-enrollments",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "history",
									"item": [
										{
											"name": "Get sorted and paged Device Enrollment history objects\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id/history?page=0&page-size=100&sort=date:desc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc",
															"description": "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc"
														},
														{
															"key": "filter",
															"value": "",
															"description": "Query in the RSQL format, allowing to filter history notes collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: search=username!=admin and details==*disabled* and date<2019-12-15"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												},
												"description": "Gets sorted and paged device enrollment history objects"
											},
											"response": [
												{
													"name": "Details of device enrollment history were found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/device-enrollments/:id/history?page=0&page-size=100&sort=date:desc&filter=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"device-enrollments",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																},
																{
																	"key": "filter",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Device Enrollment Instance identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add Device Enrollment history object notes\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												},
												"description": "Adds device enrollment history object notes"
											},
											"response": [
												{
													"name": "Notes of device enrollment history were added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/device-enrollments/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"device-enrollments",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Device Enrollment Instance identifier"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
												},
												{
													"name": "Device enrollment history can not be saved",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/device-enrollments/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"device-enrollments",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Device Enrollment Instance identifier"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "syncs",
									"item": [
										{
											"name": "Get all instance sync states for a single Device Enrollment Instance\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id/syncs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id",
														"syncs"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												},
												"description": "Get all instance sync states for a single instance"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/device-enrollments/:id/syncs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"device-enrollments",
																":id",
																"syncs"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Device Enrollment Instance identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"syncState\": \"CONNECTION_ERROR\",\n    \"instanceId\": \"1\",\n    \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n  },\n  {\n    \"syncState\": \"CONNECTION_ERROR\",\n    \"instanceId\": \"1\",\n    \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n  }\n]"
												}
											]
										},
										{
											"name": "Get the latest sync state for a single Device Enrollment Instance\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id/syncs/latest",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id",
														"syncs",
														"latest"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												},
												"description": "Get the latest sync state for a single instance"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/device-enrollments/:id/syncs/latest",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"device-enrollments",
																":id",
																"syncs",
																"latest"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Device Enrollment Instance identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"syncState\": \"CONNECTION_ERROR\",\n  \"instanceId\": \"1\",\n  \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve a Device Enrollment Instance with the supplied id\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/device-enrollments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-enrollments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Device Enrollment Instance identifier"
												}
											]
										},
										"description": "Retrieves a Device Enrollment Instance with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Example Device Enrollment Instance\",\n  \"id\": \"1\",\n  \"supervisionIdentityId\": \"1\",\n  \"siteId\": \"-1\",\n  \"serverName\": \"Acme ASM\",\n  \"serverUuid\": \"BASD08C11F3C455\",\n  \"adminId\": \"admin1234\",\n  \"orgName\": \"Acme Enterprises\",\n  \"orgEmail\": \"admin@test.com\",\n  \"orgPhone\": \"555-0123\",\n  \"orgAddress\": \"124 Conch Street, Bikini Bottom, Pacific Ocean\",\n  \"tokenExpirationDate\": \"2000-10-30\"\n}"
										},
										{
											"name": "Device Enrollment Instance with that id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update a Device Enrollment Instance with the supplied id\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Example Device Enrollment Instance\",\n  \"supervisionIdentityId\": \"1\",\n  \"siteId\": \"-1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/device-enrollments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-enrollments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Device Enrollment Instance identifier"
												}
											]
										},
										"description": "Updates a Device Enrollment Instance with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Example Device Enrollment Instance\",\n  \"supervisionIdentityId\": \"1\",\n  \"siteId\": \"-1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Example Device Enrollment Instance\",\n  \"id\": \"1\",\n  \"supervisionIdentityId\": \"1\",\n  \"siteId\": \"-1\",\n  \"serverName\": \"Acme ASM\",\n  \"serverUuid\": \"BASD08C11F3C455\",\n  \"adminId\": \"admin1234\",\n  \"orgName\": \"Acme Enterprises\",\n  \"orgEmail\": \"admin@test.com\",\n  \"orgPhone\": \"555-0123\",\n  \"orgAddress\": \"124 Conch Street, Bikini Bottom, Pacific Ocean\",\n  \"tokenExpirationDate\": \"2000-10-30\"\n}"
										},
										{
											"name": "Device Enrollment Instance with that id does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Example Device Enrollment Instance\",\n  \"supervisionIdentityId\": \"1\",\n  \"siteId\": \"-1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a Device Enrollment Instance with the supplied id\n",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/device-enrollments/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-enrollments",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Device Enrollment Instance identifier"
												}
											]
										},
										"description": "Deletes a Device Enrollment Instance with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Device Enrollment Instance with that id does not exist",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Retrieve a list of Devices assigned to the supplied id\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/device-enrollments/:id/devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-enrollments",
												":id",
												"devices"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Device Enrollment Instance identifier"
												}
											]
										},
										"description": "Retrieves a list of devices assigned to the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id/devices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id",
														"devices"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": \"1\",\n      \"deviceEnrollmentProgramInstanceId\": \"1\",\n      \"prestageId\": \"1\",\n      \"serialNumber\": \"R7QFDE2YCFN4\",\n      \"description\": \"MBP 15.4\",\n      \"model\": \"Macbook Pro 15 Retina\",\n      \"color\": \"BLACK\",\n      \"assetTag\": \"ACME-1234\",\n      \"profileStatus\": \"ASSIGNED\",\n      \"syncState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"profileAssignTime\": \"2000-10-30T18:00:00-00:00\",\n      \"profilePushTime\": \"2000-10-30T18:00:00-00:00\",\n      \"deviceAssignedDate\": \"2000-10-30T18:00:00-00:00\"\n    },\n    {\n      \"id\": \"1\",\n      \"deviceEnrollmentProgramInstanceId\": \"1\",\n      \"prestageId\": \"1\",\n      \"serialNumber\": \"R7QFDE2YCFN4\",\n      \"description\": \"MBP 15.4\",\n      \"model\": \"Macbook Pro 15 Retina\",\n      \"color\": \"BLACK\",\n      \"assetTag\": \"ACME-1234\",\n      \"profileStatus\": \"ASSIGNED\",\n      \"syncState\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"profileAssignTime\": \"2000-10-30T18:00:00-00:00\",\n      \"profilePushTime\": \"2000-10-30T18:00:00-00:00\",\n      \"deviceAssignedDate\": \"2000-10-30T18:00:00-00:00\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Disown devices from the given Device Enrollment Instance\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"devices\": [\n    \"1a2s3d4f5g\",\n    \"0o9i8u7y6t\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/device-enrollments/:id/disown",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-enrollments",
												":id",
												"disown"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Device Enrollment Instance identifier"
												}
											]
										},
										"description": "Disowns devices from the given device enrollment instance"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"devices\": [\n    \"1a2s3d4f5g\",\n    \"0o9i8u7y6t\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id/disown",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id",
														"disown"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"devices\": {\n    \"a2s3d4f5\": \"SUCCESS\",\n    \"0o9i8u7y6t\": \"FAILED\"\n  }\n}"
										},
										{
											"name": "Could not find device enrollment program instance for given id",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"devices\": [\n    \"1a2s3d4f5g\",\n    \"0o9i8u7y6t\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id/disown",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id",
														"disown"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Something went wrong.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"devices\": [\n    \"1a2s3d4f5g\",\n    \"0o9i8u7y6t\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id/disown",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id",
														"disown"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Update a Device Enrollment Instance with the supplied Token\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tokenFileName\": \"Acme MDM Token\",\n  \"encodedToken\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/device-enrollments/:id/upload-token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-enrollments",
												":id",
												"upload-token"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Device Enrollment Instance identifier"
												}
											]
										},
										"description": "Updates a device enrollment instance with the supplied token."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tokenFileName\": \"Acme MDM Token\",\n  \"encodedToken\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id/upload-token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id",
														"upload-token"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Example Device Enrollment Instance\",\n  \"id\": \"1\",\n  \"supervisionIdentityId\": \"1\",\n  \"siteId\": \"-1\",\n  \"serverName\": \"Acme ASM\",\n  \"serverUuid\": \"BASD08C11F3C455\",\n  \"adminId\": \"admin1234\",\n  \"orgName\": \"Acme Enterprises\",\n  \"orgEmail\": \"admin@test.com\",\n  \"orgPhone\": \"555-0123\",\n  \"orgAddress\": \"124 Conch Street, Bikini Bottom, Pacific Ocean\",\n  \"tokenExpirationDate\": \"2000-10-30\"\n}"
										},
										{
											"name": "Device Enrollment Instance with that id does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tokenFileName\": \"Acme MDM Token\",\n  \"encodedToken\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id/upload-token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id",
														"upload-token"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Something went wrong",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tokenFileName\": \"Acme MDM Token\",\n  \"encodedToken\": \"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/device-enrollments/:id/upload-token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"device-enrollments",
														":id",
														"upload-token"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Device Enrollment Instance identifier"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Read all sorted and paged Device Enrollment instances\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/device-enrollments?page=0&page-size=100&sort=id:asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"device-enrollments"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Search for sorted and paged device enrollment instances"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/device-enrollments?page=0&page-size=100&sort=id:asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-enrollments"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"name\": \"Example Device Enrollment Instance\",\n      \"id\": \"1\",\n      \"supervisionIdentityId\": \"1\",\n      \"siteId\": \"-1\",\n      \"serverName\": \"Acme ASM\",\n      \"serverUuid\": \"BASD08C11F3C455\",\n      \"adminId\": \"admin1234\",\n      \"orgName\": \"Acme Enterprises\",\n      \"orgEmail\": \"admin@test.com\",\n      \"orgPhone\": \"555-0123\",\n      \"orgAddress\": \"124 Conch Street, Bikini Bottom, Pacific Ocean\",\n      \"tokenExpirationDate\": \"2000-10-30\"\n    },\n    {\n      \"name\": \"Example Device Enrollment Instance\",\n      \"id\": \"1\",\n      \"supervisionIdentityId\": \"1\",\n      \"siteId\": \"-1\",\n      \"serverName\": \"Acme ASM\",\n      \"serverUuid\": \"BASD08C11F3C455\",\n      \"adminId\": \"admin1234\",\n      \"orgName\": \"Acme Enterprises\",\n      \"orgEmail\": \"admin@test.com\",\n      \"orgPhone\": \"555-0123\",\n      \"orgAddress\": \"124 Conch Street, Bikini Bottom, Pacific Ocean\",\n      \"tokenExpirationDate\": \"2000-10-30\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Retrieve the Jamf Pro Device Enrollment public key\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/x-pem-file"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/device-enrollments/public-key",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"device-enrollments",
										"public-key"
									]
								},
								"description": "Retrieve the Jamf Pro device enrollment public key"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/device-enrollments/public-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-enrollments",
												"public-key"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/x-pem-file"
										}
									],
									"cookie": [],
									"body": "in aute"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/device-enrollments/public-key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-enrollments",
												"public-key"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Get all instance sync states for all Device Enrollment Instances\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/device-enrollments/syncs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"device-enrollments",
										"syncs"
									]
								},
								"description": "Get all instance sync states for all instances"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/device-enrollments/syncs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-enrollments",
												"syncs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"syncState\": \"CONNECTION_ERROR\",\n    \"instanceId\": \"1\",\n    \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n  },\n  {\n    \"syncState\": \"CONNECTION_ERROR\",\n    \"instanceId\": \"1\",\n    \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n  }\n]"
								}
							]
						},
						{
							"name": "Create a Device Enrollment Instance with the supplied Token\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tokenFileName\": \"Acme MDM Token\",\n  \"encodedToken\": \"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/device-enrollments/upload-token",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"device-enrollments",
										"upload-token"
									]
								},
								"description": "Creates a device enrollment instance with the supplied token."
							},
							"response": [
								{
									"name": "Device Enrollment Instance was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tokenFileName\": \"Acme MDM Token\",\n  \"encodedToken\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/device-enrollments/upload-token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-enrollments",
												"upload-token"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								},
								{
									"name": "Something went wrong",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tokenFileName\": \"Acme MDM Token\",\n  \"encodedToken\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/device-enrollments/upload-token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"device-enrollments",
												"upload-token"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "ebooks",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get specified Ebook object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ebooks/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ebooks",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of ebook record"
												}
											]
										},
										"description": "Gets specified Ebook object\n"
									},
									"response": [
										{
											"name": "Details about ebook were found for given id",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/ebooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ebooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of ebook record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"name\": \"The Neverending API\",\n  \"kind\": \"IBOOKS\",\n  \"url\": \"https://jamf.com/ibooks/the_neverending_api.just_kidding\",\n  \"free\": true,\n  \"version\": \"10.9.0\",\n  \"author\": \"IT Bob\",\n  \"deployAsManaged\": false,\n  \"installAutomatically\": false,\n  \"categoryId\": \"-1\",\n  \"siteId\": \"-1\"\n}"
										},
										{
											"name": "Specified ebook object does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/ebooks/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ebooks",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of ebook record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get specified scope of Ebook object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ebooks/:id/scope",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ebooks",
												":id",
												"scope"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of ebook record"
												}
											]
										},
										"description": "Gets specified scope of Ebook object\n"
									},
									"response": [
										{
											"name": "Details of scope for ebook were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/ebooks/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ebooks",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of ebook record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"allComputers\": false,\n  \"allMobileDevices\": false,\n  \"allUsers\": false,\n  \"computerIds\": [\n    \"-1\",\n    \"-1\"\n  ],\n  \"computerGroupIds\": [\n    \"-1\",\n    \"-1\"\n  ],\n  \"mobileDeviceIds\": [\n    \"-1\",\n    \"-1\"\n  ],\n  \"mobileDeviceGroupIds\": [\n    \"-1\",\n    \"-1\"\n  ],\n  \"buildingIds\": [\n    \"-1\",\n    \"-1\"\n  ],\n  \"departmentIds\": [\n    \"-1\",\n    \"-1\"\n  ],\n  \"userIds\": [\n    \"-1\",\n    \"-1\"\n  ],\n  \"userGroupIds\": [\n    \"-1\",\n    \"-1\"\n  ],\n  \"classroomIds\": [\n    \"-1\",\n    \"-1\"\n  ],\n  \"limitations\": {\n    \"networkSegments\": [\n      \"1\",\n      \"1\"\n    ],\n    \"users\": [\n      {\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"name\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"userGroups\": [\n      \"1\",\n      \"1\"\n    ]\n  },\n  \"exclusions\": {\n    \"computerIds\": [\n      \"-1\",\n      \"-1\"\n    ],\n    \"computerGroupIds\": [\n      \"-1\",\n      \"-1\"\n    ],\n    \"mobileDeviceIds\": [\n      \"-1\",\n      \"-1\"\n    ],\n    \"mobileDeviceGroupIds\": [\n      \"-1\",\n      \"-1\"\n    ],\n    \"buildingIds\": [\n      \"-1\",\n      \"-1\"\n    ],\n    \"departmentIds\": [\n      \"-1\",\n      \"-1\"\n    ],\n    \"userIds\": [\n      \"-1\",\n      \"-1\"\n    ],\n    \"userGroupIds\": [\n      \"-1\",\n      \"-1\"\n    ],\n    \"limitations\": {\n      \"networkSegments\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"users\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userGroups\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "Specified scope for ebook object does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/ebooks/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"ebooks",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of ebook record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Ebook object\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ebooks?page=0&page-size=100&sort=name:asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ebooks"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "name:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Gets ebook object"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ebooks?page=0&page-size=100&sort=name:asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ebooks"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "name:asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"The Neverending API\",\n      \"kind\": \"IBOOKS\",\n      \"url\": \"https://jamf.com/ibooks/the_neverending_api.just_kidding\",\n      \"free\": true,\n      \"version\": \"10.9.0\",\n      \"author\": \"IT Bob\",\n      \"deployAsManaged\": false,\n      \"installAutomatically\": false,\n      \"categoryId\": \"-1\",\n      \"siteId\": \"-1\"\n    },\n    {\n      \"id\": \"1\",\n      \"name\": \"The Neverending API\",\n      \"kind\": \"IBOOKS\",\n      \"url\": \"https://jamf.com/ibooks/the_neverending_api.just_kidding\",\n      \"free\": true,\n      \"version\": \"10.9.0\",\n      \"author\": \"IT Bob\",\n      \"deployAsManaged\": false,\n      \"installAutomatically\": false,\n      \"categoryId\": \"-1\",\n      \"siteId\": \"-1\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "engage",
					"item": [
						{
							"name": "history",
							"item": [
								{
									"name": "Get Engage settings history\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/engage/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc&search=&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"engage",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "100"
												},
												{
													"key": "pagesize",
													"value": "100"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "date:desc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
												},
												{
													"key": "search",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter history notes collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: search=username!=admin and details==*disabled* and date<2019-12-15"
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											]
										},
										"description": "Gets Engage settings history\n"
									},
									"response": [
										{
											"name": "Details of Engage settings history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/engage/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc&search=&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"engage",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "100"
														},
														{
															"key": "pagesize",
															"value": "100"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc"
														},
														{
															"key": "search",
															"value": ""
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add Engage settings history notes\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/engage/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"engage",
												"history"
											]
										},
										"description": "Adds Engage settings history notes\n"
									},
									"response": [
										{
											"name": "Notes to Engage settings history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/engage/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"engage",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
										},
										{
											"name": "Engage history can not be saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/engage/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"engage",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Engage settings\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/engage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"engage"
									]
								},
								"description": "Get Engage settings\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/engage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"engage"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"isEnabled\": false\n}"
								}
							]
						},
						{
							"name": "Update Engage settings\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isEnabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/engage",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"engage"
									]
								},
								"description": "Update Engage settings\n"
							},
							"response": [
								{
									"name": "Engage settings updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"isEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/engage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"engage"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"isEnabled\": false\n}"
								}
							]
						}
					]
				},
				{
					"name": "enrollment-customization",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "all",
									"item": [
										{
											"name": "{panel-id}",
											"item": [
												{
													"name": "Get a single Panel for a single Enrollment Customization\n",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/all/:panel-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"all",
																":panel-id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																},
																{
																	"key": "panel-id",
																	"value": "44454440",
																	"description": "(Required) Panel object identifier"
																}
															]
														},
														"description": "Get a single panel for a single enrollment customization"
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/all/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"all",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"displayName\": \"A Panel\",\n  \"rank\": 0,\n  \"id\": 2,\n  \"type\": \"text\"\n}"
														},
														{
															"name": "Enrollment Customization with that id does not exist",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/all/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"all",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Delete a single Panel from an Enrollment Customization\n",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/all/:panel-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"all",
																":panel-id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																},
																{
																	"key": "panel-id",
																	"value": "44454440",
																	"description": "(Required) Panel object identifier"
																}
															]
														},
														"description": "Delete a single panel from an Enrollment Customization"
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/all/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"all",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Get all Panels for single Enrollment Customization\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id/all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id",
														"all"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												},
												"description": "Get all panels for single enrollment customization"
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/all",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"all"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"panels\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
												},
												{
													"name": "Enrollment Customization with that id does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/all",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"all"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "history",
									"item": [
										{
											"name": "Get sorted and paged Enrollment Customization history objects\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "100"
														},
														{
															"key": "pagesize",
															"value": "100"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc",
															"description": "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												},
												"description": "Gets sorted and paged enrollment customization history objects"
											},
											"response": [
												{
													"name": "Details of enrollment customization history were found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "100"
																},
																{
																	"key": "pagesize",
																	"value": "100"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add Enrollment Customization history object notes\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												},
												"description": "Adds enrollment customization history object notes"
											},
											"response": [
												{
													"name": "Notes of enrollment customization history were added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
												},
												{
													"name": "Enrollment customization history can not be saved",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "ldap",
									"item": [
										{
											"name": "{panel-id}",
											"item": [
												{
													"name": "Get a single LDAP panel for a single Enrollment Customization\n",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/ldap/:panel-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"ldap",
																":panel-id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																},
																{
																	"key": "panel-id",
																	"value": "44454440",
																	"description": "(Required) Panel object identifier"
																}
															]
														},
														"description": "Get a single LDAP panel for a single enrollment customization"
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/ldap/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"ldap",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"backButtonText\": \"Back\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"passwordLabel\": \"Password\",\n  \"rank\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"title\": \"My Ldap Panel\",\n  \"usernameLabel\": \"Username\",\n  \"ldapGroupAccess\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"id\": 2,\n  \"type\": \"ldap\"\n}"
														},
														{
															"name": "Enrollment Customization or Panel does not exist",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/ldap/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"ldap",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Update a single LDAP Panel for a single Enrollment Customization\n",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"backButtonText\": \"Back\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": \"A Panel\",\n  \"passwordLabel\": \"Password\",\n  \"rank\": 0,\n  \"title\": \"My Ldap Panel\",\n  \"usernameLabel\": \"Username\",\n  \"ldapGroupAccess\": [\n    {\n      \"ldapServerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ldapServerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/ldap/:panel-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"ldap",
																":panel-id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																},
																{
																	"key": "panel-id",
																	"value": "44454440",
																	"description": "(Required) Panel object identifier"
																}
															]
														},
														"description": "Update a single LDAP panel for a single enrollment customization. If multiple LDAP access groups are defined with the same name and id, only one will be saved."
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"backButtonText\": \"Back\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": \"A Panel\",\n  \"passwordLabel\": \"Password\",\n  \"rank\": 0,\n  \"title\": \"My Ldap Panel\",\n  \"usernameLabel\": \"Username\",\n  \"ldapGroupAccess\": [\n    {\n      \"ldapServerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ldapServerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/ldap/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"ldap",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"backButtonText\": \"Back\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"passwordLabel\": \"Password\",\n  \"rank\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"title\": \"My Ldap Panel\",\n  \"usernameLabel\": \"Username\",\n  \"ldapGroupAccess\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"id\": 2,\n  \"type\": \"ldap\"\n}"
														},
														{
															"name": "Enrollment Customization or Panel does not exist",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"backButtonText\": \"Back\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": \"A Panel\",\n  \"passwordLabel\": \"Password\",\n  \"rank\": 0,\n  \"title\": \"My Ldap Panel\",\n  \"usernameLabel\": \"Username\",\n  \"ldapGroupAccess\": [\n    {\n      \"ldapServerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ldapServerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/ldap/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"ldap",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Delete an LDAP single panel from an Enrollment Customization\n",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/ldap/:panel-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"ldap",
																":panel-id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																},
																{
																	"key": "panel-id",
																	"value": "44454440",
																	"description": "(Required) Panel object identifier"
																}
															]
														},
														"description": "Delete an LDAP single Panel from an Enrollment Customization"
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/ldap/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"ldap",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Create an LDAP Panel for a single Enrollment Customization\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"backButtonText\": \"Back\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": \"A Panel\",\n  \"passwordLabel\": \"Password\",\n  \"rank\": 0,\n  \"title\": \"My Ldap Panel\",\n  \"usernameLabel\": \"Username\",\n  \"ldapGroupAccess\": [\n    {\n      \"ldapServerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ldapServerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id/ldap",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id",
														"ldap"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												},
												"description": "Create an LDAP panel for a single enrollment customization. If multiple LDAP access groups are defined with the same name and id, only one will be saved."
											},
											"response": [
												{
													"name": "LDAP panel was created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"backButtonText\": \"Back\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": \"A Panel\",\n  \"passwordLabel\": \"Password\",\n  \"rank\": 0,\n  \"title\": \"My Ldap Panel\",\n  \"usernameLabel\": \"Username\",\n  \"ldapGroupAccess\": [\n    {\n      \"ldapServerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ldapServerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/ldap",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"ldap"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"backButtonText\": \"Back\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"passwordLabel\": \"Password\",\n  \"rank\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"title\": \"My Ldap Panel\",\n  \"usernameLabel\": \"Username\",\n  \"ldapGroupAccess\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"id\": 2,\n  \"type\": \"ldap\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"backButtonText\": \"Back\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": \"A Panel\",\n  \"passwordLabel\": \"Password\",\n  \"rank\": 0,\n  \"title\": \"My Ldap Panel\",\n  \"usernameLabel\": \"Username\",\n  \"ldapGroupAccess\": [\n    {\n      \"ldapServerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"ldapServerId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/ldap",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"ldap"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "sso",
									"item": [
										{
											"name": "{panel-id}",
											"item": [
												{
													"name": "Get a single SSO Panel for a single Enrollment Customization\n",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/sso/:panel-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"sso",
																":panel-id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																},
																{
																	"key": "panel-id",
																	"value": "44454440",
																	"description": "(Required) Panel object identifier"
																}
															]
														},
														"description": "Get a single SSO panel for a single enrollment customization"
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/sso/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"sso",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupEnrollmentAccessName\": \"GroupNameA\",\n  \"isGroupEnrollmentAccessEnabled\": false,\n  \"isUseJamfConnect\": false,\n  \"longNameAttribute\": \"long name\",\n  \"rank\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shortNameAttribute\": \"name\",\n  \"id\": 2,\n  \"type\": \"sso\"\n}"
														},
														{
															"name": "Enrollment Customization or Panel does not exist",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/sso/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"sso",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Update a single SSO Panel for a single Enrollment Customization\n",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"displayName\": \"A Panel\",\n  \"groupEnrollmentAccessName\": \"GroupNameA\",\n  \"isGroupEnrollmentAccessEnabled\": false,\n  \"isUseJamfConnect\": false,\n  \"longNameAttribute\": \"long name\",\n  \"rank\": 0,\n  \"shortNameAttribute\": \"name\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/sso/:panel-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"sso",
																":panel-id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																},
																{
																	"key": "panel-id",
																	"value": "44454440",
																	"description": "(Required) Panel object identifier"
																}
															]
														},
														"description": "Update a single SSO panel for a single enrollment customization"
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"displayName\": \"A Panel\",\n  \"groupEnrollmentAccessName\": \"GroupNameA\",\n  \"isGroupEnrollmentAccessEnabled\": false,\n  \"isUseJamfConnect\": false,\n  \"longNameAttribute\": \"long name\",\n  \"rank\": 0,\n  \"shortNameAttribute\": \"name\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/sso/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"sso",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupEnrollmentAccessName\": \"GroupNameA\",\n  \"isGroupEnrollmentAccessEnabled\": false,\n  \"isUseJamfConnect\": false,\n  \"longNameAttribute\": \"long name\",\n  \"rank\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shortNameAttribute\": \"name\",\n  \"id\": 2,\n  \"type\": \"sso\"\n}"
														},
														{
															"name": "Enrollment Customization or Panel does not exist",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"displayName\": \"A Panel\",\n  \"groupEnrollmentAccessName\": \"GroupNameA\",\n  \"isGroupEnrollmentAccessEnabled\": false,\n  \"isUseJamfConnect\": false,\n  \"longNameAttribute\": \"long name\",\n  \"rank\": 0,\n  \"shortNameAttribute\": \"name\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/sso/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"sso",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Delete a single SSO Panel from an Enrollment Customization\n",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/sso/:panel-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"sso",
																":panel-id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																},
																{
																	"key": "panel-id",
																	"value": "44454440",
																	"description": "(Required) Panel object identifier"
																}
															]
														},
														"description": "Delete a single SSO panel from an Enrollment Customization"
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/sso/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"sso",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "Create an SSO Panel for a single Enrollment Customization\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"A Panel\",\n  \"groupEnrollmentAccessName\": \"GroupNameA\",\n  \"isGroupEnrollmentAccessEnabled\": false,\n  \"isUseJamfConnect\": false,\n  \"longNameAttribute\": \"long name\",\n  \"rank\": 0,\n  \"shortNameAttribute\": \"name\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id/sso",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id",
														"sso"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												},
												"description": "Create an SSO panel for a single enrollment customization"
											},
											"response": [
												{
													"name": "Auth panel was created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"displayName\": \"A Panel\",\n  \"groupEnrollmentAccessName\": \"GroupNameA\",\n  \"isGroupEnrollmentAccessEnabled\": false,\n  \"isUseJamfConnect\": false,\n  \"longNameAttribute\": \"long name\",\n  \"rank\": 0,\n  \"shortNameAttribute\": \"name\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/sso",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"sso"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"groupEnrollmentAccessName\": \"GroupNameA\",\n  \"isGroupEnrollmentAccessEnabled\": false,\n  \"isUseJamfConnect\": false,\n  \"longNameAttribute\": \"long name\",\n  \"rank\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"shortNameAttribute\": \"name\",\n  \"id\": 2,\n  \"type\": \"sso\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"displayName\": \"A Panel\",\n  \"groupEnrollmentAccessName\": \"GroupNameA\",\n  \"isGroupEnrollmentAccessEnabled\": false,\n  \"isUseJamfConnect\": false,\n  \"longNameAttribute\": \"long name\",\n  \"rank\": 0,\n  \"shortNameAttribute\": \"name\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/sso",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"sso"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "text",
									"item": [
										{
											"name": "{panel-id}",
											"item": [
												{
													"name": "Get a single Text Panel for a single Enrollment Customization\n",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text/:panel-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"text",
																":panel-id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																},
																{
																	"key": "panel-id",
																	"value": "44454440",
																	"description": "(Required) Panel object identifier"
																}
															]
														},
														"description": "Get a single Text panel for a single enrollment customization"
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"text",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"backButtonText\": \"Back\",\n  \"body\": \"Welcome!\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"rank\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"title\": \"My text panel\",\n  \"subtext\": \"World!\",\n  \"id\": 2,\n  \"type\": \"text\"\n}"
														},
														{
															"name": "Enrollment Customization with that id does not exist",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"text",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Update a single Text Panel for a single Enrollment Customization\n",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"backButtonText\": \"Back\",\n  \"body\": \"Welcome!\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": \"A Panel\",\n  \"rank\": 0,\n  \"title\": \"My text panel\",\n  \"subtext\": \"World!\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text/:panel-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"text",
																":panel-id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																},
																{
																	"key": "panel-id",
																	"value": "44454440",
																	"description": "(Required) Panel object identifier"
																}
															]
														},
														"description": "Update a single Text panel for a single enrollment customization"
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"backButtonText\": \"Back\",\n  \"body\": \"Welcome!\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": \"A Panel\",\n  \"rank\": 0,\n  \"title\": \"My text panel\",\n  \"subtext\": \"World!\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"text",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"backButtonText\": \"Back\",\n  \"body\": \"Welcome!\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"rank\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"title\": \"My text panel\",\n  \"subtext\": \"World!\",\n  \"id\": 2,\n  \"type\": \"text\"\n}"
														},
														{
															"name": "Enrollment Customization or Panel does not exist",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"backButtonText\": \"Back\",\n  \"body\": \"Welcome!\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": \"A Panel\",\n  \"rank\": 0,\n  \"title\": \"My text panel\",\n  \"subtext\": \"World!\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"text",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Delete a Text single Panel from an Enrollment Customization\n",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text/:panel-id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"text",
																":panel-id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																},
																{
																	"key": "panel-id",
																	"value": "44454440",
																	"description": "(Required) Panel object identifier"
																}
															]
														},
														"description": "Delete a Text single panel from an Enrollment Customization"
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text/:panel-id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"text",
																		":panel-id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												},
												{
													"name": "Get the markdown output of a single Text Panel for a single Enrollment\n",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text/:panel-id/markdown",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"text",
																":panel-id",
																"markdown"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																},
																{
																	"key": "panel-id",
																	"value": "44454440",
																	"description": "(Required) Panel object identifier"
																}
															]
														},
														"description": "Get the markdown output of a single Text panel for a single enrollment customization"
													},
													"response": [
														{
															"name": "Success",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text/:panel-id/markdown",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"text",
																		":panel-id",
																		"markdown"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"markdown\": \"**markdown**\"\n}"
														},
														{
															"name": "Enrollment Customization with that id does not exist",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text/:panel-id/markdown",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"enrollment-customization",
																		":id",
																		"text",
																		":panel-id",
																		"markdown"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "44454440",
																			"description": "(Required) Enrollment Customization identifier"
																		},
																		{
																			"key": "panel-id",
																			"value": "44454440",
																			"description": "(Required) Panel object identifier"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Create a Text Panel for a single Enrollment Customization\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"backButtonText\": \"Back\",\n  \"body\": \"Welcome!\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": \"A Panel\",\n  \"rank\": 0,\n  \"title\": \"My text panel\",\n  \"subtext\": \"World!\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id",
														"text"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												},
												"description": "Create a Text panel for a single enrollment customization"
											},
											"response": [
												{
													"name": "Text panel was created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"backButtonText\": \"Back\",\n  \"body\": \"Welcome!\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": \"A Panel\",\n  \"rank\": 0,\n  \"title\": \"My text panel\",\n  \"subtext\": \"World!\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"text"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"backButtonText\": \"Back\",\n  \"body\": \"Welcome!\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"rank\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"title\": \"My text panel\",\n  \"subtext\": \"World!\",\n  \"id\": 2,\n  \"type\": \"text\"\n}"
												},
												{
													"name": "Bad Request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"backButtonText\": \"Back\",\n  \"body\": \"Welcome!\",\n  \"continueButtonText\": \"Continue\",\n  \"displayName\": \"A Panel\",\n  \"rank\": 0,\n  \"title\": \"My text panel\",\n  \"subtext\": \"World!\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/enrollment-customization/:id/text",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"enrollment-customization",
																":id",
																"text"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve an Enrollment Customization with the supplied id\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/enrollment-customization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"enrollment-customization",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Enrollment Customization identifier"
												}
											]
										},
										"description": "Retrieves an Enrollment Customization with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"buttonColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"buttonTextColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"iconUrl\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"textColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"siteId\": 2,\n  \"id\": 1\n}"
										},
										{
											"name": "Enrollment Customization with that id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update an Enrollment Customization\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": \"0000FF\",\n    \"buttonColor\": \"0000FF\",\n    \"buttonTextColor\": \"0000FF\",\n    \"iconUrl\": \"https://jamfUrl/stored-images?id=1\",\n    \"textColor\": \"0000FF\"\n  },\n  \"siteId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/enrollment-customization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"enrollment-customization",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Enrollment Customization identifier"
												}
											]
										},
										"description": "Updates an Enrollment Customization"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": \"0000FF\",\n    \"buttonColor\": \"0000FF\",\n    \"buttonTextColor\": \"0000FF\",\n    \"iconUrl\": \"https://jamfUrl/stored-images?id=1\",\n    \"textColor\": \"0000FF\"\n  },\n  \"siteId\": 2\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"buttonColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"buttonTextColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"iconUrl\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"textColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"siteId\": 2,\n  \"id\": 1\n}"
										},
										{
											"name": "Enrollment Customization with that id does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": \"0000FF\",\n    \"buttonColor\": \"0000FF\",\n    \"buttonTextColor\": \"0000FF\",\n    \"iconUrl\": \"https://jamfUrl/stored-images?id=1\",\n    \"textColor\": \"0000FF\"\n  },\n  \"siteId\": 2\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete an Enrollment Customization with the supplied id\n",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/enrollment-customization/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"enrollment-customization",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Enrollment Customization identifier"
												}
											]
										},
										"description": "Deletes an Enrollment Customization with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieve the list of Prestages using this Enrollment Customization\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/enrollment-customization/:id/prestages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"enrollment-customization",
												":id",
												"prestages"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Enrollment Customization identifier"
												}
											]
										},
										"description": "Retrieves the list of Prestages using this Enrollment Customization"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id/prestages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id",
														"prestages"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"dependencies\": [\n    {\n      \"name\": \"Name\",\n      \"humanReadableName\": \"Computer PreStage\",\n      \"hyperlink\": \"/mobile-prestage/id\"\n    },\n    {\n      \"name\": \"Name\",\n      \"humanReadableName\": \"Computer PreStage\",\n      \"hyperlink\": \"/mobile-prestage/id\"\n    }\n  ]\n}"
										},
										{
											"name": "Enrollment Customization with that id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/enrollment-customization/:id/prestages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"enrollment-customization",
														":id",
														"prestages"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve sorted and paged Enrollment Customizations\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/enrollment-customization?page=0&size=100&pagesize=100&page-size=100&sort=id:asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"enrollment-customization"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "100"
										},
										{
											"key": "pagesize",
											"value": "100"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Retrieves sorted and paged Enrollment Customizations"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/enrollment-customization?page=0&size=100&pagesize=100&page-size=100&sort=id:asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"enrollment-customization"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "100"
												},
												{
													"key": "pagesize",
													"value": "100"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create an Enrollment Customization\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": \"0000FF\",\n    \"buttonColor\": \"0000FF\",\n    \"buttonTextColor\": \"0000FF\",\n    \"iconUrl\": \"https://jamfUrl/stored-images?id=1\",\n    \"textColor\": \"0000FF\"\n  },\n  \"siteId\": 2\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/enrollment-customization",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"enrollment-customization"
									]
								},
								"description": "Create an enrollment customization"
							},
							"response": [
								{
									"name": "Enrollment customization was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": \"0000FF\",\n    \"buttonColor\": \"0000FF\",\n    \"buttonTextColor\": \"0000FF\",\n    \"iconUrl\": \"https://jamfUrl/stored-images?id=1\",\n    \"textColor\": \"0000FF\"\n  },\n  \"siteId\": 2\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/enrollment-customization",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"enrollment-customization"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"buttonColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"buttonTextColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"iconUrl\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"textColor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"siteId\": 2,\n  \"id\": 1\n}"
								}
							]
						},
						{
							"name": "Upload an image",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) The file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/enrollment-customization/images",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"enrollment-customization",
										"images"
									]
								},
								"description": "Uploads an image"
							},
							"response": [
								{
									"name": "Image successfully uploaded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) The file to upload",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/enrollment-customization/images",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"enrollment-customization",
												"images"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"url\": \"https://jamfpro.jamf/image?1\"\n}"
								}
							]
						},
						{
							"name": "Parse the given string as markdown text and return Html output\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"markdown\": \"**markdown**\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/enrollment-customization/parse-markdown",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"enrollment-customization",
										"parse-markdown"
									]
								},
								"description": "Parse the given string as markdown text and return Html output"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"markdown\": \"**markdown**\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/enrollment-customization/parse-markdown",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"enrollment-customization",
												"parse-markdown"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"markdown\": \"**markdown**\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "icon",
					"item": [
						{
							"name": "Upload an icon\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) The file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v1/icon",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"icon"
									]
								},
								"description": "Uploads an icon"
							},
							"response": [
								{
									"name": "Icon successfully uploaded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) The file to upload",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/icon",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"icon"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"url\": \"https://stage-ics.services.jamfcloud.com/icon/hash_c315ef577b84505de1bfcb50b0c4b1c963da30b2a805f84b24ad09f282b7fad4\",\n  \"id\": 5\n}"
								},
								{
									"name": "Failure, field required: \"file\".",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) The file to upload",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/icon",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"icon"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								{
									"name": "Upload Failed.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) The file to upload",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v1/icon",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"icon"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get an icon\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/icon/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"icon",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "in aute",
											"description": "(Required) id of the icon"
										}
									]
								},
								"description": "Get an icon"
							},
							"response": [
								{
									"name": "Succesful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/icon/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"icon",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) id of the icon"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"url\": \"https://stage-ics.services.jamfcloud.com/icon/hash_c315ef577b84505de1bfcb50b0c4b1c963da30b2a805f84b24ad09f282b7fad4\",\n  \"id\": 5\n}"
								}
							]
						}
					]
				},
				{
					"name": "inventory-preload",
					"item": [
						{
							"name": "history",
							"item": [
								{
									"name": "Get Inventory Preload history entries\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inventory-preload/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory-preload",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "100"
												},
												{
													"key": "pagesize",
													"value": "100"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "date:desc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
												}
											]
										},
										"description": "Gets Inventory Preload history entries."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory-preload/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory-preload",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "100"
														},
														{
															"key": "pagesize",
															"value": "100"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add Inventory Preload history object notes\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inventory-preload/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory-preload",
												"history"
											]
										},
										"description": "Adds Inventory Preload history object notes."
									},
									"response": [
										{
											"name": "Notes of Inventory Preload history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/inventory-preload/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory-preload",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
										},
										{
											"name": "Inventory Preload history can not be saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/inventory-preload/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory-preload",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get an Inventory Preload record\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inventory-preload/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory-preload",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Inventory Preload identifier"
												}
											]
										},
										"description": "Retrieves an Inventory Preload record."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory-preload/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory-preload",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Inventory Preload identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}"
										},
										{
											"name": "Inventory Preload record with specified id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory-preload/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory-preload",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Inventory Preload identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update an Inventory Preload record\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inventory-preload/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory-preload",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Inventory Preload identifier"
												}
											]
										},
										"description": "Updates an Inventory Preload record."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/inventory-preload/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory-preload",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Inventory Preload identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}"
										},
										{
											"name": "Inventory Preload record with specified id does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/inventory-preload/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory-preload",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Inventory Preload identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete an Inventory Preload record\n",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inventory-preload/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory-preload",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Inventory Preload identifier"
												}
											]
										},
										"description": "Deletes an Inventory Preload record."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory-preload/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory-preload",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Inventory Preload identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Inventory Preload record with specified id does not exist",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/inventory-preload/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"inventory-preload",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Inventory Preload identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Return all Inventory Preload records\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/inventory-preload?page=0&size=100&pagesize=100&page-size=100&sort=id:asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"inventory-preload"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "100"
										},
										{
											"key": "pagesize",
											"value": "100"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Returns all Inventory Preload records."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inventory-preload?page=0&size=100&pagesize=100&page-size=100&sort=id:asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory-preload"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "100"
												},
												{
													"key": "pagesize",
													"value": "100"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 10,\n  \"results\": [\n    {\n      \"deviceType\": \"Computer\",\n      \"serialNumber\": \"C02L29ECF8J1\",\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"fullName\": \"Name\",\n      \"emailAddress\": \"ITBob@jamf.com\",\n      \"phoneNumber\": \"555-555-5555\",\n      \"position\": \"IT Team Lead\",\n      \"department\": \"IT\",\n      \"building\": \"Eau Claire\",\n      \"room\": \"4th Floor - Quad 3\",\n      \"poNumber\": \"8675309\",\n      \"poDate\": \"2019-02-04T21:09:31.661Z\",\n      \"warrantyExpiration\": \"2012-07-21\",\n      \"appleCareId\": \"5678\",\n      \"lifeExpectancy\": \"5 years\",\n      \"purchasePrice\": \"$399\",\n      \"purchasingContact\": \"Nick in IT\",\n      \"purchasingAccount\": \"IT Budget\",\n      \"leaseExpiration\": \"2015-06-19\",\n      \"barCode1\": \"123456789\",\n      \"barCode2\": \"123456789\",\n      \"assetTag\": \"ABCDEFG12345\",\n      \"vendor\": \"Apple\",\n      \"extensionAttributes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"deviceType\": \"Computer\",\n      \"serialNumber\": \"C02L29ECF8J1\",\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"fullName\": \"Name\",\n      \"emailAddress\": \"ITBob@jamf.com\",\n      \"phoneNumber\": \"555-555-5555\",\n      \"position\": \"IT Team Lead\",\n      \"department\": \"IT\",\n      \"building\": \"Eau Claire\",\n      \"room\": \"4th Floor - Quad 3\",\n      \"poNumber\": \"8675309\",\n      \"poDate\": \"2019-02-04T21:09:31.661Z\",\n      \"warrantyExpiration\": \"2012-07-21\",\n      \"appleCareId\": \"5678\",\n      \"lifeExpectancy\": \"5 years\",\n      \"purchasePrice\": \"$399\",\n      \"purchasingContact\": \"Nick in IT\",\n      \"purchasingAccount\": \"IT Budget\",\n      \"leaseExpiration\": \"2015-06-19\",\n      \"barCode1\": \"123456789\",\n      \"barCode2\": \"123456789\",\n      \"assetTag\": \"ABCDEFG12345\",\n      \"vendor\": \"Apple\",\n      \"extensionAttributes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create a new Inventory Preload record using JSON or CSV\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/inventory-preload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"inventory-preload"
									]
								},
								"description": "Create a new Inventory Preload record using JSON or CSV.\nA CSV template can be downloaded from /api/inventory-preload/csv-template.\nSerial number and device type are required. All other fields are optional.\nWhen a matching serial number exists in the Inventory Preload data, the record will be overwritten with the CSV data.\nIf the CSV file contains a new username and an email address is provided, the new user is created in Jamf Pro.\nIf the CSV file contains an existing username, the following user-related fields are updated in Jamf Pro.\nFull Name,\nEmail Address,\nPhone Number,\nPosition.\nThis endpoint does not do full validation of each record in the CSV data.\nTo do full validation, use the /inventory-preload/validate-csv endpoint first.\n"
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inventory-preload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory-preload"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inventory-preload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory-preload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Delete all Inventory Preload records\n",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/inventory-preload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"inventory-preload"
									]
								},
								"description": "Deletes all Inventory Preload records."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inventory-preload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory-preload"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Retrieve the Inventory Preload CSV template\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/csv"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/inventory-preload/csv-template",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"inventory-preload",
										"csv-template"
									]
								},
								"description": "Retrieves the Inventory Preload CSV template."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/inventory-preload/csv-template",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory-preload",
												"csv-template"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/csv"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Validate a given CSV file\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "text/csv"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[object Object]"
								},
								"url": {
									"raw": "{{baseUrl}}/v1/inventory-preload/validate-csv",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"inventory-preload",
										"validate-csv"
									]
								},
								"description": "Validate a given CSV file.\nSerial number and device type are required. All other fields are optional.\nA CSV template can be downloaded from /api/inventory-preload/csv-template.\n"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object]"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inventory-preload/validate-csv",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory-preload",
												"validate-csv"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"recordCount\": 10\n}"
								},
								{
									"name": "Precondition Failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object]"
										},
										"url": {
											"raw": "{{baseUrl}}/v1/inventory-preload/validate-csv",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"inventory-preload",
												"validate-csv"
											]
										}
									},
									"status": "Precondition Failed",
									"code": 412,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpsStatus\": 400,\n  \"errors\": [\n    {\n      \"code\": \"SIZE_EXCEEDED\",\n      \"description\": \"Field 'vendor' exceeds max size 60\",\n      \"field\": \"vendor\",\n      \"value\": \"abcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyz\",\n      \"serialNumber\": \"R7QFDE2YCFN4\",\n      \"line\": 5,\n      \"fieldSize\": 60,\n      \"deviceType\": \"Computer\"\n    },\n    {\n      \"code\": \"SIZE_EXCEEDED\",\n      \"description\": \"Field 'vendor' exceeds max size 60\",\n      \"field\": \"vendor\",\n      \"value\": \"abcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyzabcdefghijklmnopqrstuwxyz\",\n      \"serialNumber\": \"R7QFDE2YCFN4\",\n      \"line\": 5,\n      \"fieldSize\": 60,\n      \"deviceType\": \"Computer\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "jamf-connect",
					"item": [
						{
							"name": "config-profiles",
							"item": [
								{
									"name": "Search for config profiles linked to Jamf Connect\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-connect/config-profiles?page=0&page-size=100&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-connect",
												"config-profiles"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											]
										},
										"description": "Search for config profiles linked to Jamf Connect"
									},
									"response": [
										{
											"name": "Success.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-connect/config-profiles?page=0&page-size=100&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-connect",
														"config-profiles"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 13,\n  \"results\": [\n    {\n      \"uuid\": \"d265dfd3-8fde-4bf2-aa56-b167c8b68069\",\n      \"profileId\": \"d265dfd3-8fde-4bf2-aa56-b167c8b68069\",\n      \"profileName\": \"Best Plans of Mice\",\n      \"profileScopeDescription\": \"Plan for all of the mouse computers at our org\",\n      \"version\": \"2.3.0\",\n      \"autoDeploymentType\": \"NONE\"\n    },\n    {\n      \"uuid\": \"d265dfd3-8fde-4bf2-aa56-b167c8b68069\",\n      \"profileId\": \"d265dfd3-8fde-4bf2-aa56-b167c8b68069\",\n      \"profileName\": \"Best Plans of Mice\",\n      \"profileScopeDescription\": \"Plan for all of the mouse computers at our org\",\n      \"version\": \"2.3.0\",\n      \"autoDeploymentType\": \"NONE\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update the way the Jamf Connect app gets updated on computers within scope of the associated configuration profile.\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"version\": \"2.3.0\",\n  \"autoDeploymentType\": \"NONE\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-connect/config-profiles/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-connect",
												"config-profiles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
													"description": "(Required) the UUID of the profile to update"
												}
											]
										},
										"description": "Update the way the Jamf Connect app gets updated on computers within scope of the associated configuration profile."
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"version\": \"2.3.0\",\n  \"autoDeploymentType\": \"NONE\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-connect/config-profiles/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-connect",
														"config-profiles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
															"description": "(Required) the UUID of the profile to update"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"uuid\": \"d265dfd3-8fde-4bf2-aa56-b167c8b68069\",\n  \"profileId\": \"d265dfd3-8fde-4bf2-aa56-b167c8b68069\",\n  \"profileName\": \"Best Plans of Mice\",\n  \"profileScopeDescription\": \"Plan for all of the mouse computers at our org\",\n  \"version\": \"2.3.0\",\n  \"autoDeploymentType\": \"NONE\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "deployments/{id}/tasks",
							"item": [
								{
									"name": "Search for deployment tasks for a config profile linked to Jamf Connect\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-connect/deployments/:id/tasks?page=0&page-size=100&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-connect",
												"deployments",
												":id",
												"tasks"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
													"description": "(Required) the UUID of the Jamf Connect deployment"
												}
											]
										},
										"description": "Search for config profiles linked to Jamf Connect"
									},
									"response": [
										{
											"name": "Success.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-connect/deployments/:id/tasks?page=0&page-size=100&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-connect",
														"deployments",
														":id",
														"tasks"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "filter",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
															"description": "(Required) the UUID of the Jamf Connect deployment"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 13,\n  \"results\": [\n    {\n      \"id\": \"82\",\n      \"computerId\": \"111\",\n      \"computerName\": \"Polka dot Stratocaster\",\n      \"version\": \"2.3.4\",\n      \"updated\": \"2021-05-07T21:20:34.35Z\",\n      \"status\": \"COMPLETE\"\n    },\n    {\n      \"id\": \"82\",\n      \"computerId\": \"111\",\n      \"computerName\": \"Polka dot Stratocaster\",\n      \"version\": \"2.3.4\",\n      \"updated\": \"2021-05-07T21:20:34.35Z\",\n      \"status\": \"COMPLETE\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Request a retry of Connect install tasks\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-connect/deployments/:id/tasks/retry",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-connect",
												"deployments",
												":id",
												"tasks",
												"retry"
											],
											"variable": [
												{
													"key": "id",
													"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
													"description": "(Required) the UUID of the deployment associated with the retry"
												}
											]
										},
										"description": "Request a retry of Connect install tasks\n"
									},
									"response": [
										{
											"name": "Success, no content.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-connect/deployments/:id/tasks/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-connect",
														"deployments",
														":id",
														"tasks",
														"retry"
													],
													"variable": [
														{
															"key": "id",
															"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
															"description": "(Required) the UUID of the deployment associated with the retry"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cloud Services Connection has not been established.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-connect/deployments/:id/tasks/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-connect",
														"deployments",
														":id",
														"tasks",
														"retry"
													],
													"variable": [
														{
															"key": "id",
															"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
															"description": "(Required) the UUID of the deployment associated with the retry"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Jamf Connect tasks to retry failed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-connect/deployments/:id/tasks/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-connect",
														"deployments",
														":id",
														"tasks",
														"retry"
													],
													"variable": [
														{
															"key": "id",
															"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
															"description": "(Required) the UUID of the deployment associated with the retry"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "history",
							"item": [
								{
									"name": "Get Jamf Connect history\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-connect/history?page=0&page-size=100&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-connect",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											]
										},
										"description": "Get Jamf Connect history\n"
									},
									"response": [
										{
											"name": "Details of Jamf Connect history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-connect/history?page=0&page-size=100&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-connect",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add Jamf Connect history notes\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-connect/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-connect",
												"history"
											]
										},
										"description": "Add Jamf Connect history notes\n"
									},
									"response": [
										{
											"name": "Notes to Jamf Connect history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-connect/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-connect",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "Jamf Connect history can not be saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-connect/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-connect",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get the Jamf Connect settings that you have access to see\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-connect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-connect"
									]
								},
								"description": "Get the Jamf Connect settings that you have access to see."
							},
							"response": [
								{
									"name": "Success, no content.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-connect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-connect"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Cloud Services Connection has not been established.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-connect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-connect"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "jamf-pro-server-url",
					"item": [
						{
							"name": "history",
							"item": [
								{
									"name": "Get Jamf Pro Server URL settings history\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-pro-server-url/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-pro-server-url",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "100"
												},
												{
													"key": "pagesize",
													"value": "100"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "date:desc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
												}
											]
										},
										"description": "Gets Jamf Pro Server URL settings history"
									},
									"response": [
										{
											"name": "Details of Jamf Pro Server URL settings history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-pro-server-url/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-pro-server-url",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "100"
														},
														{
															"key": "pagesize",
															"value": "100"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add Jamf Pro Server URL settings history notes\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-pro-server-url/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-pro-server-url",
												"history"
											]
										},
										"description": "Adds Jamf Pro Server URL settings history notes"
									},
									"response": [
										{
											"name": "Notes to Jamf Pro Server URL settings history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-pro-server-url/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-pro-server-url",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
										},
										{
											"name": "Jamf Pro Server URL is managed by Jamf Cloud",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-pro-server-url/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-pro-server-url",
														"history"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Jamf Pro Server URL history does not exist.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-pro-server-url/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-pro-server-url",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Jamf Pro Server URL settings\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-pro-server-url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-pro-server-url"
									]
								},
								"description": "Get Jamf Pro Server URL settings"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-pro-server-url",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-pro-server-url"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"unsecuredEnrollmentUrl\": \"http://example.com\",\n  \"url\": \"https://example.com:8443\"\n}"
								}
							]
						},
						{
							"name": "Update Jamf Pro Server URL settings\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"unsecuredEnrollmentUrl\": \"http://example.com\",\n  \"url\": \"https://example.com:8443\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-pro-server-url",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-pro-server-url"
									]
								},
								"description": "Update Jamf Pro Server URL settings"
							},
							"response": [
								{
									"name": "Jamf Pro Server URL settings updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"unsecuredEnrollmentUrl\": \"http://example.com\",\n  \"url\": \"https://example.com:8443\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-pro-server-url",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-pro-server-url"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"unsecuredEnrollmentUrl\": \"http://example.com\",\n  \"url\": \"https://example.com:8443\"\n}"
								},
								{
									"name": "Jamf Pro Server URL is managed by Jamf Cloud",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"unsecuredEnrollmentUrl\": \"http://example.com\",\n  \"url\": \"https://example.com:8443\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-pro-server-url",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-pro-server-url"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "jamf-protect",
					"item": [
						{
							"name": "deployments/{id}/tasks",
							"item": [
								{
									"name": "Search for deployment tasks for a config profile linked to Jamf Protect\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect/deployments/:id/tasks?page=0&page-size=100&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect",
												"deployments",
												":id",
												"tasks"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
													"description": "(Required) the UUID of the Jamf Protect deployment"
												}
											]
										},
										"description": "Search for config profiles linked to Jamf Protect"
									},
									"response": [
										{
											"name": "Success.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-protect/deployments/:id/tasks?page=0&page-size=100&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-protect",
														"deployments",
														":id",
														"tasks"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "filter",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
															"description": "(Required) the UUID of the Jamf Protect deployment"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 13,\n  \"results\": [\n    {\n      \"id\": \"82\",\n      \"computerId\": \"111\",\n      \"computerName\": \"Polka dot Stratocaster\",\n      \"version\": \"2.3.4\",\n      \"updated\": \"2021-05-07T21:20:34.35Z\",\n      \"status\": \"COMPLETE\"\n    },\n    {\n      \"id\": \"82\",\n      \"computerId\": \"111\",\n      \"computerName\": \"Polka dot Stratocaster\",\n      \"version\": \"2.3.4\",\n      \"updated\": \"2021-05-07T21:20:34.35Z\",\n      \"status\": \"COMPLETE\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Request a retry of Protect install tasks\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect/deployments/:id/tasks/retry",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect",
												"deployments",
												":id",
												"tasks",
												"retry"
											],
											"variable": [
												{
													"key": "id",
													"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
													"description": "(Required) the UUID of the deployment associated with the retry"
												}
											]
										},
										"description": "Request a retry of Protect install tasks\n"
									},
									"response": [
										{
											"name": "Success, no content.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-protect/deployments/:id/tasks/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-protect",
														"deployments",
														":id",
														"tasks",
														"retry"
													],
													"variable": [
														{
															"key": "id",
															"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
															"description": "(Required) the UUID of the deployment associated with the retry"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cloud Services Connection has not been established.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-protect/deployments/:id/tasks/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-protect",
														"deployments",
														":id",
														"tasks",
														"retry"
													],
													"variable": [
														{
															"key": "id",
															"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
															"description": "(Required) the UUID of the deployment associated with the retry"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Jamf Protect tasks to retry failed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-protect/deployments/:id/tasks/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-protect",
														"deployments",
														":id",
														"tasks",
														"retry"
													],
													"variable": [
														{
															"key": "id",
															"value": "24a7bb2a-9871-4895-9009-d1be07ed31b1",
															"description": "(Required) the UUID of the deployment associated with the retry"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "history",
							"item": [
								{
									"name": "Get Jamf Protect history\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect/history?page=0&page-size=100&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											]
										},
										"description": "Get Jamf Protect history\n"
									},
									"response": [
										{
											"name": "Details of Jamf Protect history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-protect/history?page=0&page-size=100&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-protect",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add Jamf Protect history notes\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect",
												"history"
											]
										},
										"description": "Add Jamf Protect history notes\n"
									},
									"response": [
										{
											"name": "Notes to Jamf Protect history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-protect/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-protect",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "Jamf Protect history can not be saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-protect/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-protect",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "plans",
							"item": [
								{
									"name": "Get all of the previously synced Jamf Protect Plans with information about their associated configuration profile",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect/plans?page=0&page-size=100&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect",
												"plans"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											]
										},
										"description": "Get all of the previously synced Jamf Protect Plans with information about their associated configuration profile"
									},
									"response": [
										{
											"name": "Success.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-protect/plans?page=0&page-size=100&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-protect",
														"plans"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"uuid\": \"b999dfd3-8fde-4bf2-aa56-b167c8b68071\",\n      \"id\": \"d265dfd3-8fde-4bf2-aa56-b167c8b68069\",\n      \"name\": \"Main Plan\",\n      \"description\": \"Plan for the majority of the company's computers\",\n      \"profileId\": 12,\n      \"profileName\": \"Main Plan (Jamf Protect)\",\n      \"scopeDescription\": \"All Computers\"\n    },\n    {\n      \"uuid\": \"b999dfd3-8fde-4bf2-aa56-b167c8b68071\",\n      \"id\": \"d265dfd3-8fde-4bf2-aa56-b167c8b68069\",\n      \"name\": \"Main Plan\",\n      \"description\": \"Plan for the majority of the company's computers\",\n      \"profileId\": 12,\n      \"profileName\": \"Main Plan (Jamf Protect)\",\n      \"scopeDescription\": \"All Computers\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Sync Plans with Jamf Protect",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect/plans/sync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect",
												"plans",
												"sync"
											]
										},
										"description": "Sync Plans with Jamf Protect. Configuration profiles associated with new plans will be imported to Jamf Pro."
									},
									"response": [
										{
											"name": "Success.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-protect/plans/sync",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-protect",
														"plans",
														"sync"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Cloud Services Connection has not been established.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-protect/plans/sync",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-protect",
														"plans",
														"sync"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Protect API credentials have not been configured.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/jamf-protect/plans/sync",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"jamf-protect",
														"plans",
														"sync"
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Jamf Protect integration settings",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-protect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-protect"
									]
								},
								"description": "Jamf Protect integration settings"
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"apiClientId\": \"esgzYzYBqN7wCImwyusbQcXob2qalGMN\",\n  \"apiClientName\": \"Jamf Pro integration\",\n  \"registrationId\": \"6f250316-2cfb-4521-8cb7-bfaf46497bc5\",\n  \"protectUrl\": \"https://examplejamfprotect.jamfcloud.com/graphql\",\n  \"lastSyncTime\": \"2003-01-05T18:00:14.885Z\",\n  \"syncStatus\": \"COMPLETED\",\n  \"autoInstall\": true\n}"
								},
								{
									"name": "Cloud Services Connection has not been established.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								{
									"name": "Protect Integration has not been configured.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								{
									"name": "Jamf Pro is not able to establish contact with the Protect API via the SOUP CSA client.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Jamf Protect integration settings",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"autoInstall\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-protect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-protect"
									]
								},
								"description": "Jamf Protect integration settings"
							},
							"response": [
								{
									"name": "Success.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"autoInstall\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"apiClientId\": \"esgzYzYBqN7wCImwyusbQcXob2qalGMN\",\n  \"apiClientName\": \"Jamf Pro integration\",\n  \"registrationId\": \"6f250316-2cfb-4521-8cb7-bfaf46497bc5\",\n  \"protectUrl\": \"https://examplejamfprotect.jamfcloud.com/graphql\",\n  \"lastSyncTime\": \"2003-01-05T18:00:14.885Z\",\n  \"syncStatus\": \"COMPLETED\",\n  \"autoInstall\": true\n}"
								}
							]
						},
						{
							"name": "Delete Jamf Protect API registration.",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-protect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-protect"
									]
								},
								"description": "Deletes an existing Jamf Protect API registration if present. Jamf Protect API integration will be disabled."
							},
							"response": [
								{
									"name": "Success, No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Cloud Services Connection has not been established.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								{
									"name": "Error Deleting registration",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Register a Jamf Protect API configuration with Jamf Pro",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"clientId\": \"uzPJXlArmzTAmPRQtZEnQ2OFtNw8qQV\",\n  \"password\": \"7fyP6BphUUQ5B_zoLrkYhM5j1HTcf-4PxshettZbK0ZcnzV57gyHwF23U3F96F\",\n  \"protectUrl\": \"https://examplejamfprotect.jamfcloud.com/graphql\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-protect/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-protect",
										"register"
									]
								},
								"description": "Register a Jamf Protect API configuration with Jamf Pro"
							},
							"response": [
								{
									"name": "Successful registration.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clientId\": \"uzPJXlArmzTAmPRQtZEnQ2OFtNw8qQV\",\n  \"password\": \"7fyP6BphUUQ5B_zoLrkYhM5j1HTcf-4PxshettZbK0ZcnzV57gyHwF23U3F96F\",\n  \"protectUrl\": \"https://examplejamfprotect.jamfcloud.com/graphql\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect",
												"register"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"apiClientId\": \"esgzYzYBqN7wCImwyusbQcXob2qalGMN\",\n  \"apiClientName\": \"Jamf Pro integration\",\n  \"registrationId\": \"6f250316-2cfb-4521-8cb7-bfaf46497bc5\",\n  \"protectUrl\": \"https://examplejamfprotect.jamfcloud.com/graphql\",\n  \"lastSyncTime\": \"2003-01-05T18:00:14.885Z\",\n  \"syncStatus\": \"COMPLETED\",\n  \"autoInstall\": true\n}"
								},
								{
									"name": "Cloud Services Connection has not been established.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"clientId\": \"uzPJXlArmzTAmPRQtZEnQ2OFtNw8qQV\",\n  \"password\": \"7fyP6BphUUQ5B_zoLrkYhM5j1HTcf-4PxshettZbK0ZcnzV57gyHwF23U3F96F\",\n  \"protectUrl\": \"https://examplejamfprotect.jamfcloud.com/graphql\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/jamf-protect/register",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"jamf-protect",
												"register"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "ldap",
					"item": [
						{
							"name": "Retrieve the configured access groups that contain the text in the search param\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ldap/groups?q=null",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ldap",
										"groups"
									],
									"query": [
										{
											"key": "q",
											"value": "null",
											"description": "Will perform a \"contains\" search on the names of access groups"
										}
									]
								},
								"description": "Retrieves the configured access groups that contain the text in the searchParam."
							},
							"response": [
								{
									"name": "Successful search.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ldap/groups?q=null",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ldap",
												"groups"
											],
											"query": [
												{
													"key": "q",
													"value": "null"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"id\": \"1\",\n      \"uuid\": \"89AF33FC-123C-1231-AEFD-9C3ED123AFCC\",\n      \"ldapServerId\": 1,\n      \"name\": \"Grade School Teachers\",\n      \"distinguishedName\": \"Grade School Teachers\"\n    },\n    {\n      \"id\": \"1\",\n      \"uuid\": \"89AF33FC-123C-1231-AEFD-9C3ED123AFCC\",\n      \"ldapServerId\": 1,\n      \"name\": \"Grade School Teachers\",\n      \"distinguishedName\": \"Grade School Teachers\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Retrieve all LDAP Servers.\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ldap/ldap-servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ldap",
										"ldap-servers"
									]
								},
								"description": "Retrieves all not migrated, LDAP Servers."
							},
							"response": [
								{
									"name": "Successfully completed.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ldap/ldap-servers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ldap",
												"ldap-servers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": 1,\n    \"name\": \"Server name\"\n  },\n  {\n    \"id\": 1,\n    \"name\": \"Server name\"\n  }\n]"
								}
							]
						},
						{
							"name": "Retrieve all Servers including LDAP and Cloud Identity Providers.\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/ldap/servers",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ldap",
										"servers"
									]
								},
								"description": "Retrieve all active Servers including LDAP and Cloud Identity Providers."
							},
							"response": [
								{
									"name": "Successfully completed.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/ldap/servers",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"ldap",
												"servers"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": 1,\n    \"name\": \"Server name\"\n  },\n  {\n    \"id\": 1,\n    \"name\": \"Server name\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "macos-managed-software-updates",
					"item": [
						{
							"name": "Retrieve available MacOs Managed Software Updates",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/macos-managed-software-updates/available-updates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"macos-managed-software-updates",
										"available-updates"
									]
								},
								"description": "Retrieves available MacOs Managed Software Updates"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/macos-managed-software-updates/available-updates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"macos-managed-software-updates",
												"available-updates"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"availableUpdates\": [\n    \"12.0.1\",\n    \"11.6.1\",\n    \"11.6\",\n    \"11.5.2\"\n  ]\n}"
								}
							]
						},
						{
							"name": "Send MacOs Managed Software Updates",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceIds\": [\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\"\n  ],\n  \"maxDeferrals\": 7,\n  \"version\": \"12.0.1\",\n  \"skipVersionVerification\": false,\n  \"applyMajorUpdate\": false,\n  \"updateAction\": \"DOWNLOAD_AND_INSTALL\",\n  \"forceRestart\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/macos-managed-software-updates/send-updates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"macos-managed-software-updates",
										"send-updates"
									]
								},
								"description": "Sends MacOs Managed Software Updates"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceIds\": [\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\"\n  ],\n  \"maxDeferrals\": 7,\n  \"version\": \"12.0.1\",\n  \"skipVersionVerification\": false,\n  \"applyMajorUpdate\": false,\n  \"updateAction\": \"DOWNLOAD_AND_INSTALL\",\n  \"forceRestart\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/macos-managed-software-updates/send-updates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"macos-managed-software-updates",
												"send-updates"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"responses\": [\n    {\n      \"id\": \"1\",\n      \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n    },\n    {\n      \"id\": \"1\",\n      \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n    }\n  ],\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceIds\": [\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\"\n  ],\n  \"maxDeferrals\": 7,\n  \"version\": \"12.0.1\",\n  \"skipVersionVerification\": false,\n  \"applyMajorUpdate\": false,\n  \"updateAction\": \"DOWNLOAD_AND_INSTALL\",\n  \"forceRestart\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/macos-managed-software-updates/send-updates",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"macos-managed-software-updates",
												"send-updates"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "mdm",
					"item": [
						{
							"name": "Get information about mdm commands made by Jamf Pro.\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/mdm/commands?uuids=amet officia laboris voluptate&uuids=irure&client-management-id=fd68c371-5921-436e-b16b-8a3c1bf90ee5",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"mdm",
										"commands"
									],
									"query": [
										{
											"key": "uuids",
											"value": "amet officia laboris voluptate",
											"description": "A list of the UUIDs of the commands being searched for.  Limited to 40 UUIDs in length. Choose one of two parameters, but not both."
										},
										{
											"key": "uuids",
											"value": "irure",
											"description": "A list of the UUIDs of the commands being searched for.  Limited to 40 UUIDs in length. Choose one of two parameters, but not both."
										},
										{
											"key": "client-management-id",
											"value": "fd68c371-5921-436e-b16b-8a3c1bf90ee5",
											"description": "The client management id used to search for a list of commands. Choose one of two parameters, but not both."
										}
									]
								},
								"description": "Get information about mdm commands made by Jamf Pro."
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mdm/commands?uuids=sed ex in veniam anim&uuids=ipsum&client-management-id=fd68c371-5921-436e-b16b-8a3c1bf90ee5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mdm",
												"commands"
											],
											"query": [
												{
													"key": "uuids",
													"value": "sed ex in veniam anim"
												},
												{
													"key": "uuids",
													"value": "ipsum"
												},
												{
													"key": "client-management-id",
													"value": "fd68c371-5921-436e-b16b-8a3c1bf90ee5"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"uuid\": \"aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937\",\n    \"dateSent\": \"2019-05-16T20:43:43.945Z\",\n    \"client\": {\n      \"managementId\": \"aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937\",\n      \"clientType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"commandState\": \"PENDING\",\n    \"commandType\": \"ENABLE_LOST_MODE\"\n  },\n  {\n    \"uuid\": \"aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937\",\n    \"dateSent\": \"2019-05-16T20:43:43.945Z\",\n    \"client\": {\n      \"managementId\": \"aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937\",\n      \"clientType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"commandState\": \"PENDING\",\n    \"commandType\": \"ENABLE_LOST_MODE\"\n  }\n]"
								},
								{
									"name": "Too many UUIDs were provided in the path. The limit is set at a strict 40 UUIDs.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mdm/commands?uuids=sed ex in veniam anim&uuids=ipsum&client-management-id=fd68c371-5921-436e-b16b-8a3c1bf90ee5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mdm",
												"commands"
											],
											"query": [
												{
													"key": "uuids",
													"value": "sed ex in veniam anim"
												},
												{
													"key": "uuids",
													"value": "ipsum"
												},
												{
													"key": "client-management-id",
													"value": "fd68c371-5921-436e-b16b-8a3c1bf90ee5"
												}
											]
										}
									},
									"status": "Request-URI Too Long",
									"code": 414,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								{
									"name": "Failure, unable to complete lookup.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mdm/commands?uuids=sed ex in veniam anim&uuids=ipsum&client-management-id=fd68c371-5921-436e-b16b-8a3c1bf90ee5",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mdm",
												"commands"
											],
											"query": [
												{
													"key": "uuids",
													"value": "sed ex in veniam anim"
												},
												{
													"key": "uuids",
													"value": "ipsum"
												},
												{
													"key": "client-management-id",
													"value": "fd68c371-5921-436e-b16b-8a3c1bf90ee5"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Renew MDM Profile\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"udids\": [\n    \"6E47EF55-5318-494F-A09E-70F613E0AFD1\",\n    \"6E47EF55-5318-494F-A09E-70F613E0AFD1\"\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/mdm/renew-profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"mdm",
										"renew-profile"
									]
								},
								"description": "Renews the device's MDM Profile, including the device identity certificate within the MDM Profile.\n"
							},
							"response": [
								{
									"name": "The Renew MDM Profile action was queued with APNs for submitted devices. Any device udids returned were unknown and not submitted.\n",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"udids\": [\n    \"6E47EF55-5318-494F-A09E-70F613E0AFD1\",\n    \"6E47EF55-5318-494F-A09E-70F613E0AFD1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/mdm/renew-profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mdm",
												"renew-profile"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"udidsNotProcessed\": {\n    \"udids\": [\n      \"6E47EF55-5318-494F-A09E-70F613E0AFD1\",\n      \"6E47EF55-5318-494F-A09E-70F613E0AFD1\"\n    ]\n  }\n}"
								},
								{
									"name": "Insufficient privileges to perform this action or Renew MDM Profile is not enabled.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"udids\": [\n    \"6E47EF55-5318-494F-A09E-70F613E0AFD1\",\n    \"6E47EF55-5318-494F-A09E-70F613E0AFD1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/mdm/renew-profile",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mdm",
												"renew-profile"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "mobile-device-prestages",
					"item": [
						{
							"name": "sync",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get all prestage sync states for a single prestage\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/sync/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														"sync",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Get all prestage sync states for a single prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/sync/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																"sync",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"syncState\": \"CONNECTION_ERROR\",\n    \"prestageId\": 1,\n    \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n  },\n  {\n    \"syncState\": \"CONNECTION_ERROR\",\n    \"prestageId\": 1,\n    \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n  }\n]"
												}
											]
										},
										{
											"name": "Get the latest Sync State for a single Prestage\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/sync/:id/latest",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														"sync",
														":id",
														"latest"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Get the latest sync state for a single prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/sync/:id/latest",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																"sync",
																":id",
																"latest"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"syncState\": \"CONNECTION_ERROR\",\n  \"prestageId\": 1,\n  \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get all Prestage sync States for all prestages\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mobile-device-prestages/sync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mobile-device-prestages",
												"sync"
											]
										},
										"description": "Get all prestage sync states for all prestages"
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/sync",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														"sync"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"syncState\": \"CONNECTION_ERROR\",\n    \"prestageId\": 1,\n    \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n  },\n  {\n    \"syncState\": \"CONNECTION_ERROR\",\n    \"prestageId\": 1,\n    \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n  }\n]"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "attachments",
									"item": [
										{
											"name": "Get attachments for a Mobile Device Prestage\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Get attachments for a Mobile Device Prestage"
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": 1,\n    \"name\": \"receipt.pdf\"\n  },\n  {\n    \"id\": 1,\n    \"name\": \"receipt.pdf\"\n  }\n]"
												},
												{
													"name": "Mobile Device Prestage with that id does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add an attachment to a Mobile Device Prestage\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"description": "(Required) The file to upload",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Identifier of the Mobile Device Prestage the attachment should be assigned to"
														}
													]
												},
												"description": "Add an attachment to a Mobile Device prestage"
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"description": "(Required) The file to upload",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Identifier of the Mobile Device Prestage the attachment should be assigned to"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": 1,\n  \"name\": \"receipt.pdf\",\n  \"fileType\": \"pdf\"\n}"
												},
												{
													"name": "Mobile Device Prestage with that id does not exist",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"description": "(Required) The file to upload",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Identifier of the Mobile Device Prestage the attachment should be assigned to"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Payload Too Large",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"description": "(Required) The file to upload",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Identifier of the Mobile Device Prestage the attachment should be assigned to"
																}
															]
														}
													},
													"status": "Request Entity Too Large",
													"code": 413,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Remove an attachment for a Mobile Device Prestage\n",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    1,\n    3\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Remove an attachment for a Mobile Device Prestage"
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ids\": [\n    1,\n    3\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "history",
									"item": [
										{
											"name": "Get sorted and paged Mobile Device Prestage history objects\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "100"
														},
														{
															"key": "pagesize",
															"value": "100"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc",
															"description": "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Gets sorted and paged mobile device prestage history objects"
											},
											"response": [
												{
													"name": "Details of mobile device prestage history were found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "size",
																	"value": "100"
																},
																{
																	"key": "pagesize",
																	"value": "100"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add Mobile Device Prestage history object notes\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Adds mobile device prestage history object notes"
											},
											"response": [
												{
													"name": "Notes of mobile deivce prestage history were added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
												},
												{
													"name": "Mobile device prestage history can not be saved",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "scope",
									"item": [
										{
											"name": "Get Device Scope for a specific Mobile Device Prestage\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Get device scope for a specific mobile device prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": 1,\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "Mobile Device Prestage with that id does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Replace Device Scope for a specific Mobile Device Prestage\n",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Replace device scope for a specific mobile device prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": 1,\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "One or more serial numbers are not valid",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Mobile Device Prestage with that id does not exist",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add Device Scope for a specific Mobile Device Prestage\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Add device scope for a specific mobile device prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": 1,\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "One or more serial numbers are not valid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Mobile Device Prestage with that id does not exist",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Remove Device Scope for a specific Mobile Device Prestage\n",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Remove device scope for a specific mobile device prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": 1,\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentEpoch\": 123456789,\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "One or more serial numbers are not valid",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Mobile Device Prestage with that id does not exist",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "44454440",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve a Mobile Device Prestage with the supplied id\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mobile-device-prestages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Mobile Device Prestage identifier"
												}
											]
										},
										"description": "Retrieves a Mobile Device Prestage with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isAllowPairing\": true,\n  \"isAutoAdvanceSetup\": true,\n  \"isConfigureDeviceBeforeSetupAssistant\": true,\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMultiUser\": true,\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isSupervised\": true,\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": \"en\",\n  \"region\": \"US\",\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": 1,\n  \"profileUUID\": \"29d-a8d8f-b8sdjndf-dsa9\",\n  \"siteId\": 5,\n  \"versionLock\": 0\n}"
										},
										{
											"name": "Mobile Device Prestage with that id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update a Mobile Device Prestage\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isAllowPairing\": true,\n  \"isAutoAdvanceSetup\": true,\n  \"isConfigureDeviceBeforeSetupAssistant\": true,\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMultiUser\": true,\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isSupervised\": true,\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": \"en\",\n  \"region\": \"US\",\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"versionLock\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mobile-device-prestages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Mobile Device Prestage identifier"
												}
											]
										},
										"description": "Updates a Mobile Device Prestage"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isAllowPairing\": true,\n  \"isAutoAdvanceSetup\": true,\n  \"isConfigureDeviceBeforeSetupAssistant\": true,\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMultiUser\": true,\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isSupervised\": true,\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": \"en\",\n  \"region\": \"US\",\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isAllowPairing\": true,\n  \"isAutoAdvanceSetup\": true,\n  \"isConfigureDeviceBeforeSetupAssistant\": true,\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMultiUser\": true,\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isSupervised\": true,\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": \"en\",\n  \"region\": \"US\",\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": 1,\n  \"profileUUID\": \"29d-a8d8f-b8sdjndf-dsa9\",\n  \"siteId\": 5,\n  \"versionLock\": 0\n}"
										},
										{
											"name": "Mobile Device Prestage with that id does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isAllowPairing\": true,\n  \"isAutoAdvanceSetup\": true,\n  \"isConfigureDeviceBeforeSetupAssistant\": true,\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMultiUser\": true,\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isSupervised\": true,\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": \"en\",\n  \"region\": \"US\",\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "The Mobile Device Prestage was modified by another process. Read the Mobile Device Prestage again for updated changes.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isAllowPairing\": true,\n  \"isAutoAdvanceSetup\": true,\n  \"isConfigureDeviceBeforeSetupAssistant\": true,\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMultiUser\": true,\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isSupervised\": true,\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": \"en\",\n  \"region\": \"US\",\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a Mobile Device Prestage with the supplied id\n",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mobile-device-prestages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Mobile Device Prestage identifier"
												}
											]
										},
										"description": "Deletes a Mobile Device Prestage with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-device-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-device-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Search for sorted and paged Mobile Device Prestages\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/mobile-device-prestages?page=0&size=100&pagesize=100&page-size=100&sort=id:asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"mobile-device-prestages"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "100"
										},
										{
											"key": "pagesize",
											"value": "100"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Search for sorted and paged mobile device prestages"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mobile-device-prestages?page=0&size=100&pagesize=100&page-size=100&sort=id:asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mobile-device-prestages"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "100"
												},
												{
													"key": "pagesize",
													"value": "100"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"profileUUID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"siteId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"versionLock\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"profileUUID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"siteId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"versionLock\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create a Mobile Device Prestage\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authenticationPrompt\": \"LDAP authentication prompt\",\n  \"department\": \"Oxbow\",\n  \"deviceEnrollmentProgramInstanceId\": 5,\n  \"displayName\": \"Example Mobile Prestage Name\",\n  \"enrollmentSiteId\": -1,\n  \"isAllowPairing\": true,\n  \"isAutoAdvanceSetup\": true,\n  \"isConfigureDeviceBeforeSetupAssistant\": true,\n  \"isDefaultPrestage\": false,\n  \"isEnableDeviceBasedActivationLock\": true,\n  \"isKeepExistingLocationInformation\": true,\n  \"isKeepExistingSiteMembership\": true,\n  \"isMandatory\": false,\n  \"isMdmRemovable\": true,\n  \"isMultiUser\": true,\n  \"isPreventActivationLock\": true,\n  \"isRequireAuthentication\": true,\n  \"isSupervised\": true,\n  \"locationInformation\": {\n    \"buildingId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"departmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"position\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"realname\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"room\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"username\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"maximumSharedAccounts\": 10,\n  \"purchasingInformation\": {\n    \"appleCareID\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isLeased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPurchased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"leaseDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lifeExpectancy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasePrice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingAccount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingContact\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vendor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"warrantyDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"supportEmailAddress\": \"example@example.com\",\n  \"supportPhoneNumber\": \"5555555555\",\n  \"skipSetupItems\": {\n    \"Location\": true,\n    \"Privacy\": false\n  },\n  \"anchorCertificates\": [\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"\n  ],\n  \"enrollmentCustomizationId\": 2,\n  \"language\": \"en\",\n  \"region\": \"US\",\n  \"names\": {\n    \"assignNamesUsing\": \"List of Names\",\n    \"prestageDeviceNames\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"deviceNamePrefix\": \"prefix\",\n    \"deviceNameSuffix\": \"suffix\",\n    \"singleDeviceName\": \"name\",\n    \"isManageNames\": true,\n    \"isDeviceNamingConfigured\": true\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/mobile-device-prestages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"mobile-device-prestages"
									]
								},
								"description": "Create a mobile device prestage"
							},
							"response": [
								{
									"name": "Mobile Device Prestage was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationPrompt\": \"LDAP authentication prompt\",\n  \"department\": \"Oxbow\",\n  \"deviceEnrollmentProgramInstanceId\": 5,\n  \"displayName\": \"Example Mobile Prestage Name\",\n  \"enrollmentSiteId\": -1,\n  \"isAllowPairing\": true,\n  \"isAutoAdvanceSetup\": true,\n  \"isConfigureDeviceBeforeSetupAssistant\": true,\n  \"isDefaultPrestage\": false,\n  \"isEnableDeviceBasedActivationLock\": true,\n  \"isKeepExistingLocationInformation\": true,\n  \"isKeepExistingSiteMembership\": true,\n  \"isMandatory\": false,\n  \"isMdmRemovable\": true,\n  \"isMultiUser\": true,\n  \"isPreventActivationLock\": true,\n  \"isRequireAuthentication\": true,\n  \"isSupervised\": true,\n  \"locationInformation\": {\n    \"buildingId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"departmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"position\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"realname\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"room\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"username\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"maximumSharedAccounts\": 10,\n  \"purchasingInformation\": {\n    \"appleCareID\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isLeased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"isPurchased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"leaseDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lifeExpectancy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasePrice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingAccount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingContact\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vendor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"warrantyDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"supportEmailAddress\": \"example@example.com\",\n  \"supportPhoneNumber\": \"5555555555\",\n  \"skipSetupItems\": {\n    \"Location\": true,\n    \"Privacy\": false\n  },\n  \"anchorCertificates\": [\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"\n  ],\n  \"enrollmentCustomizationId\": 2,\n  \"language\": \"en\",\n  \"region\": \"US\",\n  \"names\": {\n    \"assignNamesUsing\": \"List of Names\",\n    \"prestageDeviceNames\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"deviceNamePrefix\": \"prefix\",\n    \"deviceNameSuffix\": \"suffix\",\n    \"singleDeviceName\": \"name\",\n    \"isManageNames\": true,\n    \"isDeviceNamingConfigured\": true\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/mobile-device-prestages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mobile-device-prestages"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isAllowPairing\": true,\n  \"isAutoAdvanceSetup\": true,\n  \"isConfigureDeviceBeforeSetupAssistant\": true,\n  \"isDefaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isEnableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isKeepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isMultiUser\": true,\n  \"isPreventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isRequireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"isSupervised\": true,\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": \"en\",\n  \"region\": \"US\",\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"id\": 1,\n  \"profileUUID\": \"29d-a8d8f-b8sdjndf-dsa9\",\n  \"siteId\": 5,\n  \"versionLock\": 0\n}"
								}
							]
						},
						{
							"name": "Get all Device Scope for all Mobile Device Prestages\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/mobile-device-prestages/scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"mobile-device-prestages",
										"scope"
									]
								},
								"description": "Get all device scope for all mobile device prestages"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mobile-device-prestages/scope",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mobile-device-prestages",
												"scope"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"serialsByPrestageId\": {\n    \"ABCD\": 1,\n    \"XYZ\": 12\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "mobile-devices",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Mobile Device\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mobile-devices/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mobile-devices",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) instance id of mobile device record"
												}
											]
										},
										"description": "Get MobileDevice"
									},
									"response": [
										{
											"name": "Succesful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-devices/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-devices",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) instance id of mobile device record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"name\": \"iPad\",\n  \"serialNumber\": \"DMQVGC0DHLA0\",\n  \"wifiMacAddress\": \"C4:84:66:92:78:00\",\n  \"udid\": \"0dad565fb40b010a9e490440188063a378721069\",\n  \"phoneNumber\": \"651-555-5555 Ext111\",\n  \"model\": \"iPad 5th Generation (Wi-Fi)\",\n  \"modelIdentifier\": \"iPad6,11\",\n  \"username\": \"admin\",\n  \"type\": \"ios\",\n  \"softwareUpdateDeviceId\": \"J132AP\"\n}"
										}
									]
								},
								{
									"name": "Update fields on a mobile device that are allowed to be modified by users\n",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Jan's Mobile Device\",\n  \"assetTag\": \"8675309\",\n  \"siteId\": 1,\n  \"location\": {\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"emailAddress\": \"ITBob@jamf.com\",\n    \"position\": \"IT Team Lead\",\n    \"phoneNumber\": \"555-555-5555\",\n    \"department\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"building\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"room\": \"4th Floor - Quad 3\"\n  },\n  \"updatedExtensionAttributes\": [\n    {\n      \"id\": 1,\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"isExtensionAttributeCollectionAllowed\": false\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"isExtensionAttributeCollectionAllowed\": false\n    }\n  ],\n  \"ios\": {\n    \"purchasing\": {\n      \"isPurchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isLeased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"appleTv\": {\n    \"airplayPassword\": \"12345\",\n    \"purchasing\": {\n      \"isPurchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isLeased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/mobile-devices/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mobile-devices",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) instance id of mobile device record"
												}
											]
										},
										"description": "Updates fields on a mobile device that are allowed to be modified by users."
									},
									"response": [
										{
											"name": "Succesful response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Jan's Mobile Device\",\n  \"assetTag\": \"8675309\",\n  \"siteId\": 1,\n  \"location\": {\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"emailAddress\": \"ITBob@jamf.com\",\n    \"position\": \"IT Team Lead\",\n    \"phoneNumber\": \"555-555-5555\",\n    \"department\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"building\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"room\": \"4th Floor - Quad 3\"\n  },\n  \"updatedExtensionAttributes\": [\n    {\n      \"id\": 1,\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"isExtensionAttributeCollectionAllowed\": false\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"isExtensionAttributeCollectionAllowed\": false\n    }\n  ],\n  \"ios\": {\n    \"purchasing\": {\n      \"isPurchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isLeased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"appleTv\": {\n    \"airplayPassword\": \"12345\",\n    \"purchasing\": {\n      \"isPurchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isLeased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-devices/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-devices",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) instance id of mobile device record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"name\": \"Jon's iPad\",\n  \"assetTag\": \"12345\",\n  \"lastInventoryUpdateTimestamp\": \"2018-10-15T16:39:56.307Z\",\n  \"osVersion\": \"11.4\",\n  \"osBuild\": \"15F79\",\n  \"softwareUpdateDeviceId\": \"J132AP\",\n  \"serialNumber\": \"DMQVGC0DHLF0\",\n  \"udid\": \"0dad565fb40b010a9e490440188063a378721069\",\n  \"ipAddress\": \"10.0.0.1\",\n  \"wifiMacAddress\": \"ee:00:7c:f0:e5:ff\",\n  \"bluetoothMacAddress\": \"ee:00:7c:f0:e5:aa\",\n  \"isManaged\": true,\n  \"initialEntryTimestamp\": \"2018-10-15T16:39:56.307Z\",\n  \"lastEnrollmentTimestamp\": \"2018-10-15T16:39:56.307Z\",\n  \"deviceOwnershipLevel\": \"institutional\",\n  \"site\": {\n    \"id\": 1,\n    \"name\": \"A name\"\n  },\n  \"extensionAttributes\": [\n    {\n      \"id\": 1,\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"isExtensionAttributeCollectionAllowed\": false\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"isExtensionAttributeCollectionAllowed\": false\n    }\n  ],\n  \"location\": {\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"emailAddress\": \"ITBob@jamf.com\",\n    \"position\": \"IT Team Lead\",\n    \"phoneNumber\": \"555-555-5555\",\n    \"department\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"building\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"room\": \"4th Floor - Quad 3\"\n  },\n  \"type\": \"ios\",\n  \"ios\": {\n    \"model\": \"iPad 5th Generation (Wi-Fi)\",\n    \"modelIdentifier\": \"ipad6,11\",\n    \"modelNumber\": \"MP2F2LL\",\n    \"isSupervised\": true,\n    \"batteryLevel\": 100,\n    \"lastBackupTimestamp\": \"2018-10-15T16:39:56.307Z\",\n    \"capacityMb\": 27503,\n    \"availableMb\": 26646,\n    \"percentageUsed\": 3,\n    \"isShared\": false,\n    \"isDeviceLocatorServiceEnabled\": false,\n    \"isDoNotDisturbEnabled\": false,\n    \"isCloudBackupEnabled\": false,\n    \"lastCloudBackupTimestamp\": \"2018-10-15T16:39:56.307Z\",\n    \"isLocationServicesEnabled\": false,\n    \"isITunesStoreAccountActive\": false,\n    \"isBleCapable\": false,\n    \"computer\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"purchasing\": {\n      \"isPurchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isLeased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"security\": {\n      \"isDataProtected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isBlockLevelEncryptionCapable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isFileLevelEncryptionCapable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPasscodePresent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPasscodeCompliant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPasscodeCompliantWithProfile\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hardwareEncryption\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isActivationLockEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isJailBreakDetected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"network\": {\n      \"cellularTechnology\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isVoiceRoamingEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imei\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iccid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"carrierSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentCarrierNetwork\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentMobileCountryCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentMobileNetworkCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"homeCarrierNetwork\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"homeMobileCountryCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"homeMobileNetworkCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDataRoamingEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isRoaming\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPersonalHotspotEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phoneNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"applications\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"certificates\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ebooks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configurationProfiles\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"provisioningProfiles\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"attachments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"appleTv\": {\n    \"model\": \"Apple TV 3rd Generation Rev 2\",\n    \"modelIdentifier\": \"AppleTV3,2\",\n    \"modelNumber\": \"MD199LL\",\n    \"isSupervised\": true,\n    \"airplayPassword\": \"1234\",\n    \"deviceId\": \"1\",\n    \"locales\": \"null\",\n    \"purchasing\": {\n      \"isPurchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isLeased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"configurationProfiles\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"android\": {\n    \"osName\": \"Black Licorice\",\n    \"manufacturer\": \"Google\",\n    \"model\": \"Pixel 2\",\n    \"internalCapacityMb\": 30000,\n    \"internalAvailableMb\": 20000,\n    \"internalPercentUsed\": 67,\n    \"externalCapacityMb\": 20000,\n    \"externalAvailableMb\": 10000,\n    \"externalPercentUsed\": 50,\n    \"batteryLevel\": 100,\n    \"lastBackupTimestamp\": \"2018-10-15T16:39:56.307Z\",\n    \"apiVersion\": 1,\n    \"computer\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"security\": {\n      \"isDataProtected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isBlockLevelEncryptionCapable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isFileLevelEncryptionCapable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPasscodePresent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPasscodeCompliant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPasscodeCompliantWithProfile\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hardwareEncryption\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isActivationLockEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isJailBreakDetected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
										}
									]
								},
								{
									"name": "Get Mobile Device\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mobile-devices/:id/detail",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mobile-devices",
												":id",
												"detail"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) instance id of mobile device record"
												}
											]
										},
										"description": "Get MobileDevice"
									},
									"response": [
										{
											"name": "Succesful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-devices/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-devices",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) instance id of mobile device record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"name\": \"Jon's iPad\",\n  \"assetTag\": \"12345\",\n  \"lastInventoryUpdateTimestamp\": \"2018-10-15T16:39:56.307Z\",\n  \"osVersion\": \"11.4\",\n  \"osBuild\": \"15F79\",\n  \"softwareUpdateDeviceId\": \"J132AP\",\n  \"serialNumber\": \"DMQVGC0DHLF0\",\n  \"udid\": \"0dad565fb40b010a9e490440188063a378721069\",\n  \"ipAddress\": \"10.0.0.1\",\n  \"wifiMacAddress\": \"ee:00:7c:f0:e5:ff\",\n  \"bluetoothMacAddress\": \"ee:00:7c:f0:e5:aa\",\n  \"isManaged\": true,\n  \"initialEntryTimestamp\": \"2018-10-15T16:39:56.307Z\",\n  \"lastEnrollmentTimestamp\": \"2018-10-15T16:39:56.307Z\",\n  \"deviceOwnershipLevel\": \"institutional\",\n  \"site\": {\n    \"id\": 1,\n    \"name\": \"A name\"\n  },\n  \"extensionAttributes\": [\n    {\n      \"id\": 1,\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"isExtensionAttributeCollectionAllowed\": false\n    },\n    {\n      \"id\": 1,\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"isExtensionAttributeCollectionAllowed\": false\n    }\n  ],\n  \"location\": {\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"emailAddress\": \"ITBob@jamf.com\",\n    \"position\": \"IT Team Lead\",\n    \"phoneNumber\": \"555-555-5555\",\n    \"department\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"building\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"room\": \"4th Floor - Quad 3\"\n  },\n  \"type\": \"ios\",\n  \"ios\": {\n    \"model\": \"iPad 5th Generation (Wi-Fi)\",\n    \"modelIdentifier\": \"ipad6,11\",\n    \"modelNumber\": \"MP2F2LL\",\n    \"isSupervised\": true,\n    \"batteryLevel\": 100,\n    \"lastBackupTimestamp\": \"2018-10-15T16:39:56.307Z\",\n    \"capacityMb\": 27503,\n    \"availableMb\": 26646,\n    \"percentageUsed\": 3,\n    \"isShared\": false,\n    \"isDeviceLocatorServiceEnabled\": false,\n    \"isDoNotDisturbEnabled\": false,\n    \"isCloudBackupEnabled\": false,\n    \"lastCloudBackupTimestamp\": \"2018-10-15T16:39:56.307Z\",\n    \"isLocationServicesEnabled\": false,\n    \"isITunesStoreAccountActive\": false,\n    \"isBleCapable\": false,\n    \"computer\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"purchasing\": {\n      \"isPurchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isLeased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"security\": {\n      \"isDataProtected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isBlockLevelEncryptionCapable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isFileLevelEncryptionCapable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPasscodePresent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPasscodeCompliant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPasscodeCompliantWithProfile\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hardwareEncryption\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isActivationLockEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isJailBreakDetected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"network\": {\n      \"cellularTechnology\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isVoiceRoamingEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imei\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iccid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"carrierSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentCarrierNetwork\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentMobileCountryCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentMobileNetworkCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"homeCarrierNetwork\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"homeMobileCountryCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"homeMobileNetworkCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isDataRoamingEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isRoaming\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPersonalHotspotEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phoneNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"applications\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"certificates\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ebooks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configurationProfiles\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"provisioningProfiles\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"attachments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"appleTv\": {\n    \"model\": \"Apple TV 3rd Generation Rev 2\",\n    \"modelIdentifier\": \"AppleTV3,2\",\n    \"modelNumber\": \"MD199LL\",\n    \"isSupervised\": true,\n    \"airplayPassword\": \"1234\",\n    \"deviceId\": \"1\",\n    \"locales\": \"null\",\n    \"purchasing\": {\n      \"isPurchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isLeased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"configurationProfiles\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"android\": {\n    \"osName\": \"Black Licorice\",\n    \"manufacturer\": \"Google\",\n    \"model\": \"Pixel 2\",\n    \"internalCapacityMb\": 30000,\n    \"internalAvailableMb\": 20000,\n    \"internalPercentUsed\": 67,\n    \"externalCapacityMb\": 20000,\n    \"externalAvailableMb\": 10000,\n    \"externalPercentUsed\": 50,\n    \"batteryLevel\": 100,\n    \"lastBackupTimestamp\": \"2018-10-15T16:39:56.307Z\",\n    \"apiVersion\": 1,\n    \"computer\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"security\": {\n      \"isDataProtected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isBlockLevelEncryptionCapable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isFileLevelEncryptionCapable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPasscodePresent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPasscodeCompliant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isPasscodeCompliantWithProfile\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hardwareEncryption\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isActivationLockEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"isJailBreakDetected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
										}
									]
								},
								{
									"name": "Recalculate all smart groups for the given device id and then return count of smart groups that device fall into\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mobile-devices/:id/recalculate-smart-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mobile-devices",
												":id",
												"recalculate-smart-groups"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) id of mobile device"
												}
											]
										},
										"description": "Recalculates all smart groups for the given device id and then\nreturns the count of smart groups the device falls into\n"
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-devices/:id/recalculate-smart-groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-devices",
														":id",
														"recalculate-smart-groups"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) id of mobile device"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"count\": 3\n}"
										},
										{
											"name": "smart group not found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/mobile-devices/:id/recalculate-smart-groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"mobile-devices",
														":id",
														"recalculate-smart-groups"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) id of mobile device"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Mobile Device objects\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/mobile-devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"mobile-devices"
									]
								},
								"description": "Gets Mobile Device objects.\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/mobile-devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"mobile-devices"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": 1,\n    \"name\": \"iPad\",\n    \"serialNumber\": \"DMQVGC0DHLA0\",\n    \"wifiMacAddress\": \"C4:84:66:92:78:00\",\n    \"udid\": \"0dad565fb40b010a9e490440188063a378721069\",\n    \"phoneNumber\": \"651-555-5555 Ext111\",\n    \"model\": \"iPad 5th Generation (Wi-Fi)\",\n    \"modelIdentifier\": \"iPad6,11\",\n    \"username\": \"admin\",\n    \"type\": \"ios\",\n    \"softwareUpdateDeviceId\": \"J132AP\"\n  },\n  {\n    \"id\": 1,\n    \"name\": \"iPad\",\n    \"serialNumber\": \"DMQVGC0DHLA0\",\n    \"wifiMacAddress\": \"C4:84:66:92:78:00\",\n    \"udid\": \"0dad565fb40b010a9e490440188063a378721069\",\n    \"phoneNumber\": \"651-555-5555 Ext111\",\n    \"model\": \"iPad 5th Generation (Wi-Fi)\",\n    \"modelIdentifier\": \"iPad6,11\",\n    \"username\": \"admin\",\n    \"type\": \"ios\",\n    \"softwareUpdateDeviceId\": \"J132AP\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "notifications",
					"item": [
						{
							"name": "Get Notifications for user and site\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"notifications"
									]
								},
								"description": "Gets notifications for user and site\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/notifications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"notifications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"type\": \"<string>\",\n    \"id\": \"1\",\n    \"params\": {}\n  },\n  {\n    \"type\": \"<string>\",\n    \"id\": \"1\",\n    \"params\": {}\n  }\n]"
								}
							]
						},
						{
							"name": "Delete Notifications\n",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/notifications/:type/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"notifications",
										":type",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "in aute",
											"description": "(Required) instance ID of the notification"
										},
										{
											"key": "type",
											"value": "<string>",
											"description": "(Required) type of the notification"
										}
									]
								},
								"description": "Deletes notifications with given type and id.\n"
							},
							"response": [
								{
									"name": "Sucessful deletion",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/notifications/:type/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"notifications",
												":type",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance ID of the notification"
												},
												{
													"key": "type",
													"value": "<string>",
													"description": "(Required) type of the notification"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "parent-app",
					"item": [
						{
							"name": "history",
							"item": [
								{
									"name": "Get Jamf Parent app settings history\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/parent-app/history?page=0&page-size=100&filter=&sort=date:desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"parent-app",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												},
												{
													"key": "sort",
													"value": "date:desc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
												}
											]
										},
										"description": "Gets Jamf Parent app settings history\n"
									},
									"response": [
										{
											"name": "Details of Jamf Parent app settings history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/parent-app/history?page=0&page-size=100&filter=&sort=date:desc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"parent-app",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "filter",
															"value": ""
														},
														{
															"key": "sort",
															"value": "date:desc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add Jamf Parent app settings history notes\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/parent-app/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"parent-app",
												"history"
											]
										},
										"description": "Adds Jamf Parent app settings history notes\n"
									},
									"response": [
										{
											"name": "Notes to Jamf Parent app settings history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/parent-app/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"parent-app",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
										},
										{
											"name": "Jamf Parent app history can not be saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/parent-app/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"parent-app",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get the current Jamf Parent app settings\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/parent-app",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"parent-app"
									]
								},
								"description": "Get the current Jamf Parent app settings\n"
							},
							"response": [
								{
									"name": "Details of the current Jamf Parent app settings.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/parent-app",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"parent-app"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"deviceGroupId\": 1,\n  \"isEnabled\": true,\n  \"restrictedTimes\": {\n    \"SUNDAY\": {\n      \"beginTime\": \"08:30:00\",\n      \"endTime\": \"15:45:00\"\n    }\n  },\n  \"timezoneId\": \"Europe/Paris\",\n  \"allowTemplates\": true,\n  \"disassociateOnWipeAndReEnroll\": true,\n  \"allowClearPasscode\": true,\n  \"safelistedApps\": [\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    },\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update Jamf Parent app settings\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"deviceGroupId\": 1,\n  \"isEnabled\": true,\n  \"restrictedTimes\": {\n    \"SUNDAY\": {\n      \"beginTime\": \"08:30:00\",\n      \"endTime\": \"15:45:00\"\n    }\n  },\n  \"timezoneId\": \"Europe/Paris\",\n  \"allowTemplates\": true,\n  \"disassociateOnWipeAndReEnroll\": true,\n  \"allowClearPasscode\": true,\n  \"safelistedApps\": [\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    },\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/parent-app",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"parent-app"
									]
								},
								"description": "Update Jamf Parent app settings\n"
							},
							"response": [
								{
									"name": "Jamf Parent app settings updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceGroupId\": 1,\n  \"isEnabled\": true,\n  \"restrictedTimes\": {\n    \"SUNDAY\": {\n      \"beginTime\": \"08:30:00\",\n      \"endTime\": \"15:45:00\"\n    }\n  },\n  \"timezoneId\": \"Europe/Paris\",\n  \"allowTemplates\": true,\n  \"disassociateOnWipeAndReEnroll\": true,\n  \"allowClearPasscode\": true,\n  \"safelistedApps\": [\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    },\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/parent-app",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"parent-app"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"deviceGroupId\": 1,\n  \"isEnabled\": true,\n  \"restrictedTimes\": {\n    \"SUNDAY\": {\n      \"beginTime\": \"08:30:00\",\n      \"endTime\": \"15:45:00\"\n    }\n  },\n  \"timezoneId\": \"Europe/Paris\",\n  \"allowTemplates\": true,\n  \"disassociateOnWipeAndReEnroll\": true,\n  \"allowClearPasscode\": true,\n  \"safelistedApps\": [\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    },\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    }\n  ]\n}"
								},
								{
									"name": "Bad Request, could not parse input.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceGroupId\": 1,\n  \"isEnabled\": true,\n  \"restrictedTimes\": {\n    \"SUNDAY\": {\n      \"beginTime\": \"08:30:00\",\n      \"endTime\": \"15:45:00\"\n    }\n  },\n  \"timezoneId\": \"Europe/Paris\",\n  \"allowTemplates\": true,\n  \"disassociateOnWipeAndReEnroll\": true,\n  \"allowClearPasscode\": true,\n  \"safelistedApps\": [\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    },\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/parent-app",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"parent-app"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "pki",
					"item": [
						{
							"name": "certificate-authority",
							"item": [
								{
									"name": "active",
									"item": [
										{
											"name": "Returns X.509 details of the active Certificate Authority (CA)",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/pki/certificate-authority/active",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"certificate-authority",
														"active"
													]
												},
												"description": "Returns X.509 details of the active Certificate Authority (CA)"
											},
											"response": [
												{
													"name": "Successful response displays the details of the active Certificate Authority (CA)",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/certificate-authority/active",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"certificate-authority",
																"active"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"subjectX500Principal\": \"CN=Jamf JSS Built-in Certificate Authority\",\n  \"issuerX500Principal\": \"CN=Jamf JSS Built-in Certificate Authority\",\n  \"serialNumber\": \"00bc43bea0\",\n  \"version\": 3,\n  \"notAfter\": 1927739379,\n  \"notBefore\": 1612120179,\n  \"signature\": {\n    \"algorithm\": \"SHA256withRSA\",\n    \"algorithmOid\": \"1.2.840.113549.1.1.11\",\n    \"value\": \"6874f9b8c60a46c25b6b270c14b9a2949c87b25524868394309b20349f95edd624588ada274e5678a921199d26d0fe5b231fc794eb6e020b7a6c4790cf91ec5d9a5bd4da126f141a657cf4af78df6303327964c57721d82b85af1d46379ac7ec45a24ae3418576688f05fd075a1c9c3d137d0fd8831f4c88ce7698af9c747db983a40fb0480ebfb293bf4889e34a949d4a53251b1abef19d895bcea8e0ce590b22244ad1623624319e6a8b7e7d11aea3d94b77be1a94d28fda58e8df2e398c45e2e9c13473dcc81db01acac8f2c6d21cb5c44371c9ebfba632dcb46838a91808d4e82a35500f370dc71f4156528fbce93137c94eb33d83d41d49483d4dcca5e1\"\n  },\n  \"keyUsage\": [\n    \"digitalSignature\",\n    \"keyEncipherment\",\n    \"keyCertSign\",\n    \"cRLSign\"\n  ],\n  \"keyUsageExtended\": [\n    \"1.3.6.1.5.5.7.3.1\"\n  ],\n  \"sha1Fingerprint\": \"448a7cc4d899d6a1821258133c24c023a5f558d9\",\n  \"sha256Fingerprint\": \"660958e14891c67491822687d9ac0e3574562664458111ad875b680995ca472b\"\n}"
												}
											]
										},
										{
											"name": "Returns X.509 of active Certificate Authority (CA) in DER format",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/pkix-cert"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/pki/certificate-authority/active/der",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"certificate-authority",
														"active",
														"der"
													]
												},
												"description": "Returns X.509 of active Certificate Authority (CA) in DER format"
											},
											"response": [
												{
													"name": "Successful response returns certificate in DER format",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/certificate-authority/active/der",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"certificate-authority",
																"active",
																"der"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/pkix-cert"
														}
													],
													"cookie": [],
													"body": "in aute"
												}
											]
										},
										{
											"name": "Returns active Certificate Authority (CA) in PEM format",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/pem-certificate-chain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/pki/certificate-authority/active/pem",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"certificate-authority",
														"active",
														"pem"
													]
												},
												"description": "Returns active Certificate Authority (CA) in PEM format"
											},
											"response": [
												{
													"name": "Successful response returns certificate in PEM format.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/certificate-authority/active/pem",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"certificate-authority",
																"active",
																"pem"
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/pem-certificate-chain"
														}
													],
													"cookie": [],
													"body": "in aute"
												}
											]
										}
									]
								},
								{
									"name": "{id}",
									"item": [
										{
											"name": "Returns X.509 details of Certificate Authority (CA) with provided ID",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/pki/certificate-authority/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"certificate-authority",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) UUID of the Certificate Authority (CA)"
														}
													]
												},
												"description": "Returns X.509 details of Certificate Authority (CA) with provided ID"
											},
											"response": [
												{
													"name": "Successful response displays the details of the Certificate Authority (CA) with provided ID",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/certificate-authority/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"certificate-authority",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) UUID of the Certificate Authority (CA)"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"subjectX500Principal\": \"CN=Jamf JSS Built-in Certificate Authority\",\n  \"issuerX500Principal\": \"CN=Jamf JSS Built-in Certificate Authority\",\n  \"serialNumber\": \"00bc43bea0\",\n  \"version\": 3,\n  \"notAfter\": 1927739379,\n  \"notBefore\": 1612120179,\n  \"signature\": {\n    \"algorithm\": \"SHA256withRSA\",\n    \"algorithmOid\": \"1.2.840.113549.1.1.11\",\n    \"value\": \"6874f9b8c60a46c25b6b270c14b9a2949c87b25524868394309b20349f95edd624588ada274e5678a921199d26d0fe5b231fc794eb6e020b7a6c4790cf91ec5d9a5bd4da126f141a657cf4af78df6303327964c57721d82b85af1d46379ac7ec45a24ae3418576688f05fd075a1c9c3d137d0fd8831f4c88ce7698af9c747db983a40fb0480ebfb293bf4889e34a949d4a53251b1abef19d895bcea8e0ce590b22244ad1623624319e6a8b7e7d11aea3d94b77be1a94d28fda58e8df2e398c45e2e9c13473dcc81db01acac8f2c6d21cb5c44371c9ebfba632dcb46838a91808d4e82a35500f370dc71f4156528fbce93137c94eb33d83d41d49483d4dcca5e1\"\n  },\n  \"keyUsage\": [\n    \"digitalSignature\",\n    \"keyEncipherment\",\n    \"keyCertSign\",\n    \"cRLSign\"\n  ],\n  \"keyUsageExtended\": [\n    \"1.3.6.1.5.5.7.3.1\"\n  ],\n  \"sha1Fingerprint\": \"448a7cc4d899d6a1821258133c24c023a5f558d9\",\n  \"sha256Fingerprint\": \"660958e14891c67491822687d9ac0e3574562664458111ad875b680995ca472b\"\n}"
												},
												{
													"name": "Invalid ID parameter",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/certificate-authority/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"certificate-authority",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) UUID of the Certificate Authority (CA)"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Certificate with that ID does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/certificate-authority/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"certificate-authority",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) UUID of the Certificate Authority (CA)"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Returns X.509 current Certificate Authority (CA) with provided ID in DER format",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/pkix-cert"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/pki/certificate-authority/:id/der",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"certificate-authority",
														":id",
														"der"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) UUID of the Certificate Authority (CA)"
														}
													]
												},
												"description": "Returns X.509 current Certificate Authority (CA) with provided ID in DER format"
											},
											"response": [
												{
													"name": "Successful response returns certificate in DER format",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/certificate-authority/:id/der",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"certificate-authority",
																":id",
																"der"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) UUID of the Certificate Authority (CA)"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/pkix-cert"
														}
													],
													"cookie": [],
													"body": "in aute"
												},
												{
													"name": "Invalid ID parameter",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/certificate-authority/:id/der",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"certificate-authority",
																":id",
																"der"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) UUID of the Certificate Authority (CA)"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Certificate with that ID does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/certificate-authority/:id/der",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"certificate-authority",
																":id",
																"der"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) UUID of the Certificate Authority (CA)"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Returns current Certificate Authority (CA) with provided ID in PEM format",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/pem-certificate-chain"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/pki/certificate-authority/:id/pem",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"certificate-authority",
														":id",
														"pem"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) UUID of the Certificate Authority (CA)"
														}
													]
												},
												"description": "Returns current Certificate Authority (CA) with provided ID in PEM format"
											},
											"response": [
												{
													"name": "Successful response returns certificate in PEM format",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/certificate-authority/:id/pem",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"certificate-authority",
																":id",
																"pem"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) UUID of the Certificate Authority (CA)"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/pem-certificate-chain"
														}
													],
													"cookie": [],
													"body": "in aute"
												},
												{
													"name": "Invalid ID parameter",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/certificate-authority/:id/pem",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"certificate-authority",
																":id",
																"pem"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) UUID of the Certificate Authority (CA)"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Certificate with that ID does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/certificate-authority/:id/pem",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"certificate-authority",
																":id",
																"pem"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) UUID of the Certificate Authority (CA)"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "venafi",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "history",
											"item": [
												{
													"name": "Get specified Venafi CA history object\n",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id/history?page=0&page-size=100&sort=date:desc&filter=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc",
																	"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
																},
																{
																	"key": "filter",
																	"value": "",
																	"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														},
														"description": "Get specified Venafi CA history object\n"
													},
													"response": [
														{
															"name": "Details of Venafi CA history was found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/history?page=0&page-size=100&sort=date:desc&filter=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"history"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "0"
																		},
																		{
																			"key": "page-size",
																			"value": "100"
																		},
																		{
																			"key": "sort",
																			"value": "date:desc"
																		},
																		{
																			"key": "filter",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
														},
														{
															"name": "Specified Venafi CA object does not exist",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/history?page=0&page-size=100&sort=date:desc&filter=",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"history"
																	],
																	"query": [
																		{
																			"key": "page",
																			"value": "0"
																		},
																		{
																			"key": "page-size",
																			"value": "100"
																		},
																		{
																			"key": "sort",
																			"value": "date:desc"
																		},
																		{
																			"key": "filter",
																			"value": ""
																		}
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Add specified Venafi CA Object Note\n",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of department history record"
																}
															]
														},
														"description": "Adds specified Venafi CA Object Note\n"
													},
													"response": [
														{
															"name": "Notes of Venafi CA history were added",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/history",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"history"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) instance id of department history record"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
														},
														{
															"name": "Specified Venafi CA object does not exist",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/history",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"history"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) instance id of department history record"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														},
														{
															"name": "Venafi CA history can not be saved",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/history",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"history"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) instance id of department history record"
																		}
																	]
																}
															},
															"status": "Service Unavailable",
															"code": 503,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "jamf-public-key",
											"item": [
												{
													"name": "Downloads a certificate used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/pem-certificate-chain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id/jamf-public-key",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id",
																"jamf-public-key"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														},
														"description": "Downloads a certificate for an existing Venafi configuration that can be used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n"
													},
													"response": [
														{
															"name": "Successful response downloads the certificate",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/jamf-public-key",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"jamf-public-key"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/pem-certificate-chain"
																}
															],
															"cookie": [],
															"body": "in aute"
														},
														{
															"name": "Keystore not found for Certificate Authority",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/jamf-public-key",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"jamf-public-key"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														},
														{
															"name": "Certificate not found for Id",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/jamf-public-key",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"jamf-public-key"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Regenerates a certificate used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id/jamf-public-key/regenerate",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id",
																"jamf-public-key",
																"regenerate"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														},
														"description": "Regenerates a certificate for an existing Venafi configuration that can be used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n"
													},
													"response": [
														{
															"name": "Successful response regenerates the certificate",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/jamf-public-key/regenerate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"jamf-public-key",
																		"regenerate"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Certificate Authority not found for Id",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/jamf-public-key/regenerate",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"jamf-public-key",
																		"regenerate"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "proxy-trust-store",
											"item": [
												{
													"name": "Downloads the PKI Proxy Server public key to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/pem-certificate-chain"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id/proxy-trust-store",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id",
																"proxy-trust-store"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														},
														"description": "Downloads the uploaded PKI Proxy Server public key to do basic TLS certificate validation between Jamf Pro and a Jamf Pro PKI Proxy Server\n"
													},
													"response": [
														{
															"name": "Successful response downloads the certificate",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/proxy-trust-store",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"proxy-trust-store"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/pem-certificate-chain"
																}
															],
															"cookie": [],
															"body": "in aute"
														},
														{
															"name": "Keystore not found for Certificate Authority",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/proxy-trust-store",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"proxy-trust-store"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														},
														{
															"name": "Certificate not found for Certificate Authority",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/proxy-trust-store",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"proxy-trust-store"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Uploads the PKI Proxy Server public key to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/pem-certificate-chain"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "file",
															"file": {}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id/proxy-trust-store",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id",
																"proxy-trust-store"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														},
														"description": "Uploads the PKI Proxy Server public key to do basic TLS certificate validation between Jamf Pro and a Jamf Pro PKI Proxy Server\n"
													},
													"response": [
														{
															"name": "Successful response replaces or removes public key",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/proxy-trust-store",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"proxy-trust-store"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Keystore not found for Certificate Authority",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/proxy-trust-store",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"proxy-trust-store"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														},
														{
															"name": "Certificate not found for Certificate Authority",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "file",
																	"file": {}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/proxy-trust-store",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"proxy-trust-store"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Removes the PKI Proxy Server public key used to secure communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id/proxy-trust-store",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id",
																"proxy-trust-store"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														},
														"description": "Removes the uploaded PKI Proxy Server public key to do basic TLS certificate validation between Jamf Pro and a Jamf Pro PKI Proxy Server\n"
													},
													"response": [
														{
															"name": "Successful removes public key",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/proxy-trust-store",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"proxy-trust-store"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Certificate Authority not found for Id",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/pki/venafi/:id/proxy-trust-store",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"pki",
																		"venafi",
																		":id",
																		"proxy-trust-store"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) ID of the Venafi configuration"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Retrieve a Venafi PKI configuration from Jamf Pro\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/pki/venafi/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"venafi",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) ID of the Venafi configuration"
														}
													]
												},
												"description": "Retrieve a Venafi PKI configuration from Jamf Pro\n"
											},
											"response": [
												{
													"name": "Successful response returns a Venafi PKI configuration",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"Venafi Certificate Authority\",\n  \"id\": 4,\n  \"username\": \"username\",\n  \"passwordConfigured\": true,\n  \"proxyAddress\": \"localhost:9443\",\n  \"revocationEnabled\": true,\n  \"clientId\": \"jamf-pro\",\n  \"refreshTokenConfigured\": true\n}"
												},
												{
													"name": "Certificate Authority not found for Id",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete a Venafi PKI configuration from Jamf Pro\n",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/pki/venafi/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"venafi",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) ID of the Venafi configuration"
														}
													]
												},
												"description": "Delete a Venafi PKI configuration from Jamf Pro\n"
											},
											"response": [
												{
													"name": "Successful response deletes Venafi PKI configuration from Jamf Pro",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Certificate Authority not found for Id",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Conflict deleting target, Venafi PKI configuration still in use on Configuration Profile",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update a Venafi PKI configuration in Jamf Pro\n",
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Venafi Certificate Authority\",\n  \"username\": \"username\",\n  \"password\": \"password\",\n  \"proxyAddress\": \"localhost:9443\",\n  \"revocationEnabled\": true,\n  \"clientId\": \"jamf-pro\",\n  \"refreshToken\": \"qdkP4SrCFKd7tefAVM6N\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/pki/venafi/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"venafi",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) ID of the Venafi configuration"
														}
													]
												},
												"description": "Update a Venafi PKI configuration in Jamf Pro\n"
											},
											"response": [
												{
													"name": "Successful response returns a Venafi PKI configuration",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Venafi Certificate Authority\",\n  \"username\": \"username\",\n  \"password\": \"password\",\n  \"proxyAddress\": \"localhost:9443\",\n  \"revocationEnabled\": true,\n  \"clientId\": \"jamf-pro\",\n  \"refreshToken\": \"qdkP4SrCFKd7tefAVM6N\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"name\": \"Venafi Certificate Authority\",\n  \"id\": 4,\n  \"username\": \"username\",\n  \"passwordConfigured\": true,\n  \"proxyAddress\": \"localhost:9443\",\n  \"revocationEnabled\": true,\n  \"clientId\": \"jamf-pro\",\n  \"refreshTokenConfigured\": true\n}"
												},
												{
													"name": "Invalid attributes for Certificate Authority configuration",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Venafi Certificate Authority\",\n  \"username\": \"username\",\n  \"password\": \"password\",\n  \"proxyAddress\": \"localhost:9443\",\n  \"revocationEnabled\": true,\n  \"clientId\": \"jamf-pro\",\n  \"refreshToken\": \"qdkP4SrCFKd7tefAVM6N\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Certificate Authority not found for Id",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Venafi Certificate Authority\",\n  \"username\": \"username\",\n  \"password\": \"password\",\n  \"proxyAddress\": \"localhost:9443\",\n  \"revocationEnabled\": true,\n  \"clientId\": \"jamf-pro\",\n  \"refreshToken\": \"qdkP4SrCFKd7tefAVM6N\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Tests the communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/pki/venafi/:id/connection-status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"venafi",
														":id",
														"connection-status"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) ID of the Venafi configuration"
														}
													]
												},
												"description": "Tests the communication between Jamf Pro and a Jamf Pro PKI Proxy Server\n"
											},
											"response": [
												{
													"name": "Successfully connected to Venafi",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id/connection-status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id",
																"connection-status"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"Successfully connected\"\n}"
												},
												{
													"name": "Why we failed to connect",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id/connection-status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id",
																"connection-status"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Get configuration profile data using specified Venafi CA object\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/pki/venafi/:id/dependent-profiles",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"venafi",
														":id",
														"dependent-profiles"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) ID of the Venafi configuration"
														}
													]
												},
												"description": "Get configuration profile data using specified Venafi CA object\n"
											},
											"response": [
												{
													"name": "Successfully returns a list of configuration profile data connected to the Venafi CA",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/pki/venafi/:id/dependent-profiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"pki",
																"venafi",
																":id",
																"dependent-profiles"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) ID of the Venafi configuration"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"urlPath\": \"OSXConfigurationProfile.html?id=1\",\n      \"name\": \"Configuration Profile Name\"\n    },\n    {\n      \"urlPath\": \"OSXConfigurationProfile.html?id=1\",\n      \"name\": \"Configuration Profile Name\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Create a PKI configuration in Jamf Pro for Venafi\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Venafi Certificate Authority\",\n  \"username\": \"username\",\n  \"password\": \"password\",\n  \"proxyAddress\": \"localhost:9443\",\n  \"revocationEnabled\": true,\n  \"clientId\": \"jamf-pro\",\n  \"refreshToken\": \"qdkP4SrCFKd7tefAVM6N\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/pki/venafi",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"pki",
												"venafi"
											]
										},
										"description": "Creates a Venafi PKI configuration in Jamf Pro, which can be used to issue certificates\n"
									},
									"response": [
										{
											"name": "Successful response creates a Venafi PKI configuration",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Venafi Certificate Authority\",\n  \"username\": \"username\",\n  \"password\": \"password\",\n  \"proxyAddress\": \"localhost:9443\",\n  \"revocationEnabled\": true,\n  \"clientId\": \"jamf-pro\",\n  \"refreshToken\": \"qdkP4SrCFKd7tefAVM6N\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/pki/venafi",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"venafi"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "Invalid attributes for Certificate Authority configuration",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Venafi Certificate Authority\",\n  \"username\": \"username\",\n  \"password\": \"password\",\n  \"proxyAddress\": \"localhost:9443\",\n  \"revocationEnabled\": true,\n  \"clientId\": \"jamf-pro\",\n  \"refreshToken\": \"qdkP4SrCFKd7tefAVM6N\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/pki/venafi",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"pki",
														"venafi"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "policy-properties",
					"item": [
						{
							"name": "Get Policy Properties object\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/policy-properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"policy-properties"
									]
								},
								"description": "Gets `Policy Properties` object.\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/policy-properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"policy-properties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"policiesRequireNetworkStateChange\": false,\n  \"allowNetworkStateChangeTriggers\": true\n}"
								}
							]
						},
						{
							"name": "Update Policy Properties object\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"policiesRequireNetworkStateChange\": false,\n  \"allowNetworkStateChangeTriggers\": true\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/policy-properties",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"policy-properties"
									]
								},
								"description": "Update Policy Properties object\n"
							},
							"response": [
								{
									"name": "Policy Properties was updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"policiesRequireNetworkStateChange\": false,\n  \"allowNetworkStateChangeTriggers\": true\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/policy-properties",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"policy-properties"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"policiesRequireNetworkStateChange\": false,\n  \"allowNetworkStateChangeTriggers\": true\n}"
								}
							]
						}
					]
				},
				{
					"name": "reenrollment",
					"item": [
						{
							"name": "history",
							"item": [
								{
									"name": "Get Re-enrollment history object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/reenrollment/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"reenrollment",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "100"
												},
												{
													"key": "pagesize",
													"value": "100"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "date:desc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
												}
											]
										},
										"description": "Gets Re-enrollment history object\n"
									},
									"response": [
										{
											"name": "Details of re-enrollment history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/reenrollment/history?page=0&size=100&pagesize=100&page-size=100&sort=date:desc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reenrollment",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "size",
															"value": "100"
														},
														{
															"key": "pagesize",
															"value": "100"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add specified Re-enrollment history object notes\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/reenrollment/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"reenrollment",
												"history"
											]
										},
										"description": "Adds specified Re-enrollment history object notes\n"
									},
									"response": [
										{
											"name": "Notes of re-enrollment history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/reenrollment/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reenrollment",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
										},
										{
											"name": "Re-enrollment history can not be saved.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/reenrollment/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reenrollment",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Export reenrollment history collection\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/csv,application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/reenrollment/history/export?page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"reenrollment",
												"history",
												"export"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,name:asc "
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name==\"*script*\""
												}
											]
										},
										"description": "Export reenrollment history collection\n"
									},
									"response": [
										{
											"name": "Export successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/reenrollment/history/export?page=0&page-size=100&sort=id:asc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reenrollment",
														"history",
														"export"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "id:asc"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/csv,application/json"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Export fields specified incorrectly - non-existing column or duplicate in the list.\nSupported columns: id,name,categoryName,categoryId,priority.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/reenrollment/history/export?page=0&page-size=100&sort=id:asc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reenrollment",
														"history",
														"export"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "id:asc"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Export currently unavailable, all export-related resources are in use. Try again later.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/reenrollment/history/export?page=0&page-size=100&sort=id:asc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"reenrollment",
														"history",
														"export"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "id:asc"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Re-enrollment object\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/reenrollment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"reenrollment"
									]
								},
								"description": "Gets Re-enrollment object\n"
							},
							"response": [
								{
									"name": "Details of Re-enrollment object were found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/reenrollment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"reenrollment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"flushMDMQueue\": \"DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED\",\n  \"isFlushPolicyHistoryEnabled\": false,\n  \"isFlushLocationInformationEnabled\": false,\n  \"isFlushLocationInformationHistoryEnabled\": false,\n  \"isFlushExtensionAttributesEnabled\": false\n}"
								},
								{
									"name": "Re-enrollment object does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/reenrollment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"reenrollment"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update the Re-enrollment object\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"flushMDMQueue\": \"DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED\",\n  \"isFlushPolicyHistoryEnabled\": false,\n  \"isFlushLocationInformationEnabled\": false,\n  \"isFlushLocationInformationHistoryEnabled\": false,\n  \"isFlushExtensionAttributesEnabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/reenrollment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"reenrollment"
									]
								},
								"description": "Update the Re-enrollment object\n"
							},
							"response": [
								{
									"name": "Re-enrollment record was updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"flushMDMQueue\": \"DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED\",\n  \"isFlushPolicyHistoryEnabled\": false,\n  \"isFlushLocationInformationEnabled\": false,\n  \"isFlushLocationInformationHistoryEnabled\": false,\n  \"isFlushExtensionAttributesEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/reenrollment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"reenrollment"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"flushMDMQueue\": \"DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED\",\n  \"isFlushPolicyHistoryEnabled\": false,\n  \"isFlushLocationInformationEnabled\": false,\n  \"isFlushLocationInformationHistoryEnabled\": false,\n  \"isFlushExtensionAttributesEnabled\": false\n}"
								}
							]
						}
					]
				},
				{
					"name": "scripts",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "history",
									"item": [
										{
											"name": "Get specified Script history object\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/scripts/:id/history?page=0&page-size=100&sort=date:desc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"scripts",
														":id",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc",
															"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
														},
														{
															"key": "filter",
															"value": "",
															"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of script history record"
														}
													]
												},
												"description": "Gets specified Script history object\n"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/scripts/:id/history?page=0&page-size=100&sort=date:desc&filter=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"scripts",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																},
																{
																	"key": "filter",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) id of script history record"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
												},
												{
													"name": "Specified script does not exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/scripts/:id/history?page=0&page-size=100&sort=date:desc&filter=",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"scripts",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																},
																{
																	"key": "filter",
																	"value": ""
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) id of script history record"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add specified Script history object notes\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/scripts/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"scripts",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of script history record"
														}
													]
												},
												"description": "Adds specified Script history object notes\n"
											},
											"response": [
												{
													"name": "Notes of script history were added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/scripts/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"scripts",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of script history record"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
												},
												{
													"name": "Specified script does not exist.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/scripts/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"scripts",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of script history record"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Script history can not be saved",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/scripts/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"scripts",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) instance id of script history record"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve a full script object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/scripts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"scripts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Script object identifier"
												}
											]
										},
										"description": "Retrieves a full script object"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/scripts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"scripts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Script object identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Install Developer Utils Script\",\n  \"id\": \"1\",\n  \"info\": \"Installs utilities for developers\",\n  \"notes\": \"Should be able to be re-run without problem.\",\n  \"priority\": \"AFTER\",\n  \"categoryId\": \"1\",\n  \"categoryName\": \"Developer Tools\",\n  \"parameter4\": \"1\",\n  \"parameter5\": \"2\",\n  \"parameter6\": \"3\",\n  \"parameter7\": \"4\",\n  \"parameter8\": \"5\",\n  \"parameter9\": \"6\",\n  \"parameter10\": \"7\",\n  \"parameter11\": \"8\",\n  \"osRequirements\": \"10.10.x\",\n  \"scriptContents\": \"echo \\\"Trivial script.\\\"\"\n}"
										},
										{
											"name": "Script with that ID does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/scripts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"scripts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Script object identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Replace the script at the id with the supplied information\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Install Developer Utils Script\",\n  \"info\": \"Installs utilities for developers\",\n  \"notes\": \"Should be able to be re-run without problem.\",\n  \"priority\": \"AFTER\",\n  \"categoryId\": \"1\",\n  \"categoryName\": \"Developer Tools\",\n  \"parameter4\": \"1\",\n  \"parameter5\": \"2\",\n  \"parameter6\": \"3\",\n  \"parameter7\": \"4\",\n  \"parameter8\": \"5\",\n  \"parameter9\": \"6\",\n  \"parameter10\": \"7\",\n  \"parameter11\": \"8\",\n  \"osRequirements\": \"10.10.x\",\n  \"scriptContents\": \"echo \\\"Trivial script.\\\"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/scripts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"scripts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Script object identifier"
												}
											]
										},
										"description": "Replaces the script at the id with the supplied information"
									},
									"response": [
										{
											"name": "Script at id was updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Install Developer Utils Script\",\n  \"info\": \"Installs utilities for developers\",\n  \"notes\": \"Should be able to be re-run without problem.\",\n  \"priority\": \"AFTER\",\n  \"categoryId\": \"1\",\n  \"categoryName\": \"Developer Tools\",\n  \"parameter4\": \"1\",\n  \"parameter5\": \"2\",\n  \"parameter6\": \"3\",\n  \"parameter7\": \"4\",\n  \"parameter8\": \"5\",\n  \"parameter9\": \"6\",\n  \"parameter10\": \"7\",\n  \"parameter11\": \"8\",\n  \"osRequirements\": \"10.10.x\",\n  \"scriptContents\": \"echo \\\"Trivial script.\\\"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/scripts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"scripts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Script object identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Install Developer Utils Script\",\n  \"id\": \"1\",\n  \"info\": \"Installs utilities for developers\",\n  \"notes\": \"Should be able to be re-run without problem.\",\n  \"priority\": \"AFTER\",\n  \"categoryId\": \"1\",\n  \"categoryName\": \"Developer Tools\",\n  \"parameter4\": \"1\",\n  \"parameter5\": \"2\",\n  \"parameter6\": \"3\",\n  \"parameter7\": \"4\",\n  \"parameter8\": \"5\",\n  \"parameter9\": \"6\",\n  \"parameter10\": \"7\",\n  \"parameter11\": \"8\",\n  \"osRequirements\": \"10.10.x\",\n  \"scriptContents\": \"echo \\\"Trivial script.\\\"\"\n}"
										},
										{
											"name": "Script with that id does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Install Developer Utils Script\",\n  \"info\": \"Installs utilities for developers\",\n  \"notes\": \"Should be able to be re-run without problem.\",\n  \"priority\": \"AFTER\",\n  \"categoryId\": \"1\",\n  \"categoryName\": \"Developer Tools\",\n  \"parameter4\": \"1\",\n  \"parameter5\": \"2\",\n  \"parameter6\": \"3\",\n  \"parameter7\": \"4\",\n  \"parameter8\": \"5\",\n  \"parameter9\": \"6\",\n  \"parameter10\": \"7\",\n  \"parameter11\": \"8\",\n  \"osRequirements\": \"10.10.x\",\n  \"scriptContents\": \"echo \\\"Trivial script.\\\"\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/scripts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"scripts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Script object identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a Script at the specified id\n",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/scripts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"scripts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Script object identifier"
												}
											]
										},
										"description": "Deletes a script at the specified id"
									},
									"response": [
										{
											"name": "Successful response",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/scripts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"scripts",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Script object identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Download a text file of the Script contents\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/scripts/:id/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"scripts",
												":id",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) id of the script to be downloaded"
												}
											]
										},
										"description": "Download a text file of the script contents"
									},
									"response": [
										{
											"name": "The script of the specified id",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/scripts/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"scripts",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of the script to be downloaded"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "in aute"
										},
										{
											"name": "Not found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/scripts/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"scripts",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) id of the script to be downloaded"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Search for sorted and paged Scripts\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/scripts?page=0&page-size=100&sort=name:asc&filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"scripts"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "name:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Fields allowed in the query: `id`, `name`, `info`, `notes`, `priority`, `categoryId`, `categoryName`, `parameter4` up to `parameter11`, `osRequirements`, `scriptContents`. Example: sort=date:desc,name:asc "
										},
										{
											"key": "filter",
											"value": "",
											"description": "Query in the RSQL format, allowing to filter scripts collection. Default search is empty query - returning all results for the requested page. Fields allowed in the query: `id`, `name`, `info`, `notes`, `priority`, `categoryId`, `categoryName`, `parameter4` up to `parameter11`, `osRequirements`, `scriptContents`. This param can be combined with paging and sorting. Example: filter=categoryName==\"Category\" and name==\"*script name*\""
										}
									]
								},
								"description": "Search for sorted and paged scripts"
							},
							"response": [
								{
									"name": "Found scripts matching search params.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/scripts?page=0&page-size=100&sort=name:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"scripts"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "name:asc"
												},
												{
													"key": "filter",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"name\": \"Install Developer Utils Script\",\n      \"id\": \"1\",\n      \"info\": \"Installs utilities for developers\",\n      \"notes\": \"Should be able to be re-run without problem.\",\n      \"priority\": \"AFTER\",\n      \"categoryId\": \"1\",\n      \"categoryName\": \"Developer Tools\",\n      \"parameter4\": \"1\",\n      \"parameter5\": \"2\",\n      \"parameter6\": \"3\",\n      \"parameter7\": \"4\",\n      \"parameter8\": \"5\",\n      \"parameter9\": \"6\",\n      \"parameter10\": \"7\",\n      \"parameter11\": \"8\",\n      \"osRequirements\": \"10.10.x\",\n      \"scriptContents\": \"echo \\\"Trivial script.\\\"\"\n    },\n    {\n      \"name\": \"Install Developer Utils Script\",\n      \"id\": \"1\",\n      \"info\": \"Installs utilities for developers\",\n      \"notes\": \"Should be able to be re-run without problem.\",\n      \"priority\": \"AFTER\",\n      \"categoryId\": \"1\",\n      \"categoryName\": \"Developer Tools\",\n      \"parameter4\": \"1\",\n      \"parameter5\": \"2\",\n      \"parameter6\": \"3\",\n      \"parameter7\": \"4\",\n      \"parameter8\": \"5\",\n      \"parameter9\": \"6\",\n      \"parameter10\": \"7\",\n      \"parameter11\": \"8\",\n      \"osRequirements\": \"10.10.x\",\n      \"scriptContents\": \"echo \\\"Trivial script.\\\"\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create a Script\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Install Developer Utils Script\",\n  \"info\": \"Installs utilities for developers\",\n  \"notes\": \"Should be able to be re-run without problem.\",\n  \"priority\": \"AFTER\",\n  \"categoryId\": \"1\",\n  \"categoryName\": \"Developer Tools\",\n  \"parameter4\": \"1\",\n  \"parameter5\": \"2\",\n  \"parameter6\": \"3\",\n  \"parameter7\": \"4\",\n  \"parameter8\": \"5\",\n  \"parameter9\": \"6\",\n  \"parameter10\": \"7\",\n  \"parameter11\": \"8\",\n  \"osRequirements\": \"10.10.x\",\n  \"scriptContents\": \"echo \\\"Trivial script.\\\"\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/scripts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"scripts"
									]
								},
								"description": "Creates a script"
							},
							"response": [
								{
									"name": "Script created successfully",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Install Developer Utils Script\",\n  \"info\": \"Installs utilities for developers\",\n  \"notes\": \"Should be able to be re-run without problem.\",\n  \"priority\": \"AFTER\",\n  \"categoryId\": \"1\",\n  \"categoryName\": \"Developer Tools\",\n  \"parameter4\": \"1\",\n  \"parameter5\": \"2\",\n  \"parameter6\": \"3\",\n  \"parameter7\": \"4\",\n  \"parameter8\": \"5\",\n  \"parameter9\": \"6\",\n  \"parameter10\": \"7\",\n  \"parameter11\": \"8\",\n  \"osRequirements\": \"10.10.x\",\n  \"scriptContents\": \"echo \\\"Trivial script.\\\"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/scripts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"scripts"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "self-service",
					"item": [
						{
							"name": "branding",
							"item": [
								{
									"name": "ios",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Read a single Self Service iOS branding configuration indicated by the provided id\n",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/self-service/branding/ios/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"self-service",
																"branding",
																"ios",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) id of iOS branding configuration"
																}
															]
														},
														"description": "Read a single Self Service iOS branding configuration indicated by the provided id."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/self-service/branding/ios/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"self-service",
																		"branding",
																		"ios",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) id of iOS branding configuration"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"brandingName\": \"Self Service\",\n  \"brandingNameColorCode\": \"000000\",\n  \"headerBackgroundColorCode\": \"FFFFFF\",\n  \"menuIconColorCode\": \"000001\",\n  \"statusBarTextColor\": \"dark\",\n  \"id\": \"1\",\n  \"iconId\": 1\n}"
														}
													]
												},
												{
													"name": "Update a Self Service iOS branding configuration with the supplied details\n",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"brandingName\": \"Self Service\",\n  \"brandingNameColorCode\": \"000000\",\n  \"headerBackgroundColorCode\": \"FFFFFF\",\n  \"menuIconColorCode\": \"000001\",\n  \"statusBarTextColor\": \"dark\",\n  \"iconId\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/self-service/branding/ios/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"self-service",
																"branding",
																"ios",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) id of iOS branding configuration"
																}
															]
														},
														"description": "Update a Self Service iOS branding configuration with the supplied details"
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"brandingName\": \"Self Service\",\n  \"brandingNameColorCode\": \"000000\",\n  \"headerBackgroundColorCode\": \"FFFFFF\",\n  \"menuIconColorCode\": \"000001\",\n  \"statusBarTextColor\": \"dark\",\n  \"iconId\": 1\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/self-service/branding/ios/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"self-service",
																		"branding",
																		"ios",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) id of iOS branding configuration"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"brandingName\": \"Self Service\",\n  \"brandingNameColorCode\": \"000000\",\n  \"headerBackgroundColorCode\": \"FFFFFF\",\n  \"menuIconColorCode\": \"000001\",\n  \"statusBarTextColor\": \"dark\",\n  \"id\": \"1\",\n  \"iconId\": 1\n}"
														},
														{
															"name": "Invalid id",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"brandingName\": \"Self Service\",\n  \"brandingNameColorCode\": \"000000\",\n  \"headerBackgroundColorCode\": \"FFFFFF\",\n  \"menuIconColorCode\": \"000001\",\n  \"statusBarTextColor\": \"dark\",\n  \"iconId\": 1\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/self-service/branding/ios/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"self-service",
																		"branding",
																		"ios",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) id of iOS branding configuration"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Delete the Self Service iOS branding configuration indicated by the provided id\n",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/self-service/branding/ios/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"self-service",
																"branding",
																"ios",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) id of iOS branding configuration"
																}
															]
														},
														"description": "Delete the Self Service iOS branding configuration indicated by the provided id."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/self-service/branding/ios/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"self-service",
																		"branding",
																		"ios",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) id of iOS branding configuration"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Invalid id",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/self-service/branding/ios/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"self-service",
																		"branding",
																		"ios",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) id of iOS branding configuration"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Search for sorted and paged iOS branding configurations\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/self-service/branding/ios?page=0&page-size=100&sort=id:asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"self-service",
														"branding",
														"ios"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "id:asc",
															"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,brandingName:asc "
														}
													]
												},
												"description": "Search for sorted and paged iOS branding configurations"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/self-service/branding/ios?page=0&page-size=100&sort=id:asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"self-service",
																"branding",
																"ios"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "id:asc"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"brandingName\": \"Self Service\",\n      \"brandingNameColorCode\": \"000000\",\n      \"headerBackgroundColorCode\": \"FFFFFF\",\n      \"menuIconColorCode\": \"000001\",\n      \"statusBarTextColor\": \"dark\",\n      \"id\": \"1\",\n      \"iconId\": 1\n    },\n    {\n      \"brandingName\": \"Self Service\",\n      \"brandingNameColorCode\": \"000000\",\n      \"headerBackgroundColorCode\": \"FFFFFF\",\n      \"menuIconColorCode\": \"000001\",\n      \"statusBarTextColor\": \"dark\",\n      \"id\": \"1\",\n      \"iconId\": 1\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Create a Self Service iOS branding configuration with the supplied\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"brandingName\": \"Self Service\",\n  \"brandingNameColorCode\": \"000000\",\n  \"headerBackgroundColorCode\": \"FFFFFF\",\n  \"menuIconColorCode\": \"000001\",\n  \"statusBarTextColor\": \"dark\",\n  \"iconId\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/self-service/branding/ios",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"self-service",
														"branding",
														"ios"
													]
												},
												"description": "Create a Self Service iOS branding configuration with the supplied details"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"brandingName\": \"Self Service\",\n  \"brandingNameColorCode\": \"000000\",\n  \"headerBackgroundColorCode\": \"FFFFFF\",\n  \"menuIconColorCode\": \"000001\",\n  \"statusBarTextColor\": \"dark\",\n  \"iconId\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/self-service/branding/ios",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"self-service",
																"branding",
																"ios"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "macos",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "Read a single Self Service macOS branding configuration indicated by the provided id\n",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/self-service/branding/macos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"self-service",
																"branding",
																"macos",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) id of macOS branding configuration"
																}
															]
														},
														"description": "Read a single Self Service macOS branding configuration indicated by the provided id."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/self-service/branding/macos/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"self-service",
																		"branding",
																		"macos",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) id of macOS branding configuration"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"1\",\n  \"applicationName\": \"Self Service\",\n  \"brandingName\": \"Self Service\",\n  \"brandingNameSecondary\": \"Self Service\",\n  \"iconId\": 1,\n  \"brandingHeaderImageId\": 1\n}"
														}
													]
												},
												{
													"name": "Update a Self Service macOS branding configuration with the supplied details\n",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"applicationName\": \"Self Service\",\n  \"brandingName\": \"Self Service\",\n  \"brandingNameSecondary\": \"Self Service\",\n  \"iconId\": 1,\n  \"brandingHeaderImageId\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/self-service/branding/macos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"self-service",
																"branding",
																"macos",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) id of macOS branding configuration"
																}
															]
														},
														"description": "Update a Self Service macOS branding configuration with the supplied details"
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"applicationName\": \"Self Service\",\n  \"brandingName\": \"Self Service\",\n  \"brandingNameSecondary\": \"Self Service\",\n  \"iconId\": 1,\n  \"brandingHeaderImageId\": 1\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/self-service/branding/macos/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"self-service",
																		"branding",
																		"macos",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) id of macOS branding configuration"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"id\": \"1\",\n  \"applicationName\": \"Self Service\",\n  \"brandingName\": \"Self Service\",\n  \"brandingNameSecondary\": \"Self Service\",\n  \"iconId\": 1,\n  \"brandingHeaderImageId\": 1\n}"
														},
														{
															"name": "Invalid id",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"applicationName\": \"Self Service\",\n  \"brandingName\": \"Self Service\",\n  \"brandingNameSecondary\": \"Self Service\",\n  \"iconId\": 1,\n  \"brandingHeaderImageId\": 1\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/v1/self-service/branding/macos/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"self-service",
																		"branding",
																		"macos",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) id of macOS branding configuration"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Delete the Self Service macOS branding configuration indicated by the provided id\n",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/self-service/branding/macos/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"self-service",
																"branding",
																"macos",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) id of macOS branding configuration"
																}
															]
														},
														"description": "Delete the Self Service macOS branding configuration indicated by the provided id."
													},
													"response": [
														{
															"name": "Successful response",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/self-service/branding/macos/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"self-service",
																		"branding",
																		"macos",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) id of macOS branding configuration"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "text/plain"
																}
															],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Invalid id",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"description": "Added as a part of security scheme: bearer",
																		"key": "Authorization",
																		"value": "Bearer <token>"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v1/self-service/branding/macos/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v1",
																		"self-service",
																		"branding",
																		"macos",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": "in aute",
																			"description": "(Required) id of macOS branding configuration"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Search for sorted and paged macOS branding configurations\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/self-service/branding/macos?page=0&page-size=100&sort=id:asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"self-service",
														"branding",
														"macos"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "id:asc",
															"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,brandingName:asc "
														}
													]
												},
												"description": "Search for sorted and paged macOS branding configurations"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v1/self-service/branding/macos?page=0&page-size=100&sort=id:asc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"self-service",
																"branding",
																"macos"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "id:asc"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": \"1\",\n      \"applicationName\": \"Self Service\",\n      \"brandingName\": \"Self Service\",\n      \"brandingNameSecondary\": \"Self Service\",\n      \"iconId\": 1,\n      \"brandingHeaderImageId\": 1\n    },\n    {\n      \"id\": \"1\",\n      \"applicationName\": \"Self Service\",\n      \"brandingName\": \"Self Service\",\n      \"brandingNameSecondary\": \"Self Service\",\n      \"iconId\": 1,\n      \"brandingHeaderImageId\": 1\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Create a Self Service macOS branding configuration with the supplied\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"applicationName\": \"Self Service\",\n  \"brandingName\": \"Self Service\",\n  \"brandingNameSecondary\": \"Self Service\",\n  \"iconId\": 1,\n  \"brandingHeaderImageId\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/self-service/branding/macos",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"self-service",
														"branding",
														"macos"
													]
												},
												"description": "Create a Self Service macOS branding configuration with the supplied details"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"applicationName\": \"Self Service\",\n  \"brandingName\": \"Self Service\",\n  \"brandingNameSecondary\": \"Self Service\",\n  \"iconId\": 1,\n  \"brandingHeaderImageId\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v1/self-service/branding/macos",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v1",
																"self-service",
																"branding",
																"macos"
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "settings",
							"item": [
								{
									"name": "Get an object representation of Self Service settings\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/self-service/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"self-service",
												"settings"
											]
										},
										"description": "gets an object representation of Self Service settings\n"
									},
									"response": [
										{
											"name": "successful GET\n",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/self-service/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"self-service",
														"settings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"installSettings\": {\n    \"installLocation\": \"/Applications\",\n    \"installAutomatically\": false\n  },\n  \"loginSettings\": {\n    \"authType\": \"Basic\",\n    \"userLoginLevel\": \"NotRequired\",\n    \"allowRememberMe\": false\n  },\n  \"configurationSettings\": {\n    \"bookmarksName\": \"Bookmarks\",\n    \"notificationsEnabled\": false,\n    \"alertUserApprovedMdm\": true,\n    \"defaultLandingPage\": \"HOME\",\n    \"defaultHomeCategoryId\": -1\n  }\n}"
										}
									]
								},
								{
									"name": "Put an object representation of Self Service settings\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"installSettings\": {\n    \"installLocation\": \"/Applications\",\n    \"installAutomatically\": false\n  },\n  \"loginSettings\": {\n    \"authType\": \"Basic\",\n    \"userLoginLevel\": \"NotRequired\",\n    \"allowRememberMe\": false\n  },\n  \"configurationSettings\": {\n    \"bookmarksName\": \"Bookmarks\",\n    \"notificationsEnabled\": false,\n    \"alertUserApprovedMdm\": true,\n    \"defaultLandingPage\": \"HOME\",\n    \"defaultHomeCategoryId\": -1\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/self-service/settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"self-service",
												"settings"
											]
										},
										"description": "puts an object representation of Self Service settings\n"
									},
									"response": [
										{
											"name": "successful PUT\n",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"installSettings\": {\n    \"installLocation\": \"/Applications\",\n    \"installAutomatically\": false\n  },\n  \"loginSettings\": {\n    \"authType\": \"Basic\",\n    \"userLoginLevel\": \"NotRequired\",\n    \"allowRememberMe\": false\n  },\n  \"configurationSettings\": {\n    \"bookmarksName\": \"Bookmarks\",\n    \"notificationsEnabled\": false,\n    \"alertUserApprovedMdm\": true,\n    \"defaultLandingPage\": \"HOME\",\n    \"defaultHomeCategoryId\": -1\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/self-service/settings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"self-service",
														"settings"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"installSettings\": {\n    \"installLocation\": \"/Applications\",\n    \"installAutomatically\": false\n  },\n  \"loginSettings\": {\n    \"authType\": \"Basic\",\n    \"userLoginLevel\": \"NotRequired\",\n    \"allowRememberMe\": false\n  },\n  \"configurationSettings\": {\n    \"bookmarksName\": \"Bookmarks\",\n    \"notificationsEnabled\": false,\n    \"alertUserApprovedMdm\": true,\n    \"defaultLandingPage\": \"HOME\",\n    \"defaultHomeCategoryId\": -1\n  }\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "sso",
					"item": [
						{
							"name": "cert",
							"item": [
								{
									"name": "Retrieve the certificate currently configured for use with SSO\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sso/cert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"cert"
											]
										},
										"description": "Retrieves the certificate currently configured for use with SSO."
									},
									"response": [
										{
											"name": "Successful operation.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/sso/cert",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sso",
														"cert"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"keystore\": {\n    \"key\": \" \",\n    \"keystoreFile\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"keystoreFileName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": \"PKCS12\",\n    \"keys\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"keystoreSetupType\": \"UPLOADED\"\n  },\n  \"keystoreDetails\": {\n    \"keys\": [\n      \"\",\n      \"\"\n    ],\n    \"serialNumber\": 2322472237,\n    \"subject\": \"CN=SSO:jamf.com, OU=JSS, O=JAMF Software, L=Minneapolis, ST=MN, C=US\",\n    \"issuer\": \"CN= Jamf Pro JSS Built-in Certificate Authority\",\n    \"expiration\": \"2030-02-24T12:18:32.000\"\n  }\n}"
										}
									]
								},
								{
									"name": "Update the certificate used by Jamf Pro to sign SSO requests to the identify provider\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \" \",\n  \"keystoreFile\": \"G2C+DhKu\",\n  \"keystoreFileName\": \"keystore.p12\",\n  \"type\": \"PKCS12\",\n  \"keystorePassword\": \"***\",\n  \"keys\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"password\": \"***\",\n  \"keystoreSetupType\": \"UPLOADED\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/sso/cert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"cert"
											]
										},
										"description": "Update the certificate used by Jamf Pro to sign SSO requests to the identify provider."
									},
									"response": [
										{
											"name": "Successfully changed the keystore.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"key\": \" \",\n  \"keystoreFile\": \"G2C+DhKu\",\n  \"keystoreFileName\": \"keystore.p12\",\n  \"type\": \"PKCS12\",\n  \"keystorePassword\": \"***\",\n  \"keys\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"password\": \"***\",\n  \"keystoreSetupType\": \"UPLOADED\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/sso/cert",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sso",
														"cert"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"keystore\": {\n    \"key\": \" \",\n    \"keystoreFile\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"keystoreFileName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": \"PKCS12\",\n    \"keys\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"keystoreSetupType\": \"UPLOADED\"\n  },\n  \"keystoreDetails\": {\n    \"keys\": [\n      \"\",\n      \"\"\n    ],\n    \"serialNumber\": 2322472237,\n    \"subject\": \"CN=SSO:jamf.com, OU=JSS, O=JAMF Software, L=Minneapolis, ST=MN, C=US\",\n    \"issuer\": \"CN= Jamf Pro JSS Built-in Certificate Authority\",\n    \"expiration\": \"2030-02-24T12:18:32.000\"\n  }\n}"
										},
										{
											"name": "One or more parameters were invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"key\": \" \",\n  \"keystoreFile\": \"G2C+DhKu\",\n  \"keystoreFileName\": \"keystore.p12\",\n  \"type\": \"PKCS12\",\n  \"keystorePassword\": \"***\",\n  \"keys\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"password\": \"***\",\n  \"keystoreSetupType\": \"UPLOADED\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/sso/cert",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sso",
														"cert"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Jamf Pro will generate a new certificate and use it to sign SSO\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sso/cert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"cert"
											]
										},
										"description": "Jamf Pro will generate a new certificate and use it to sign SSO requests to the identity provider."
									},
									"response": [
										{
											"name": "Newly generated will be set and returned.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/sso/cert",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sso",
														"cert"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"keystore\": {\n    \"key\": \" \",\n    \"keystoreFile\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"keystoreFileName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"type\": \"PKCS12\",\n    \"keys\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"keystoreSetupType\": \"UPLOADED\"\n  },\n  \"keystoreDetails\": {\n    \"keys\": [\n      \"\",\n      \"\"\n    ],\n    \"serialNumber\": 2322472237,\n    \"subject\": \"CN=SSO:jamf.com, OU=JSS, O=JAMF Software, L=Minneapolis, ST=MN, C=US\",\n    \"issuer\": \"CN= Jamf Pro JSS Built-in Certificate Authority\",\n    \"expiration\": \"2030-02-24T12:18:32.000\"\n  }\n}"
										}
									]
								},
								{
									"name": "Delete the currently configured certificate used by SSO\n",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/sso/cert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"cert"
											]
										},
										"description": "Deletes the currently configured certificate used by SSO."
									},
									"response": [
										{
											"name": "Operation successful.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/sso/cert",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sso",
														"cert"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Download the certificate currently configured for use with Jamf Pro's SSO configuration\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/plain"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sso/cert/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"cert",
												"download"
											]
										},
										"description": "Downloads the certificate currently configured for use with Jamf Pro's SSO configuration"
									},
									"response": [
										{
											"name": "Request successful",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/sso/cert/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sso",
														"cert",
														"download"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": "in aute"
										}
									]
								},
								{
									"name": "Parse the certificate to get details about certificate type and keys needed to upload certificate file\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"keystoreFile\": \"XRqW9aBXsQnwhdVFp+I3vw==\",\n  \"keystoreFileName\": \"keystore.p12\",\n  \"keystorePassword\": \"***\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/sso/cert/parse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"cert",
												"parse"
											]
										},
										"description": "Parse the certificate to get details about certificate type and keys needed to upload certificate file."
									},
									"response": [
										{
											"name": "Successfully parsed the certificate.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"keystoreFile\": \"XRqW9aBXsQnwhdVFp+I3vw==\",\n  \"keystoreFileName\": \"keystore.p12\",\n  \"keystorePassword\": \"***\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/sso/cert/parse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sso",
														"cert",
														"parse"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"key\": \" \",\n  \"keys\": [\n    {\n      \"id\": \"1\",\n      \"valid\": true\n    },\n    {\n      \"id\": \"1\",\n      \"valid\": true\n    }\n  ],\n  \"type\": \"PKCS12\",\n  \"keystoreSetupType\": \"UPLOADED\",\n  \"keystoreFile\": [\n    \"FzY+\",\n    \"kkWuhpf+R3VTRLNxqToZ\"\n  ],\n  \"keystoreFileName\": \"keystore.p12\"\n}"
										},
										{
											"name": "One or more parameters were invalid.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"keystoreFile\": \"XRqW9aBXsQnwhdVFp+I3vw==\",\n  \"keystoreFileName\": \"keystore.p12\",\n  \"keystorePassword\": \"***\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/sso/cert/parse",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sso",
														"cert",
														"parse"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "history",
							"item": [
								{
									"name": "Get SSO history object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sso/history?page=0&page-size=100&sort=id:desc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:desc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											]
										},
										"description": "Gets SSO history object\n"
									},
									"response": [
										{
											"name": "Details of SSO history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/sso/history?page=0&page-size=100&sort=id:desc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sso",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "id:desc"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add SSO history object notes\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/sso/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"history"
											]
										},
										"description": "Adds SSO history object notes"
									},
									"response": [
										{
											"name": "Notes of SSO history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/sso/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sso",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "SSO object history can not be saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/sso/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"sso",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve the current Single Sign On configuration settings\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/sso",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sso"
									]
								},
								"description": "Retrieves the current Single Sign On configuration settings"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sso",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"entityId\": \"saml/metadata\",\n  \"groupAttributeName\": \"http://schemas.xmlsoap.org/claims/Group\",\n  \"groupEnrollmentAccessEnabled\": false,\n  \"groupRdnKey\": \" \",\n  \"idpProviderType\": \"ADFS\",\n  \"metadataSource\": \"URL\",\n  \"ssoBypassAllowed\": false,\n  \"ssoEnabled\": false,\n  \"ssoForEnrollmentEnabled\": false,\n  \"ssoForMacOsSelfServiceEnabled\": false,\n  \"tokenExpirationDisabled\": false,\n  \"userAttributeEnabled\": false,\n  \"userMapping\": \"USERNAME\",\n  \"userAttributeName\": \" \",\n  \"groupEnrollmentAccessName\": \" \",\n  \"idpUrl\": \"https://dev-940210.oktapreview.com/app/exk6bnecb9a4Z5spn0h7/sso/saml/metadata\",\n  \"metadataFileName\": \"if MetadataSource is set to URL, remove this field\",\n  \"otherProviderTypeName\": \" \",\n  \"federationMetadataFile\": \"wpvvWSFYk0ykZLDUrOUuQjggsjMzHSDZD3eQ\",\n  \"sessionTimeout\": 480\n}"
								}
							]
						},
						{
							"name": "Updates the current Single Sign On configuration settings\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"entityId\": \"saml/metadata\",\n  \"groupAttributeName\": \"http://schemas.xmlsoap.org/claims/Group\",\n  \"groupEnrollmentAccessEnabled\": false,\n  \"groupRdnKey\": \" \",\n  \"idpProviderType\": \"ADFS\",\n  \"metadataSource\": \"URL\",\n  \"ssoBypassAllowed\": false,\n  \"ssoEnabled\": false,\n  \"ssoForEnrollmentEnabled\": false,\n  \"ssoForMacOsSelfServiceEnabled\": false,\n  \"tokenExpirationDisabled\": false,\n  \"userAttributeEnabled\": false,\n  \"userMapping\": \"USERNAME\",\n  \"userAttributeName\": \" \",\n  \"groupEnrollmentAccessName\": \" \",\n  \"idpUrl\": \"https://dev-940210.oktapreview.com/app/exk6bnecb9a4Z5spn0h7/sso/saml/metadata\",\n  \"metadataFileName\": \"if MetadataSource is set to URL, remove this field\",\n  \"otherProviderTypeName\": \" \",\n  \"federationMetadataFile\": \"wpvvWSFYk0ykZLDUrOUuQjggsjMzHSDZD3eQ\",\n  \"sessionTimeout\": 480\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sso",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sso"
									]
								},
								"description": "Updates the current Single Sign On configuration settings"
							},
							"response": [
								{
									"name": "The update was successful and the newly updated object is returned.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityId\": \"saml/metadata\",\n  \"groupAttributeName\": \"http://schemas.xmlsoap.org/claims/Group\",\n  \"groupEnrollmentAccessEnabled\": false,\n  \"groupRdnKey\": \" \",\n  \"idpProviderType\": \"ADFS\",\n  \"metadataSource\": \"URL\",\n  \"ssoBypassAllowed\": false,\n  \"ssoEnabled\": false,\n  \"ssoForEnrollmentEnabled\": false,\n  \"ssoForMacOsSelfServiceEnabled\": false,\n  \"tokenExpirationDisabled\": false,\n  \"userAttributeEnabled\": false,\n  \"userMapping\": \"USERNAME\",\n  \"userAttributeName\": \" \",\n  \"groupEnrollmentAccessName\": \" \",\n  \"idpUrl\": \"https://dev-940210.oktapreview.com/app/exk6bnecb9a4Z5spn0h7/sso/saml/metadata\",\n  \"metadataFileName\": \"if MetadataSource is set to URL, remove this field\",\n  \"otherProviderTypeName\": \" \",\n  \"federationMetadataFile\": \"wpvvWSFYk0ykZLDUrOUuQjggsjMzHSDZD3eQ\",\n  \"sessionTimeout\": 480\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/sso",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"entityId\": \"saml/metadata\",\n  \"groupAttributeName\": \"http://schemas.xmlsoap.org/claims/Group\",\n  \"groupEnrollmentAccessEnabled\": false,\n  \"groupRdnKey\": \" \",\n  \"idpProviderType\": \"ADFS\",\n  \"metadataSource\": \"URL\",\n  \"ssoBypassAllowed\": false,\n  \"ssoEnabled\": false,\n  \"ssoForEnrollmentEnabled\": false,\n  \"ssoForMacOsSelfServiceEnabled\": false,\n  \"tokenExpirationDisabled\": false,\n  \"userAttributeEnabled\": false,\n  \"userMapping\": \"USERNAME\",\n  \"userAttributeName\": \" \",\n  \"groupEnrollmentAccessName\": \" \",\n  \"idpUrl\": \"https://dev-940210.oktapreview.com/app/exk6bnecb9a4Z5spn0h7/sso/saml/metadata\",\n  \"metadataFileName\": \"if MetadataSource is set to URL, remove this field\",\n  \"otherProviderTypeName\": \" \",\n  \"federationMetadataFile\": \"wpvvWSFYk0ykZLDUrOUuQjggsjMzHSDZD3eQ\",\n  \"sessionTimeout\": 480\n}"
								},
								{
									"name": "Bad Request. Either required fields are missing or there was a validation exception.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"entityId\": \"saml/metadata\",\n  \"groupAttributeName\": \"http://schemas.xmlsoap.org/claims/Group\",\n  \"groupEnrollmentAccessEnabled\": false,\n  \"groupRdnKey\": \" \",\n  \"idpProviderType\": \"ADFS\",\n  \"metadataSource\": \"URL\",\n  \"ssoBypassAllowed\": false,\n  \"ssoEnabled\": false,\n  \"ssoForEnrollmentEnabled\": false,\n  \"ssoForMacOsSelfServiceEnabled\": false,\n  \"tokenExpirationDisabled\": false,\n  \"userAttributeEnabled\": false,\n  \"userMapping\": \"USERNAME\",\n  \"userAttributeName\": \" \",\n  \"groupEnrollmentAccessName\": \" \",\n  \"idpUrl\": \"https://dev-940210.oktapreview.com/app/exk6bnecb9a4Z5spn0h7/sso/saml/metadata\",\n  \"metadataFileName\": \"if MetadataSource is set to URL, remove this field\",\n  \"otherProviderTypeName\": \" \",\n  \"federationMetadataFile\": \"wpvvWSFYk0ykZLDUrOUuQjggsjMzHSDZD3eQ\",\n  \"sessionTimeout\": 480\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/sso",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Retrieve the list of Enrollment Customizations using SSO\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/sso/dependencies",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sso",
										"dependencies"
									]
								},
								"description": "Retrieves the list of Enrollment Customizations using SSO"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sso/dependencies",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"dependencies"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"dependencies\": [\n    {\n      \"name\": \"Name\",\n      \"humanReadableName\": \"Enrollment Customization\",\n      \"hyperlink\": \"/enrollment-customization/id\"\n    },\n    {\n      \"name\": \"Name\",\n      \"humanReadableName\": \"Enrollment Customization\",\n      \"hyperlink\": \"/enrollment-customization/id\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Disable SSO\n",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/sso/disable",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sso",
										"disable"
									]
								},
								"description": "Disable SSO"
							},
							"response": [
								{
									"name": "SSO has been disabled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sso/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"disable"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "SSO object don't exist or is already disabled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sso/disable",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"disable"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Download the Jamf Pro SAML metadata file\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/sso/metadata/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sso",
										"metadata",
										"download"
									]
								},
								"description": "Download the Jamf Pro SAML metadata file"
							},
							"response": [
								{
									"name": "Successful resposne",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/sso/metadata/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"metadata",
												"download"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "in aute"
								}
							]
						},
						{
							"name": "Endpoint for validation of a saml metadata url\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"idpUrl\": \"https://your-idp.com/saml/metadata\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/sso/validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sso",
										"validate"
									]
								},
								"description": "Validation of a content available under provided metadata URL."
							},
							"response": [
								{
									"name": "valid metadata url",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"idpUrl\": \"https://your-idp.com/saml/metadata\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/sso/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"validate"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "provided metadata URL is not valid",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"idpUrl\": \"https://your-idp.com/saml/metadata\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/sso/validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"sso",
												"validate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "static-user-groups",
					"item": [
						{
							"name": "Return a list of all Static User Groups\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/static-user-groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"static-user-groups"
									]
								},
								"description": "Returns a list of all static user groups.\n"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/static-user-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"static-user-groups"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": 1,\n    \"name\": \"Grade School Teachers\"\n  },\n  {\n    \"id\": 1,\n    \"name\": \"Grade School Teachers\"\n  }\n]"
								}
							]
						},
						{
							"name": "Return a specific Static User Group by id\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/static-user-groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"static-user-groups",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) Instance id of static user group record"
										}
									]
								},
								"description": "Returns a specific static user group by id.\n"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/static-user-groups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"static-user-groups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Instance id of static user group record"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"name\": \"Grade School Teachers\"\n}"
								},
								{
									"name": "Specified static user group object does not exist.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/static-user-groups/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"static-user-groups",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Instance id of static user group record"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "supervision-identities",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Retrieve a Supervision Identity with the supplied id\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/supervision-identities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"supervision-identities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Supervision Identity identifier"
												}
											]
										},
										"description": "Retrieves a Supervision Identity with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/supervision-identities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"supervision-identities",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Supervision Identity identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"displayName\": \"Supervision Identity\",\n  \"commonName\": \"Jamf Identity - Supervision Identity\",\n  \"expirationDate\": \"2000-10-31\"\n}"
										},
										{
											"name": "Supervision Identity with that id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/supervision-identities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"supervision-identities",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Supervision Identity identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update a Supervision Identity with the supplied information\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"Supervision Identity\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/supervision-identities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"supervision-identities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Supervision Identity identifier"
												}
											]
										},
										"description": "Updates a Supervision Identity with the supplied information"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"Supervision Identity\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/supervision-identities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"supervision-identities",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Supervision Identity identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 1,\n  \"displayName\": \"Supervision Identity\",\n  \"commonName\": \"Jamf Identity - Supervision Identity\",\n  \"expirationDate\": \"2000-10-31\"\n}"
										},
										{
											"name": "Supervision Identity with that id does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"Supervision Identity\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/supervision-identities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"supervision-identities",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Supervision Identity identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Something went wrong",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"Supervision Identity\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/supervision-identities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"supervision-identities",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Supervision Identity identifier"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a Supervision Identity with the supplied id\n",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/supervision-identities/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"supervision-identities",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Supervision Identity identifier"
												}
											]
										},
										"description": "Deletes a Supervision Identity with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/supervision-identities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"supervision-identities",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Supervision Identity identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Supervision Identity with that id does not exist",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/supervision-identities/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"supervision-identities",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Supervision Identity identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Download the Supervision Identity .p12 file\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/supervision-identities/:id/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"supervision-identities",
												":id",
												"download"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) Supervision Identity identifier"
												}
											]
										},
										"description": "Download the Supervision Identity .p12 file"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/supervision-identities/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"supervision-identities",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Supervision Identity identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/octet-stream"
												}
											],
											"cookie": [],
											"body": "in aute"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/supervision-identities/:id/download",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"supervision-identities",
														":id",
														"download"
													],
													"variable": [
														{
															"key": "id",
															"value": "44454440",
															"description": "(Required) Supervision Identity identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Search for sorted and paged Supervision Identities\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/supervision-identities?page=0&size=100&pagesize=100&page-size=100&sort=id:asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"supervision-identities"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "size",
											"value": "100"
										},
										{
											"key": "pagesize",
											"value": "100"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Search for sorted and paged supervision identities"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/supervision-identities?page=0&size=100&pagesize=100&page-size=100&sort=id:asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"supervision-identities"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "size",
													"value": "100"
												},
												{
													"key": "pagesize",
													"value": "100"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"displayName\": \"Supervision Identity\",\n      \"commonName\": \"Jamf Identity - Supervision Identity\",\n      \"expirationDate\": \"2000-10-31\"\n    },\n    {\n      \"id\": 1,\n      \"displayName\": \"Supervision Identity\",\n      \"commonName\": \"Jamf Identity - Supervision Identity\",\n      \"expirationDate\": \"2000-10-31\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create a Supervision Identity for the supplied information\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Supervision Identity\",\n  \"password\": \"jamf1234\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/supervision-identities",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"supervision-identities"
									]
								},
								"description": "Creates a Supervision Identity for the supplied information"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"Supervision Identity\",\n  \"password\": \"jamf1234\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/supervision-identities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"supervision-identities"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"displayName\": \"Supervision Identity\",\n  \"commonName\": \"Jamf Identity - Supervision Identity\",\n  \"expirationDate\": \"2000-10-31\"\n}"
								},
								{
									"name": "Something went wrong",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"Supervision Identity\",\n  \"password\": \"jamf1234\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/supervision-identities",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"supervision-identities"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Upload the Supervision Identity .p12 file\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Supervision Identity\",\n  \"password\": \"jamf1234\",\n  \"certificateData\": \"1/hMlRiIcb5mpUWT+uMeXb76QL==\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/supervision-identities/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"supervision-identities",
										"upload"
									]
								},
								"description": "Uploads the Supervision Identity .p12 file"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"Supervision Identity\",\n  \"password\": \"jamf1234\",\n  \"certificateData\": \"1/hMlRiIcb5mpUWT+uMeXb76QL==\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/supervision-identities/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"supervision-identities",
												"upload"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"displayName\": \"Supervision Identity\",\n  \"commonName\": \"Jamf Identity - Supervision Identity\",\n  \"expirationDate\": \"2000-10-31\"\n}"
								},
								{
									"name": "Something went wrong",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"Supervision Identity\",\n  \"password\": \"jamf1234\",\n  \"certificateData\": \"1/hMlRiIcb5mpUWT+uMeXb76QL==\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/supervision-identities/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"supervision-identities",
												"upload"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "system",
					"item": [
						{
							"name": "Set up fresh installed Jamf Pro Server\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"activationCode\": \"VFAB-YDAB-DFAB-UDAB-DEAB-EFAB-ABAB-DEAB\",\n  \"eulaAccepted\": false,\n  \"institutionName\": \"Jamf\",\n  \"jssUrl\": \"https://jamf.jamfcloud.com\",\n  \"password\": \"12345\",\n  \"username\": \"admin\",\n  \"email\": \"ITBob@jamf.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/system/initialize",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"initialize"
									]
								},
								"description": "Set up fresh installed Jamf Pro Server\n"
							},
							"response": [
								{
									"name": "Jamf Pro Server has been initialized",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activationCode\": \"VFAB-YDAB-DFAB-UDAB-DEAB-EFAB-ABAB-DEAB\",\n  \"eulaAccepted\": false,\n  \"institutionName\": \"Jamf\",\n  \"jssUrl\": \"https://jamf.jamfcloud.com\",\n  \"password\": \"12345\",\n  \"username\": \"admin\",\n  \"email\": \"ITBob@jamf.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/system/initialize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"system",
												"initialize"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "The following are codes returned by this call:\nINVALID_ACTIVATION_CODE - activation code provided is not valid or is expired\nINVALID_STATE - The system is in an invalid state to be initialized.\nFIELD_REQUIRED - A required field was not provided.  The fiel",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"activationCode\": \"VFAB-YDAB-DFAB-UDAB-DEAB-EFAB-ABAB-DEAB\",\n  \"eulaAccepted\": false,\n  \"institutionName\": \"Jamf\",\n  \"jssUrl\": \"https://jamf.jamfcloud.com\",\n  \"password\": \"12345\",\n  \"username\": \"admin\",\n  \"email\": \"ITBob@jamf.com\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/system/initialize",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"system",
												"initialize"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Provide Database Password during startup\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"12345\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/system/initialize-database-connection",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"system",
										"initialize-database-connection"
									]
								},
								"description": "Provide database password during startup. Endpoint is accessible when database password was not configured and Jamf Pro server has not been initialized yet."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"12345\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/system/initialize-database-connection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"system",
												"initialize-database-connection"
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Incorrect database password.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"12345\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/system/initialize-database-connection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"system",
												"initialize-database-connection"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								{
									"name": "Limit of requests per second was exceeded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"12345\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/system/initialize-database-connection",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"system",
												"initialize-database-connection"
											]
										}
									},
									"status": "Too Many Requests",
									"code": 429,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "teacher-app",
					"item": [
						{
							"name": "history",
							"item": [
								{
									"name": "Get Jamf Teacher app settings history\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/teacher-app/history?page=0&page-size=100&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"teacher-app",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter results. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: status, updated, version This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											]
										},
										"description": "Gets Jamf Teacher app settings history\n"
									},
									"response": [
										{
											"name": "Details of Jamf Teacher app settings history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/teacher-app/history?page=0&page-size=100&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"teacher-app",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add Jamf Teacher app settings history notes\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/teacher-app/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"teacher-app",
												"history"
											]
										},
										"description": "Adds Jamf Teacher app settings history notes\n"
									},
									"response": [
										{
											"name": "Notes to Jamf Teacher app settings history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/teacher-app/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"teacher-app",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "Jamf Teacher app history can not be saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/teacher-app/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"teacher-app",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get the Jamf Teacher settings that you have access to see\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/teacher-app",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teacher-app"
									]
								},
								"description": "Get the Jamf Teacher settings that you have access to see."
							},
							"response": [
								{
									"name": "List of Jamf Teacher settings",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/teacher-app",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"teacher-app"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"isEnabled\": true,\n  \"timezoneId\": \"Europe/Paris\",\n  \"autoClear\": \"05:30\",\n  \"maxRestrictionLengthSeconds\": 600,\n  \"displayNameType\": \"user\",\n  \"features\": {\n    \"isAllowAppLock\": true,\n    \"isAllowWebLock\": true,\n    \"isAllowRestrictions\": true,\n    \"isAllowAttentionScreen\": true,\n    \"isAllowClearPasscode\": true\n  },\n  \"safelistedApps\": [\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    },\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Update a Jamf Teacher settings object\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"isEnabled\": true,\n  \"timezoneId\": \"Europe/Paris\",\n  \"autoClear\": \"05:30\",\n  \"maxRestrictionLengthSeconds\": 600,\n  \"safelistedApps\": [\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    },\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/teacher-app",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"teacher-app"
									]
								},
								"description": "Update a Jamf Teacher settings object."
							},
							"response": [
								{
									"name": "Updated Jamf Teacher settings.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"isEnabled\": true,\n  \"timezoneId\": \"Europe/Paris\",\n  \"autoClear\": \"05:30\",\n  \"maxRestrictionLengthSeconds\": 600,\n  \"safelistedApps\": [\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    },\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/teacher-app",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"teacher-app"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"isEnabled\": true,\n  \"timezoneId\": \"Europe/Paris\",\n  \"autoClear\": \"05:30\",\n  \"maxRestrictionLengthSeconds\": 600,\n  \"displayNameType\": \"user\",\n  \"features\": {\n    \"isAllowAppLock\": true,\n    \"isAllowWebLock\": true,\n    \"isAllowRestrictions\": true,\n    \"isAllowAttentionScreen\": true,\n    \"isAllowClearPasscode\": true\n  },\n  \"safelistedApps\": [\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    },\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    }\n  ]\n}"
								},
								{
									"name": "Update Failed.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"isEnabled\": true,\n  \"timezoneId\": \"Europe/Paris\",\n  \"autoClear\": \"05:30\",\n  \"maxRestrictionLengthSeconds\": 600,\n  \"safelistedApps\": [\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    },\n    {\n      \"name\": \"Content Filter\",\n      \"bundleId\": \"com.jamf.parent\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/teacher-app",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"teacher-app"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "user/preferences/{key Id}",
					"item": [
						{
							"name": "Get the user setting for the authenticated user and key\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/user/preferences/:keyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"user",
										"preferences",
										":keyId"
									],
									"variable": [
										{
											"key": "keyId",
											"value": "in aute",
											"description": "(Required) user setting to be retrieved"
										}
									]
								},
								"description": "Gets the user setting for the authenticated user and key.\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/user/preferences/:keyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"user",
												"preferences",
												":keyId"
											],
											"variable": [
												{
													"key": "keyId",
													"value": "in aute",
													"description": "(Required) user setting to be retrieved"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Persist the user setting\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/user/preferences/:keyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"user",
										"preferences",
										":keyId"
									],
									"variable": [
										{
											"key": "keyId",
											"value": "in aute",
											"description": "(Required) unique key of user setting to be persisted"
										}
									]
								},
								"description": "Persists the user setting\n"
							},
							"response": [
								{
									"name": "setting sucessfully updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/user/preferences/:keyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"user",
												"preferences",
												":keyId"
											],
											"variable": [
												{
													"key": "keyId",
													"value": "in aute",
													"description": "(Required) unique key of user setting to be persisted"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{}"
								}
							]
						},
						{
							"name": "Remove specified setting for authenticated user\n",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v1/user/preferences/:keyId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"user",
										"preferences",
										":keyId"
									],
									"variable": [
										{
											"key": "keyId",
											"value": "in aute",
											"description": "(Required) unique key of user setting to be persisted"
										}
									]
								},
								"description": "Remove specified setting for authenticated user\n"
							},
							"response": [
								{
									"name": "setting was deleted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/user/preferences/:keyId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"user",
												"preferences",
												":keyId"
											],
											"variable": [
												{
													"key": "keyId",
													"value": "in aute",
													"description": "(Required) unique key of user setting to be persisted"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "volume-purchasing-locations",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Retrieve a Volume Purchasing Location with the supplied id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-locations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Volume Purchasing Location identifier"
												}
											]
										},
										"description": "Retrieves a Volume Purchasing Location with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Location identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Example Location\",\n  \"totalPurchasedLicenses\": 1,\n  \"totalUsedLicenses\": 1,\n  \"id\": \"1\",\n  \"appleId\": \"testUser@apple.com\",\n  \"organizationName\": \"Jamf\",\n  \"tokenExpiration\": \"2022-04-25T21:09:31.661Z\",\n  \"countryCode\": \"US\",\n  \"locationName\": \"Example Location\",\n  \"clientContextMismatch\": false,\n  \"automaticallyPopulatePurchasedContent\": false,\n  \"sendNotificationWhenNoLongerAssigned\": false,\n  \"autoRegisterManagedUsers\": false,\n  \"siteId\": \"1\",\n  \"content\": [\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licenseCountTotal\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licenseCountInUse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licenseCountReported\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iconUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"contentType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pricingParam\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"adamId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licenseCountTotal\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licenseCountInUse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licenseCountReported\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iconUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"contentType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pricingParam\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"adamId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Volume Purchasing Location with that id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Location identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a Volume Purchasing Location with the supplied id",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-locations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Volume Purchasing Location identifier"
												}
											]
										},
										"description": "Deletes a Volume Purchasing Location with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Location identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Specified Volume Purchasing Location object does not exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Location identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update a Volume Purchasing Location",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/merge-patch+json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[object Object]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-locations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Volume Purchasing Location identifier"
												}
											]
										},
										"description": "Updates a Volume Purchasing Location"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[object Object]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Location identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Example Location\",\n  \"totalPurchasedLicenses\": 1,\n  \"totalUsedLicenses\": 1,\n  \"id\": \"1\",\n  \"appleId\": \"testUser@apple.com\",\n  \"organizationName\": \"Jamf\",\n  \"tokenExpiration\": \"2022-04-25T21:09:31.661Z\",\n  \"countryCode\": \"US\",\n  \"locationName\": \"Example Location\",\n  \"clientContextMismatch\": false,\n  \"automaticallyPopulatePurchasedContent\": false,\n  \"sendNotificationWhenNoLongerAssigned\": false,\n  \"autoRegisterManagedUsers\": false,\n  \"siteId\": \"1\",\n  \"content\": [\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licenseCountTotal\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licenseCountInUse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licenseCountReported\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iconUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"contentType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pricingParam\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"adamId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licenseCountTotal\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licenseCountInUse\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"licenseCountReported\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iconUrl\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceTypes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"contentType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"pricingParam\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"adamId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[object Object]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Location identifier"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Volume Purchasing Location with that id does not exist",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[object Object]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Location identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "There was an error applying the patch",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[object Object]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Location identifier"
														}
													]
												}
											},
											"status": "Unprocessable Entity (WebDAV) (RFC 4918)",
											"code": 422,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get specified Volume Purchasing Location history object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id/history?page=0&page-size=100&sort=date:desc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-locations",
												":id",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "date:desc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort is date:desc. Multiple sort criteria are supported and must be separated with a comma. "
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of Volume Purchasing Location history record"
												}
											]
										},
										"description": "Gets specified Volume Purchasing Location history object\n"
									},
									"response": [
										{
											"name": "Details of Volume Purchasing Location history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id/history?page=0&page-size=100&sort=date:desc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc"
														},
														{
															"key": "filter",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of Volume Purchasing Location history record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										},
										{
											"name": "Specified Volume Purchasing Location object does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id/history?page=0&page-size=100&sort=date:desc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc"
														},
														{
															"key": "filter",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of Volume Purchasing Location history record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Reclaim a Volume Purchasing Location with the supplied id",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id/reclaim",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-locations",
												":id",
												"reclaim"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Volume Purchasing Location identifier"
												}
											]
										},
										"description": "Reclaims a Volume Purchasing Location with the supplied id"
									},
									"response": [
										{
											"name": "Request accepted",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id/reclaim",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id",
														"reclaim"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Location identifier"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Revoke licenses for a Volume Purchasing Location with the supplied id",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id/revoke-licenses",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-locations",
												":id",
												"revoke-licenses"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Volume Purchasing Location identifier"
												}
											]
										},
										"description": "Revokes licenses for a Volume Purchasing Location with the supplied id. The licenses must be revokable - any asset whose licenses are irrevocable will not be revoked."
									},
									"response": [
										{
											"name": "Request accepted",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id/revoke-licenses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id",
														"revoke-licenses"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Location identifier"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Volume Purchasing Location with that id does not exist",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-locations/:id/revoke-licenses",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-locations",
														":id",
														"revoke-licenses"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Location identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve Volume Purchasing Locations",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/volume-purchasing-locations?page=0&page-size=100&sort=id:asc&filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"volume-purchasing-locations"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma."
										},
										{
											"key": "filter",
											"value": "",
											"description": "Query in the RSQL format, allowing to filter Volume Purchasing Location collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name, appleId, organizationName, tokenExpiration, countryCode, locationName, automaticallyPopulatePurchasedContent, and sendNotificationWhenNoLongerAssigned. This param can be combined with paging and sorting."
										}
									]
								},
								"description": "Retrieves Volume Purchasing Locations"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-locations?page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-locations"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												},
												{
													"key": "filter",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"name\": \"Example Location\",\n      \"totalPurchasedLicenses\": 1,\n      \"totalUsedLicenses\": 1,\n      \"id\": \"1\",\n      \"appleId\": \"testUser@apple.com\",\n      \"organizationName\": \"Jamf\",\n      \"tokenExpiration\": \"2022-04-25T21:09:31.661Z\",\n      \"countryCode\": \"US\",\n      \"locationName\": \"Example Location\",\n      \"clientContextMismatch\": false,\n      \"automaticallyPopulatePurchasedContent\": false,\n      \"sendNotificationWhenNoLongerAssigned\": false,\n      \"autoRegisterManagedUsers\": false,\n      \"siteId\": \"1\"\n    },\n    {\n      \"name\": \"Example Location\",\n      \"totalPurchasedLicenses\": 1,\n      \"totalUsedLicenses\": 1,\n      \"id\": \"1\",\n      \"appleId\": \"testUser@apple.com\",\n      \"organizationName\": \"Jamf\",\n      \"tokenExpiration\": \"2022-04-25T21:09:31.661Z\",\n      \"countryCode\": \"US\",\n      \"locationName\": \"Example Location\",\n      \"clientContextMismatch\": false,\n      \"automaticallyPopulatePurchasedContent\": false,\n      \"sendNotificationWhenNoLongerAssigned\": false,\n      \"autoRegisterManagedUsers\": false,\n      \"siteId\": \"1\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create a Volume Purchasing Location",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"serviceToken\": \"eyJleHBEYXRlIjoiMjAyMi0wMy0yOVQxNTozNjoyNiswMDAwIiwidG9rZW4iOiJWR2hwY3lCcGN5QnViM1FnWVNCMGIydGxiaTRnU0c5d1pXWjFiR3g1SUdsMElHeHZiMnR6SUd4cGEyVWdZU0IwYjJ0bGJpd2dZblYwSUdsMEozTWdibTkwTGc9PSIsIm9yZ05hbWUiOiJFeGFtcGxlIE9yZyJ9\",\n  \"name\": \"Example Location\",\n  \"automaticallyPopulatePurchasedContent\": false,\n  \"sendNotificationWhenNoLongerAssigned\": false,\n  \"autoRegisterManagedUsers\": false,\n  \"siteId\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/volume-purchasing-locations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"volume-purchasing-locations"
									]
								},
								"description": "Creates a Volume Purchasing Location using an sToken"
							},
							"response": [
								{
									"name": "Volume Purchasing Location was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"serviceToken\": \"eyJleHBEYXRlIjoiMjAyMi0wMy0yOVQxNTozNjoyNiswMDAwIiwidG9rZW4iOiJWR2hwY3lCcGN5QnViM1FnWVNCMGIydGxiaTRnU0c5d1pXWjFiR3g1SUdsMElHeHZiMnR6SUd4cGEyVWdZU0IwYjJ0bGJpd2dZblYwSUdsMEozTWdibTkwTGc9PSIsIm9yZ05hbWUiOiJFeGFtcGxlIE9yZyJ9\",\n  \"name\": \"Example Location\",\n  \"automaticallyPopulatePurchasedContent\": false,\n  \"sendNotificationWhenNoLongerAssigned\": false,\n  \"autoRegisterManagedUsers\": false,\n  \"siteId\": \"1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-locations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"serviceToken\": \"eyJleHBEYXRlIjoiMjAyMi0wMy0yOVQxNTozNjoyNiswMDAwIiwidG9rZW4iOiJWR2hwY3lCcGN5QnViM1FnWVNCMGIydGxiaTRnU0c5d1pXWjFiR3g1SUdsMElHeHZiMnR6SUd4cGEyVWdZU0IwYjJ0bGJpd2dZblYwSUdsMEozTWdibTkwTGc9PSIsIm9yZ05hbWUiOiJFeGFtcGxlIE9yZyJ9\",\n  \"name\": \"Example Location\",\n  \"automaticallyPopulatePurchasedContent\": false,\n  \"sendNotificationWhenNoLongerAssigned\": false,\n  \"autoRegisterManagedUsers\": false,\n  \"siteId\": \"1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-locations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-locations"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "volume-purchasing-subscriptions",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Retrieve a Volume Purchasing Subscription with the supplied id",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-subscriptions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Volume Purchasing Subscription identifier"
												}
											]
										},
										"description": "Retrieves a Volume Purchasing Subscription with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-subscriptions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Subscription identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Example\",\n  \"enabled\": true,\n  \"triggers\": [\n    \"NO_MORE_LICENSES\",\n    \"NO_MORE_LICENSES\"\n  ],\n  \"locationIds\": [\n    \"1\",\n    \"1\"\n  ],\n  \"internalRecipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"externalRecipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"siteId\": \"1\",\n  \"id\": \"1\"\n}"
										},
										{
											"name": "Volume Purchasing Subscription with that id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-subscriptions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Subscription identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update a Volume Purchasing Subscription",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Example\",\n  \"enabled\": true,\n  \"triggers\": [\n    \"NO_MORE_LICENSES\",\n    \"NO_MORE_LICENSES\"\n  ],\n  \"locationIds\": [\n    \"1\",\n    \"1\"\n  ],\n  \"internalRecipients\": [\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    },\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    }\n  ],\n  \"externalRecipients\": [\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    },\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    }\n  ],\n  \"siteId\": \"1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-subscriptions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Volume Purchasing Subscription identifier"
												}
											]
										},
										"description": "Updates a Volume Purchasing Subscription"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Example\",\n  \"enabled\": true,\n  \"triggers\": [\n    \"NO_MORE_LICENSES\",\n    \"NO_MORE_LICENSES\"\n  ],\n  \"locationIds\": [\n    \"1\",\n    \"1\"\n  ],\n  \"internalRecipients\": [\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    },\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    }\n  ],\n  \"externalRecipients\": [\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    },\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    }\n  ],\n  \"siteId\": \"1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-subscriptions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Subscription identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"name\": \"Example\",\n  \"enabled\": true,\n  \"triggers\": [\n    \"NO_MORE_LICENSES\",\n    \"NO_MORE_LICENSES\"\n  ],\n  \"locationIds\": [\n    \"1\",\n    \"1\"\n  ],\n  \"internalRecipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"externalRecipients\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"siteId\": \"1\",\n  \"id\": \"1\"\n}"
										},
										{
											"name": "Volume Purchasing Subscription with that id does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Example\",\n  \"enabled\": true,\n  \"triggers\": [\n    \"NO_MORE_LICENSES\",\n    \"NO_MORE_LICENSES\"\n  ],\n  \"locationIds\": [\n    \"1\",\n    \"1\"\n  ],\n  \"internalRecipients\": [\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    },\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    }\n  ],\n  \"externalRecipients\": [\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    },\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    }\n  ],\n  \"siteId\": \"1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-subscriptions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Subscription identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Failed to update volume purchasing subscription",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Example\",\n  \"enabled\": true,\n  \"triggers\": [\n    \"NO_MORE_LICENSES\",\n    \"NO_MORE_LICENSES\"\n  ],\n  \"locationIds\": [\n    \"1\",\n    \"1\"\n  ],\n  \"internalRecipients\": [\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    },\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    }\n  ],\n  \"externalRecipients\": [\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    },\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    }\n  ],\n  \"siteId\": \"1\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-subscriptions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Subscription identifier"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a Volume Purchasing Subscription with the supplied id",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-subscriptions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Volume Purchasing Subscription identifier"
												}
											]
										},
										"description": "Deletes a Volume Purchasing Subscription with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-subscriptions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Subscription identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "VPP Subscription with that id does not exist",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v1",
														"volume-purchasing-subscriptions",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Volume Purchasing Subscription identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve Volume Purchasing Subscriptions",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions?page=0&page-size=100&sort=id:asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"volume-purchasing-subscriptions"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Allowable properties are id, name, and enabled."
										}
									]
								},
								"description": "Retrieves Volume Purchasing Subscriptions"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions?page=0&page-size=100&sort=id:asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-subscriptions"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create a Volume Purchasing Subscription",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Example\",\n  \"enabled\": true,\n  \"triggers\": [\n    \"NO_MORE_LICENSES\",\n    \"NO_MORE_LICENSES\"\n  ],\n  \"locationIds\": [\n    \"1\",\n    \"1\"\n  ],\n  \"internalRecipients\": [\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    },\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    }\n  ],\n  \"externalRecipients\": [\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    },\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    }\n  ],\n  \"siteId\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"volume-purchasing-subscriptions"
									]
								},
								"description": "Creates a Volume Purchasing Subscription"
							},
							"response": [
								{
									"name": "Volume Purchasing Subscription was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Example\",\n  \"enabled\": true,\n  \"triggers\": [\n    \"NO_MORE_LICENSES\",\n    \"NO_MORE_LICENSES\"\n  ],\n  \"locationIds\": [\n    \"1\",\n    \"1\"\n  ],\n  \"internalRecipients\": [\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    },\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    }\n  ],\n  \"externalRecipients\": [\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    },\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    }\n  ],\n  \"siteId\": \"1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-subscriptions"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Example\",\n  \"enabled\": true,\n  \"triggers\": [\n    \"NO_MORE_LICENSES\",\n    \"NO_MORE_LICENSES\"\n  ],\n  \"locationIds\": [\n    \"1\",\n    \"1\"\n  ],\n  \"internalRecipients\": [\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    },\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    }\n  ],\n  \"externalRecipients\": [\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    },\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    }\n  ],\n  \"siteId\": \"1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-subscriptions"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								{
									"name": "Failed to create volume purchasing subscription",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Example\",\n  \"enabled\": true,\n  \"triggers\": [\n    \"NO_MORE_LICENSES\",\n    \"NO_MORE_LICENSES\"\n  ],\n  \"locationIds\": [\n    \"1\",\n    \"1\"\n  ],\n  \"internalRecipients\": [\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    },\n    {\n      \"accountId\": \"1\",\n      \"frequency\": \"DAILY\"\n    }\n  ],\n  \"externalRecipients\": [\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    },\n    {\n      \"email\": \"bob@example.com\",\n      \"name\": \"Bob Exampleman\"\n    }\n  ],\n  \"siteId\": \"1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v1/volume-purchasing-subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v1",
												"volume-purchasing-subscriptions"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Application Dynamics Config object\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/app-dynamics/script-configuration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"app-dynamics",
								"script-configuration"
							]
						},
						"description": "Gets `AppDynamicsConfig` object.\nDetails for using the response as script configuration are available in the official documentation - https://docs.appdynamics.com/display/PRO45/Configure+the+JavaScript+Agent\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/app-dynamics/script-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"app-dynamics",
										"script-configuration"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"adrumExtUrlHttp\": \"http://adrum.example.com\",\n  \"adrumExtUrlHttps\": \"https://adrum.example.com\",\n  \"adrumScriptHttp\": \"http://adrum.example.com/adrum/adrum.js\",\n  \"adrumScriptHttps\": \"https://adrum.example.com/adrum/adrum.js\",\n  \"appKey\": \"AAA-BBB-CCC\",\n  \"beaconUrlHttp\": \"http://beacon.example.com\",\n  \"beaconUrlHttps\": \"https://beacon.example.com\",\n  \"enableEum\": false\n}"
						},
						{
							"name": "AppDynamics script configuration may be obtained only when AppDynamics monitoring tool is enabled.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/app-dynamics/script-configuration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"app-dynamics",
										"script-configuration"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Return a list of Countries and the associated Codes\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/app-store-country-codes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"app-store-country-codes"
							]
						},
						"description": "Returns a list of countries and the associated codes that can be use for the App Store locale\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/app-store-country-codes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"app-store-country-codes"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"countryCodes\": [\n    {\n      \"code\": \"US\",\n      \"name\": \"United States\"\n    },\n    {\n      \"code\": \"US\",\n      \"name\": \"United States\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get mappings for OnPrem Ldap configuration with given id.",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/classic-ldap/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"classic-ldap",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "in aute",
									"description": "(Required) OnPrem Ldap identifier"
								}
							]
						},
						"description": "Get mappings for OnPrem Ldap configuration with given id."
					},
					"response": [
						{
							"name": "OnPrem Ldap mappings returned.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/classic-ldap/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"classic-ldap",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "in aute",
											"description": "(Required) OnPrem Ldap identifier"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"userGroupObjectMapGroupNameTo\": \"name\",\n  \"userGroupObjectMapIdTo\": \"name\",\n  \"userGroupObjectMapUuidTo\": \"uid\",\n  \"userObjectMapBuildingTo\": \"\",\n  \"userObjectMapDepartmentTo\": \"departmentNumber\",\n  \"userObjectMapEmailTo\": \"mail\",\n  \"userObjectMapIdTo\": \"mail\",\n  \"userObjectMapPhoneTo\": \"\",\n  \"userObjectMapPositionTo\": \"title\",\n  \"userObjectMapRealNameTo\": \"displayName\",\n  \"userObjectMapRoomTo\": \"\",\n  \"userObjectMapUsernameTo\": \"uid\",\n  \"userObjectMapUuidTo\": \"uid\"\n}"
						},
						{
							"name": "Id can only be a number.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/classic-ldap/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"classic-ldap",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "in aute",
											"description": "(Required) OnPrem Ldap identifier"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						},
						{
							"name": "Specified OnPrem Ldap configuration does not exist.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/classic-ldap/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"classic-ldap",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "in aute",
											"description": "(Required) OnPrem Ldap identifier"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Returns the list of all computer groups\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/computer-groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"computer-groups"
							]
						},
						"description": "Use it to get the list of all computer groups.\n"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/computer-groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"computer-groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"1\",\n    \"name\": \"All Managed Computers\",\n    \"smartGroup\": true\n  },\n  {\n    \"id\": \"1\",\n    \"name\": \"All Managed Computers\",\n    \"smartGroup\": true\n  }\n]"
						}
					]
				},
				{
					"name": "Recalculate a smart group for the given id\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/computers/:id/recalculate-smart-groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"computers",
								":id",
								"recalculate-smart-groups"
							],
							"variable": [
								{
									"key": "id",
									"value": "44454440",
									"description": "(Required) id of computer"
								}
							]
						},
						"description": "Recalculates a smart group for the given id and then\nreturns the count of smart groups the computer falls into\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/computers/:id/recalculate-smart-groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"computers",
										":id",
										"recalculate-smart-groups"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) id of computer"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"count\": 3\n}"
						},
						{
							"name": "smart group not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/computers/:id/recalculate-smart-groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"computers",
										":id",
										"recalculate-smart-groups"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) id of computer"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Deploy packages using MDM",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"manifest\": {\n    \"bundleId\": \"com.jamf.example\",\n    \"bundleVersion\": \"0.1.0\",\n    \"hash\": \"dcb02a41cd6d842943459a88c96a5f72\",\n    \"hashType\": \"MD5\",\n    \"sizeInBytes\": 12345,\n    \"title\": \"Title\",\n    \"url\": \"https://example.jamf.com/this/package\",\n    \"displayImageUrl\": \"https://example.jamf.com/img/display/this/package.jpg\",\n    \"fullSizeImageUrl\": \"https://example.jamf.com/img/full/this/package.jpg\",\n    \"subtitle\": \"Subtitle\"\n  },\n  \"installAsManaged\": false,\n  \"devices\": [\n    1,\n    2,\n    3\n  ],\n  \"groupId\": \"1\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/deploy-package?verbose=true",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"deploy-package"
							],
							"query": [
								{
									"key": "verbose",
									"value": "true",
									"description": "Enables the 'verbose' response, which includes information about the commands queued as well as information about commands that failed to queue."
								}
							]
						},
						"description": "Deploys packages to macOS devices using the InstallEnterpriseApplication MDM command."
					},
					"response": [
						{
							"name": "Package deployment was successfully processed. See response body for further information.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"manifest\": {\n    \"bundleId\": \"com.jamf.example\",\n    \"bundleVersion\": \"0.1.0\",\n    \"hash\": \"dcb02a41cd6d842943459a88c96a5f72\",\n    \"hashType\": \"MD5\",\n    \"sizeInBytes\": 12345,\n    \"title\": \"Title\",\n    \"url\": \"https://example.jamf.com/this/package\",\n    \"displayImageUrl\": \"https://example.jamf.com/img/display/this/package.jpg\",\n    \"fullSizeImageUrl\": \"https://example.jamf.com/img/full/this/package.jpg\",\n    \"subtitle\": \"Subtitle\"\n  },\n  \"installAsManaged\": false,\n  \"devices\": [\n    1,\n    2,\n    3\n  ],\n  \"groupId\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/deploy-package?verbose=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"deploy-package"
									],
									"query": [
										{
											"key": "verbose",
											"value": "true"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"queuedCommands\": [\n    {\n      \"device\": 1,\n      \"commandUuid\": \"aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937\"\n    },\n    {\n      \"device\": 1,\n      \"commandUuid\": \"aaaaaaaa-3f1e-4b3a-a5b3-ca0cd7430937\"\n    }\n  ],\n  \"errors\": [\n    {\n      \"device\": 2,\n      \"group\": 3,\n      \"reason\": \"Device does not support the InstallEnterpriseApplication command\"\n    },\n    {\n      \"device\": 2,\n      \"group\": 3,\n      \"reason\": \"Device does not support the InstallEnterpriseApplication command\"\n    }\n  ]\n}"
						},
						{
							"name": "Package deployment was queued up",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"manifest\": {\n    \"bundleId\": \"com.jamf.example\",\n    \"bundleVersion\": \"0.1.0\",\n    \"hash\": \"dcb02a41cd6d842943459a88c96a5f72\",\n    \"hashType\": \"MD5\",\n    \"sizeInBytes\": 12345,\n    \"title\": \"Title\",\n    \"url\": \"https://example.jamf.com/this/package\",\n    \"displayImageUrl\": \"https://example.jamf.com/img/display/this/package.jpg\",\n    \"fullSizeImageUrl\": \"https://example.jamf.com/img/full/this/package.jpg\",\n    \"subtitle\": \"Subtitle\"\n  },\n  \"installAsManaged\": false,\n  \"devices\": [\n    1,\n    2,\n    3\n  ],\n  \"groupId\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/deploy-package?verbose=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"deploy-package"
									],
									"query": [
										{
											"key": "verbose",
											"value": "true"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Insufficient privileges to perform this action or Package Deployment is not enabled.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"manifest\": {\n    \"bundleId\": \"com.jamf.example\",\n    \"bundleVersion\": \"0.1.0\",\n    \"hash\": \"dcb02a41cd6d842943459a88c96a5f72\",\n    \"hashType\": \"MD5\",\n    \"sizeInBytes\": 12345,\n    \"title\": \"Title\",\n    \"url\": \"https://example.jamf.com/this/package\",\n    \"displayImageUrl\": \"https://example.jamf.com/img/display/this/package.jpg\",\n    \"fullSizeImageUrl\": \"https://example.jamf.com/img/full/this/package.jpg\",\n    \"subtitle\": \"Subtitle\"\n  },\n  \"installAsManaged\": false,\n  \"devices\": [\n    1,\n    2,\n    3\n  ],\n  \"groupId\": \"1\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/deploy-package?verbose=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"deploy-package"
									],
									"query": [
										{
											"key": "verbose",
											"value": "true"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get statistics about managed/unmanaged devices and computers in the inventory\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/inventory-information",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"inventory-information"
							]
						},
						"description": "Gets statistics about managed/unmanaged devices and computers in the inventory.\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/inventory-information",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"inventory-information"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"managedComputers\": 1200,\n  \"unmanagedComputers\": 1100,\n  \"managedDevices\": 1200,\n  \"unmanagedDevices\": 1100\n}"
						}
					]
				},
				{
					"name": "Redeploy Jamf Management Framework\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/jamf-management-framework/redeploy/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"jamf-management-framework",
								"redeploy",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "in aute",
									"description": "(Required) instance id of computer"
								}
							]
						},
						"description": "Redeploys the Jamf Management Framework for enrolled device\n"
					},
					"response": [
						{
							"name": "Command successfully queued to redeploy the Jamf Managment Framework",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-management-framework/redeploy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-management-framework",
										"redeploy",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "in aute",
											"description": "(Required) instance id of computer"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"deviceId\": \"1\",\n  \"commandUuid\": \"f5965c4f-0db4-4dc4-9f37-6f1dad4e939c\"\n}"
						},
						{
							"name": "Computer with given id does not exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-management-framework/redeploy/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-management-framework",
										"redeploy",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "in aute",
											"description": "(Required) instance id of computer"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get the packages for a given Jamf application\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/jamf-package?application=protect",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"jamf-package"
							],
							"query": [
								{
									"key": "application",
									"value": "protect",
									"description": "(Required) The Jamf Application key. The only supported values are protect and connect."
								}
							]
						},
						"description": "Get the packages for a given Jamf application."
					},
					"response": [
						{
							"name": "List of packages for the given application.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-package?application=protect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-package"
									],
									"query": [
										{
											"key": "application",
											"value": "protect"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"B84F9904-868B-4862-A8F5-33706AADED71\",\n    \"filename\": \"JamfProtect-1.2.2.pkg\",\n    \"version\": \"1.2.2\",\n    \"created\": \"1970-01-01T00:00:00Z\",\n    \"url\": \"https://example.jamf.com/path/to/JamfProtect-1.2.2.pkg\"\n  },\n  {\n    \"id\": \"B84F9904-868B-4862-A8F5-33706AADED71\",\n    \"filename\": \"JamfProtect-1.2.2.pkg\",\n    \"version\": \"1.2.2\",\n    \"created\": \"1970-01-01T00:00:00Z\",\n    \"url\": \"https://example.jamf.com/path/to/JamfProtect-1.2.2.pkg\"\n  }\n]"
						},
						{
							"name": "Invalid Content. It is possible that there is no application with the given application id. Or Cloud Services Connection has not been established.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-package?application=protect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-package"
									],
									"query": [
										{
											"key": "application",
											"value": "protect"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get basic information about the Jamf Pro Server\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/jamf-pro-information",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"jamf-pro-information"
							]
						},
						"description": "Deprecated version of the endpoint.\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-pro-information",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-pro-information"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"isVppTokenEnabled\": false,\n  \"isDepAccountEnabled\": false,\n  \"isByodEnabled\": false,\n  \"isUserMigrationEnabled\": false,\n  \"isCloudDeploymentsEnabled\": false,\n  \"isPatchEnabled\": false,\n  \"isSsoSamlEnabled\": false,\n  \"isSmtpEnabled\": false\n}"
						}
					]
				},
				{
					"name": "Return information about the Jamf Pro including the current version\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/jamf-pro-version",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"jamf-pro-version"
							]
						},
						"description": "Returns information about the Jamf Pro including the current version.\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/jamf-pro-version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"jamf-pro-version"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"version\": \"10.9.0\"\n}"
						}
					]
				},
				{
					"name": "Validate keystore for Cloud Identity Provider secure connection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fileBytes\": \"wpoJK9Cj2srJ//z=\",\n  \"fileName\": \"keystore.p12\",\n  \"password\": \"***\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/ldap-keystore/verify",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"ldap-keystore",
								"verify"
							]
						},
						"description": "Validate keystore for Cloud Identity Provider secure connection"
					},
					"response": [
						{
							"name": "Keystore verified.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileBytes\": \"wpoJK9Cj2srJ//z=\",\n  \"fileName\": \"keystore.p12\",\n  \"password\": \"***\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/ldap-keystore/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ldap-keystore",
										"verify"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"type\": \"PKCS12\",\n  \"expirationDate\": \"2030-02-21T12:05:47.244Z\",\n  \"subject\": \"ST=California, C=US, OU=GSuite, CN=LDAP Client, L=Mountain View, O=Google Inc.\",\n  \"fileName\": \"keystore.p12\"\n}"
						},
						{
							"name": "One or more invalid parameters",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"fileBytes\": \"wpoJK9Cj2srJ//z=\",\n  \"fileName\": \"keystore.p12\",\n  \"password\": \"***\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/ldap-keystore/verify",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"ldap-keystore",
										"verify"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Return locales that can be used in other features\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/locales",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"locales"
							]
						},
						"description": "Returns locales that can be used in other features.\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/locales",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"locales"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"description\": \"English (United States)\",\n    \"identifier\": \"en_US\"\n  },\n  {\n    \"description\": \"English (United States)\",\n    \"identifier\": \"en_US\"\n  }\n]"
						}
					]
				},
				{
					"name": "Retrieve the MDM Enrollment Profile\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/x-apple-aspen-config"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/mobile-device-enrollment-profile/:id/download-profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"mobile-device-enrollment-profile",
								":id",
								"download-profile"
							],
							"variable": [
								{
									"key": "id",
									"value": "in aute",
									"description": "(Required) MDM Enrollment Profile identifier"
								}
							]
						},
						"description": "Retrieve the MDM Enrollment Profile"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/mobile-device-enrollment-profile/:id/download-profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"mobile-device-enrollment-profile",
										":id",
										"download-profile"
									],
									"variable": [
										{
											"key": "id",
											"value": "in aute",
											"description": "(Required) MDM Enrollment Profile identifier"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/x-apple-aspen-config"
								}
							],
							"cookie": [],
							"body": "in aute"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/mobile-device-enrollment-profile/:id/download-profile",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"mobile-device-enrollment-profile",
										":id",
										"download-profile"
									],
									"variable": [
										{
											"key": "id",
											"value": "in aute",
											"description": "(Required) MDM Enrollment Profile identifier"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Return the list of all Mobile Device Groups\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/mobile-device-groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"mobile-device-groups"
							]
						},
						"description": "Returns the list of all mobile device groups.\n"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/mobile-device-groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"mobile-device-groups"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 1,\n    \"name\": \"All Managed iPads\",\n    \"isSmartGroup\": true\n  },\n  {\n    \"id\": 1,\n    \"name\": \"All Managed iPads\",\n    \"isSmartGroup\": true\n  }\n]"
						}
					]
				},
				{
					"name": "Search Mobile Devices\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"pageNumber\": 1,\n  \"pageSize\": 100,\n  \"isLoadToEnd\": false,\n  \"orderBy\": [\n    {\n      \"field\": \"Name\",\n      \"direction\": \"DESC\"\n    },\n    {\n      \"field\": \"Name\",\n      \"direction\": \"DESC\"\n    }\n  ],\n  \"udid\": \"2b6f0cc904d137be2e1730235f5664094b831186\",\n  \"macAddress\": \"ee:00:7c:f0:e5:aa\",\n  \"name\": \"Jan's MObile Device\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"osType\": \"IOS\",\n  \"isManaged\": false,\n  \"excludedIds\": [\n    1,\n    3\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/search-mobile-devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"search-mobile-devices"
							]
						},
						"description": "Search Mobile Devices"
					},
					"response": [
						{
							"name": "Found buildings matching search params.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"pageNumber\": 1,\n  \"pageSize\": 100,\n  \"isLoadToEnd\": false,\n  \"orderBy\": [\n    {\n      \"field\": \"Name\",\n      \"direction\": \"DESC\"\n    },\n    {\n      \"field\": \"Name\",\n      \"direction\": \"DESC\"\n    }\n  ],\n  \"udid\": \"2b6f0cc904d137be2e1730235f5664094b831186\",\n  \"macAddress\": \"ee:00:7c:f0:e5:aa\",\n  \"name\": \"Jan's MObile Device\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"osType\": \"IOS\",\n  \"isManaged\": false,\n  \"excludedIds\": [\n    1,\n    3\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v1/search-mobile-devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"search-mobile-devices"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"name\": \"iPad\",\n      \"serialNumber\": \"DMQVGC0DHLA0\",\n      \"wifiMacAddress\": \"C4:84:66:92:78:00\",\n      \"udid\": \"0dad565fb40b010a9e490440188063a378721069\",\n      \"phoneNumber\": \"651-555-5555 Ext111\",\n      \"model\": \"iPad 5th Generation (Wi-Fi)\",\n      \"modelIdentifier\": \"iPad6,11\",\n      \"username\": \"admin\",\n      \"type\": \"ios\",\n      \"softwareUpdateDeviceId\": \"J132AP\"\n    },\n    {\n      \"id\": 1,\n      \"name\": \"iPad\",\n      \"serialNumber\": \"DMQVGC0DHLA0\",\n      \"wifiMacAddress\": \"C4:84:66:92:78:00\",\n      \"udid\": \"0dad565fb40b010a9e490440188063a378721069\",\n      \"phoneNumber\": \"651-555-5555 Ext111\",\n      \"model\": \"iPad 5th Generation (Wi-Fi)\",\n      \"modelIdentifier\": \"iPad6,11\",\n      \"username\": \"admin\",\n      \"type\": \"ios\",\n      \"softwareUpdateDeviceId\": \"J132AP\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Find all sites\n",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/sites",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"sites"
							]
						},
						"description": "Find all sites.\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/sites",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"sites"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": \"1\",\n    \"name\": \"Eau Claire\"\n  },\n  {\n    \"id\": \"1\",\n    \"name\": \"Eau Claire\"\n  }\n]"
						}
					]
				},
				{
					"name": "Recalculate the smart group for the given id\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/smart-computer-groups/:id/recalculate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"smart-computer-groups",
								":id",
								"recalculate"
							],
							"variable": [
								{
									"key": "id",
									"value": "44454440",
									"description": "(Required) instance id of smart group"
								}
							]
						},
						"description": "Recalculates the smart group for the given id and then\nreturns the ids for the computers in the smart group\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/smart-computer-groups/:id/recalculate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"smart-computer-groups",
										":id",
										"recalculate"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) instance id of smart group"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"count\": 3\n}"
						},
						{
							"name": "smart group not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/smart-computer-groups/:id/recalculate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"smart-computer-groups",
										":id",
										"recalculate"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) instance id of smart group"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Recalculate a smart group for the given id then return the ids for the devices in the smart group\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/smart-mobile-device-groups/:id/recalculate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"smart-mobile-device-groups",
								":id",
								"recalculate"
							],
							"variable": [
								{
									"key": "id",
									"value": "44454440",
									"description": "(Required) instance id of smart group"
								}
							]
						},
						"description": "recalculates a smart group for the given id and then\nreturns the ids for the devices in the smart group\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/smart-mobile-device-groups/:id/recalculate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"smart-mobile-device-groups",
										":id",
										"recalculate"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) instance id of smart group"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"count\": 3\n}"
						},
						{
							"name": "smart group not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/smart-mobile-device-groups/:id/recalculate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"smart-mobile-device-groups",
										":id",
										"recalculate"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) instance id of smart group"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Recalculate the smart group for the given id and then return the ids for the users in the smart group\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/smart-user-groups/:id/recalculate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"smart-user-groups",
								":id",
								"recalculate"
							],
							"variable": [
								{
									"key": "id",
									"value": "44454440",
									"description": "(Required) instance id of smart group"
								}
							]
						},
						"description": "Recalculates the smart group for the given id and then\nreturns the ids for the users in the smart group\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/smart-user-groups/:id/recalculate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"smart-user-groups",
										":id",
										"recalculate"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) instance id of smart group"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"count\": 3\n}"
						},
						{
							"name": "smart group not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/smart-user-groups/:id/recalculate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"smart-user-groups",
										":id",
										"recalculate"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) instance id of smart group"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Return information about the currently supported Time Zones\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/time-zones",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"time-zones"
							]
						},
						"description": "Returns information about the currently supported time zones\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/time-zones",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"time-zones"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"zoneId\": \"America/Chicago\",\n    \"region\": \"America\",\n    \"displayName\": \"Chicago - CT (-0500)\"\n  },\n  {\n    \"zoneId\": \"America/Chicago\",\n    \"region\": \"America\",\n    \"displayName\": \"Chicago - CT (-0500)\"\n  }\n]"
						}
					]
				},
				{
					"name": "Recalculate a smart group for the given user id and then return the count of smart groups the user falls into\n",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/users/:id/recalculate-smart-groups",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"users",
								":id",
								"recalculate-smart-groups"
							],
							"variable": [
								{
									"key": "id",
									"value": "44454440",
									"description": "(Required) id of user"
								}
							]
						},
						"description": "Recalculates a smart group for the given user id and then\nreturns the count of smart groups the user falls into\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/users/:id/recalculate-smart-groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										":id",
										"recalculate-smart-groups"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) id of user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"count\": 3\n}"
						},
						{
							"name": "smart group not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v1/users/:id/recalculate-smart-groups",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v1",
										"users",
										":id",
										"recalculate-smart-groups"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) id of user"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				}
			]
		},
		{
			"name": "v2",
			"item": [
				{
					"name": "check-in",
					"item": [
						{
							"name": "history",
							"item": [
								{
									"name": "Get Client Check-In history object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/check-in/history?page=0&page-size=100&sort=date:desc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"check-in",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "date:desc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,username:asc "
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											]
										},
										"description": "Gets Client Check-In history object\n"
									},
									"response": [
										{
											"name": "Details of Client Check-In history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/check-in/history?page=0&page-size=100&sort=date:desc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"check-in",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": \"1\",\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": \"1\",\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add a Note to Client Check-In History\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/check-in/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"check-in",
												"history"
											]
										},
										"description": "Adds Client Check-In history object notes\n"
									},
									"response": [
										{
											"name": "Notes of Client Check-In history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/check-in/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"check-in",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "Client Check-In history can not be saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/check-in/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"check-in",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Client Check-In settings\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/check-in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"check-in"
									]
								},
								"description": "Gets `Client Check-In` object.\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/check-in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"check-in"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"checkInFrequency\": 15,\n  \"createHooks\": false,\n  \"hookLog\": false,\n  \"hookPolicies\": false,\n  \"hookHideRestore\": false,\n  \"hookMcx\": false,\n  \"backgroundHooks\": false,\n  \"hookDisplayStatus\": false,\n  \"createStartupScript\": false,\n  \"startupLog\": false,\n  \"startupPolicies\": false,\n  \"startupSsh\": false,\n  \"startupMcx\": false,\n  \"enableLocalConfigurationProfiles\": false\n}"
								}
							]
						},
						{
							"name": "Update Client Check-In object\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"checkInFrequency\": 15,\n  \"createHooks\": false,\n  \"hookLog\": false,\n  \"hookPolicies\": false,\n  \"hookHideRestore\": false,\n  \"hookMcx\": false,\n  \"backgroundHooks\": false,\n  \"hookDisplayStatus\": false,\n  \"createStartupScript\": false,\n  \"startupLog\": false,\n  \"startupPolicies\": false,\n  \"startupSsh\": false,\n  \"startupMcx\": false,\n  \"enableLocalConfigurationProfiles\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/check-in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"check-in"
									]
								},
								"description": "Update Client Check-In object\n"
							},
							"response": [
								{
									"name": "Client Check-In was updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"checkInFrequency\": 15,\n  \"createHooks\": false,\n  \"hookLog\": false,\n  \"hookPolicies\": false,\n  \"hookHideRestore\": false,\n  \"hookMcx\": false,\n  \"backgroundHooks\": false,\n  \"hookDisplayStatus\": false,\n  \"createStartupScript\": false,\n  \"startupLog\": false,\n  \"startupPolicies\": false,\n  \"startupSsh\": false,\n  \"startupMcx\": false,\n  \"enableLocalConfigurationProfiles\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/check-in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"check-in"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"checkInFrequency\": 15,\n  \"createHooks\": false,\n  \"hookLog\": false,\n  \"hookPolicies\": false,\n  \"hookHideRestore\": false,\n  \"hookMcx\": false,\n  \"backgroundHooks\": false,\n  \"hookDisplayStatus\": false,\n  \"createStartupScript\": false,\n  \"startupLog\": false,\n  \"startupPolicies\": false,\n  \"startupSsh\": false,\n  \"startupMcx\": false,\n  \"enableLocalConfigurationProfiles\": false\n}"
								}
							]
						}
					]
				},
				{
					"name": "cloud-ldaps",
					"item": [
						{
							"name": "defaults/{provider}",
							"item": [
								{
									"name": "Get default mappings",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/cloud-ldaps/defaults/:provider/mappings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"cloud-ldaps",
												"defaults",
												":provider",
												"mappings"
											],
											"variable": [
												{
													"key": "provider",
													"value": "google",
													"description": "(Required) Cloud Identity Provider name"
												}
											]
										},
										"description": "Get default mappings for Cloud Identity Provider Provider."
									},
									"response": [
										{
											"name": "Default mappings returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/defaults/:provider/mappings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														"defaults",
														":provider",
														"mappings"
													],
													"variable": [
														{
															"key": "provider",
															"value": "google",
															"description": "(Required) Cloud Identity Provider name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"userMappings\": {\n    \"building\": \"\",\n    \"department\": \"departmentNumber\",\n    \"emailAddress\": \"mail\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"inetOrgPerson\",\n    \"phone\": \"\",\n    \"position\": \"title\",\n    \"realName\": \"displayName\",\n    \"room\": \"\",\n    \"searchBase\": \"ou=Users\",\n    \"searchScope\": \"ALL_SUBTREES\",\n    \"userID\": \"mail\",\n    \"userUuid\": \"uid\",\n    \"username\": \"uid\",\n    \"additionalSearchBase\": \"\"\n  },\n  \"groupMappings\": {\n    \"groupID\": \"cn\",\n    \"groupName\": \"cn\",\n    \"groupUuid\": \"gidNumber\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"groupOfNames\",\n    \"searchBase\": \"ou=Groups\",\n    \"searchScope\": \"ALL_SUBTREES\"\n  },\n  \"membershipMappings\": {\n    \"groupMembershipMapping\": \"memberOf\"\n  }\n}"
										},
										{
											"name": "Files cannot be loaded.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/defaults/:provider/mappings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														"defaults",
														":provider",
														"mappings"
													],
													"variable": [
														{
															"key": "provider",
															"value": "google",
															"description": "(Required) Cloud Identity Provider name"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "The provider name in the URL is invalid or not supported.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/defaults/:provider/mappings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														"defaults",
														":provider",
														"mappings"
													],
													"variable": [
														{
															"key": "provider",
															"value": "google",
															"description": "(Required) Cloud Identity Provider name"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get default server configuration",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/cloud-ldaps/defaults/:provider/server-configuration",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"cloud-ldaps",
												"defaults",
												":provider",
												"server-configuration"
											],
											"variable": [
												{
													"key": "provider",
													"value": "google",
													"description": "(Required) Cloud Identity Provider name"
												}
											]
										},
										"description": "Get default server configuration for Cloud Identity Provider Identity Provider."
									},
									"response": [
										{
											"name": "Default server configuration returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/defaults/:provider/server-configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														"defaults",
														":provider",
														"server-configuration"
													],
													"variable": [
														{
															"key": "provider",
															"value": "google",
															"description": "(Required) Cloud Identity Provider name"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1001\",\n  \"enabled\": true,\n  \"serverUrl\": \"ldap.google.com\",\n  \"domainName\": \"jamf.com\",\n  \"port\": 636,\n  \"keystore\": {\n    \"type\": \"PKCS12\",\n    \"expirationDate\": \"2030-02-21T12:05:47.244Z\",\n    \"subject\": \"ST=California, C=US, OU=GSuite, CN=LDAP Client, L=Mountain View, O=Google Inc.\",\n    \"fileName\": \"keystore.p12\"\n  },\n  \"connectionTimeout\": 15,\n  \"searchTimeout\": 60,\n  \"useWildcards\": true,\n  \"connectionType\": \"LDAPS\"\n}"
										},
										{
											"name": "Default server configuration cannot be loaded.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/defaults/:provider/server-configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														"defaults",
														":provider",
														"server-configuration"
													],
													"variable": [
														{
															"key": "provider",
															"value": "google",
															"description": "(Required) Cloud Identity Provider name"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "The provider name in the URL is invalid or not supported.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/defaults/:provider/server-configuration",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														"defaults",
														":provider",
														"server-configuration"
													],
													"variable": [
														{
															"key": "provider",
															"value": "google",
															"description": "(Required) Cloud Identity Provider name"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "connection",
									"item": [
										{
											"name": "Get bind connection pool statistics",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/connection/bind",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id",
														"connection",
														"bind"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												},
												"description": "Get all search connection pool for chosen Cloud Identity Provider.\nnumConnectionsClosedDefunct - The number of connections that have been closed as defunct.\nnumConnectionsClosedExpired - The number of connections that have been closed because they were expired.\nnumConnectionsClosedUnneeded - The number of connections that have been closed because they were no longer needed.\nnumFailedCheckouts - The number of failed attempts to check out a connection from the pool.\nnumFailedConnectionAttempts - The number of failed attempts to create a connection for use in the pool.\nnumReleasedValid - The number of valid connections released back to the pool.\nnumSuccessfulCheckouts - The number of successful attempts to check out a connection from the pool.\nnumSuccessfulCheckoutsNewConnection - The number of successful checkout attempts that had to create a new connection because none were available.\nnumSuccessfulConnectionAttempts - The number successful attempts to create a connection for use in the pool.\nmaximumAvailableConnections - The maximum number of connections that may be available in the pool at any time.\nnumSuccessfulCheckoutsWithoutWait - The number of successful checkout attempts that were able to take an existing connection without waiting.\nnumSuccessfulCheckoutsAfterWait - The number of successful checkout attempts that retrieved a connection from the pool after waiting for it to become available.\nnumAvailableConnections - The number of connections currently available for use in the pool.\n"
											},
											"response": [
												{
													"name": "Cloud Identity Provider bind connection pool statistics returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/connection/bind",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"connection",
																"bind"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"numConnectionsClosedDefunct\": 1,\n  \"numConnectionsClosedExpired\": 1,\n  \"numConnectionsClosedUnneeded\": 1,\n  \"numFailedCheckouts\": 1,\n  \"numFailedConnectionAttempts\": 1,\n  \"numReleasedValid\": 1,\n  \"numSuccessfulCheckouts\": 1,\n  \"numSuccessfulCheckoutsNewConnection\": 1,\n  \"numSuccessfulConnectionAttempts\": 1,\n  \"maximumAvailableConnections\": 1,\n  \"numSuccessfulCheckoutsWithoutWaiting\": 1,\n  \"numSuccessfulCheckoutsAfterWaiting\": 1,\n  \"numAvailableConnections\": 1\n}"
												},
												{
													"name": "Bind connection pool statistics data is not available.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/connection/bind",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"connection",
																"bind"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Cloud Identity Provider bind connection pool statistics does not exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/connection/bind",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"connection",
																"bind"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Get search connection pool statistics",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/connection/search",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id",
														"connection",
														"search"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												},
												"description": "Get all search connection pool for chosen Cloud Identity Provider.\nnumConnectionsClosedDefunct - The number of connections that have been closed as defunct.\nnumConnectionsClosedExpired - The number of connections that have been closed because they were expired.\nnumConnectionsClosedUnneeded - The number of connections that have been closed because they were no longer needed.\nnumFailedCheckouts - The number of failed attempts to check out a connection from the pool.\nnumFailedConnectionAttempts - The number of failed attempts to create a connection for use in the pool.\nnumReleasedValid - The number of valid connections released back to the pool.\nnumSuccessfulCheckouts - The number of successful attempts to check out a connection from the pool.\nnumSuccessfulCheckoutsNewConnection - The number of successful checkout attempts that had to create a new connection because none were available.\nnumSuccessfulConnectionAttempts - The number successful attempts to create a connection for use in the pool.\nmaximumAvailableConnections - The maximum number of connections that may be available in the pool at any time.\nnumSuccessfulCheckoutsWithoutWait - The number of successful checkout attempts that were able to take an existing connection without waiting.\nnumSuccessfulCheckoutsAfterWait - The number of successful checkout attempts that retrieved a connection from the pool after waiting for it to become available.\nnumAvailableConnections - The number of connections currently available for use in the pool.\n"
											},
											"response": [
												{
													"name": "Cloud Identity Provider search connection pool statistics returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/connection/search",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"connection",
																"search"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"numConnectionsClosedDefunct\": 1,\n  \"numConnectionsClosedExpired\": 1,\n  \"numConnectionsClosedUnneeded\": 1,\n  \"numFailedCheckouts\": 1,\n  \"numFailedConnectionAttempts\": 1,\n  \"numReleasedValid\": 1,\n  \"numSuccessfulCheckouts\": 1,\n  \"numSuccessfulCheckoutsNewConnection\": 1,\n  \"numSuccessfulConnectionAttempts\": 1,\n  \"maximumAvailableConnections\": 1,\n  \"numSuccessfulCheckoutsWithoutWaiting\": 1,\n  \"numSuccessfulCheckoutsAfterWaiting\": 1,\n  \"numAvailableConnections\": 1\n}"
												},
												{
													"name": "Search connection pool statistics data is not available.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/connection/search",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"connection",
																"search"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Cloud Identity Provider search connection pool statistics does not exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/connection/search",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"connection",
																"search"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Tests the communication with the specified cloud connection\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/connection/status",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id",
														"connection",
														"status"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												},
												"description": "Tests the communication with the specified cloud connection\n"
											},
											"response": [
												{
													"name": "Successfully connected to the specified cloud connection",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/connection/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"connection",
																"status"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"status\": \"Successfully connected\"\n}"
												},
												{
													"name": "One or more parameters were invalid.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/connection/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"connection",
																"status"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Cloud Identity Provider does not exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/connection/status",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"connection",
																"status"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "mappings",
									"item": [
										{
											"name": "Get mappings configurations for Cloud Identity Providers server configuration.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/mappings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id",
														"mappings"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												},
												"description": "Get all mappings configurations for Cloud Identity Providers server configuration."
											},
											"response": [
												{
													"name": "Cloud Identity Provider mappings configuration returned.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/mappings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"mappings"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"userMappings\": {\n    \"building\": \"\",\n    \"department\": \"departmentNumber\",\n    \"emailAddress\": \"mail\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"inetOrgPerson\",\n    \"phone\": \"\",\n    \"position\": \"title\",\n    \"realName\": \"displayName\",\n    \"room\": \"\",\n    \"searchBase\": \"ou=Users\",\n    \"searchScope\": \"ALL_SUBTREES\",\n    \"userID\": \"mail\",\n    \"userUuid\": \"uid\",\n    \"username\": \"uid\",\n    \"additionalSearchBase\": \"\"\n  },\n  \"groupMappings\": {\n    \"groupID\": \"cn\",\n    \"groupName\": \"cn\",\n    \"groupUuid\": \"gidNumber\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"groupOfNames\",\n    \"searchBase\": \"ou=Groups\",\n    \"searchScope\": \"ALL_SUBTREES\"\n  },\n  \"membershipMappings\": {\n    \"groupMembershipMapping\": \"memberOf\"\n  }\n}"
												},
												{
													"name": "Id can only be a number.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/mappings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"mappings"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Specified mappings settings for Cloud Identity Provider configuration do not exist.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/mappings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"mappings"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update Cloud Identity Provider mappings configuration.",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupMappings\": {\n    \"groupID\": \"cn\",\n    \"groupName\": \"cn\",\n    \"groupUuid\": \"gidNumber\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"groupOfNames\",\n    \"searchBase\": \"ou=Groups\",\n    \"searchScope\": \"ALL_SUBTREES\"\n  },\n  \"membershipMappings\": {\n    \"groupMembershipMapping\": \"memberOf\"\n  },\n  \"userMappings\": {\n    \"building\": \"\",\n    \"department\": \"departmentNumber\",\n    \"emailAddress\": \"mail\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"inetOrgPerson\",\n    \"phone\": \"\",\n    \"position\": \"title\",\n    \"realName\": \"displayName\",\n    \"room\": \"\",\n    \"searchBase\": \"ou=Users\",\n    \"searchScope\": \"ALL_SUBTREES\",\n    \"userID\": \"mail\",\n    \"userUuid\": \"uid\",\n    \"username\": \"uid\",\n    \"additionalSearchBase\": \"\"\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/mappings",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id",
														"mappings"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												},
												"description": "Update Cloud Identity Provider mappings configuration. Cannot be used for partial updates, all content body must be sent."
											},
											"response": [
												{
													"name": "Cloud Identity Provider mappings configuration updated.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groupMappings\": {\n    \"groupID\": \"cn\",\n    \"groupName\": \"cn\",\n    \"groupUuid\": \"gidNumber\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"groupOfNames\",\n    \"searchBase\": \"ou=Groups\",\n    \"searchScope\": \"ALL_SUBTREES\"\n  },\n  \"membershipMappings\": {\n    \"groupMembershipMapping\": \"memberOf\"\n  },\n  \"userMappings\": {\n    \"building\": \"\",\n    \"department\": \"departmentNumber\",\n    \"emailAddress\": \"mail\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"inetOrgPerson\",\n    \"phone\": \"\",\n    \"position\": \"title\",\n    \"realName\": \"displayName\",\n    \"room\": \"\",\n    \"searchBase\": \"ou=Users\",\n    \"searchScope\": \"ALL_SUBTREES\",\n    \"userID\": \"mail\",\n    \"userUuid\": \"uid\",\n    \"username\": \"uid\",\n    \"additionalSearchBase\": \"\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/mappings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"mappings"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"userMappings\": {\n    \"building\": \"\",\n    \"department\": \"departmentNumber\",\n    \"emailAddress\": \"mail\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"inetOrgPerson\",\n    \"phone\": \"\",\n    \"position\": \"title\",\n    \"realName\": \"displayName\",\n    \"room\": \"\",\n    \"searchBase\": \"ou=Users\",\n    \"searchScope\": \"ALL_SUBTREES\",\n    \"userID\": \"mail\",\n    \"userUuid\": \"uid\",\n    \"username\": \"uid\",\n    \"additionalSearchBase\": \"\"\n  },\n  \"groupMappings\": {\n    \"groupID\": \"cn\",\n    \"groupName\": \"cn\",\n    \"groupUuid\": \"gidNumber\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"groupOfNames\",\n    \"searchBase\": \"ou=Groups\",\n    \"searchScope\": \"ALL_SUBTREES\"\n  },\n  \"membershipMappings\": {\n    \"groupMembershipMapping\": \"memberOf\"\n  }\n}"
												},
												{
													"name": "One or more parameters were invalid.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groupMappings\": {\n    \"groupID\": \"cn\",\n    \"groupName\": \"cn\",\n    \"groupUuid\": \"gidNumber\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"groupOfNames\",\n    \"searchBase\": \"ou=Groups\",\n    \"searchScope\": \"ALL_SUBTREES\"\n  },\n  \"membershipMappings\": {\n    \"groupMembershipMapping\": \"memberOf\"\n  },\n  \"userMappings\": {\n    \"building\": \"\",\n    \"department\": \"departmentNumber\",\n    \"emailAddress\": \"mail\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"inetOrgPerson\",\n    \"phone\": \"\",\n    \"position\": \"title\",\n    \"realName\": \"displayName\",\n    \"room\": \"\",\n    \"searchBase\": \"ou=Users\",\n    \"searchScope\": \"ALL_SUBTREES\",\n    \"userID\": \"mail\",\n    \"userUuid\": \"uid\",\n    \"username\": \"uid\",\n    \"additionalSearchBase\": \"\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/mappings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"mappings"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Specified Cloud Identity Provider configuration does not exist.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groupMappings\": {\n    \"groupID\": \"cn\",\n    \"groupName\": \"cn\",\n    \"groupUuid\": \"gidNumber\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"groupOfNames\",\n    \"searchBase\": \"ou=Groups\",\n    \"searchScope\": \"ALL_SUBTREES\"\n  },\n  \"membershipMappings\": {\n    \"groupMembershipMapping\": \"memberOf\"\n  },\n  \"userMappings\": {\n    \"building\": \"\",\n    \"department\": \"departmentNumber\",\n    \"emailAddress\": \"mail\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"inetOrgPerson\",\n    \"phone\": \"\",\n    \"position\": \"title\",\n    \"realName\": \"displayName\",\n    \"room\": \"\",\n    \"searchBase\": \"ou=Users\",\n    \"searchScope\": \"ALL_SUBTREES\",\n    \"userID\": \"mail\",\n    \"userUuid\": \"uid\",\n    \"username\": \"uid\",\n    \"additionalSearchBase\": \"\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/mappings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"mappings"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Cloud Identity Provider id from request path do not match id in request body.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groupMappings\": {\n    \"groupID\": \"cn\",\n    \"groupName\": \"cn\",\n    \"groupUuid\": \"gidNumber\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"groupOfNames\",\n    \"searchBase\": \"ou=Groups\",\n    \"searchScope\": \"ALL_SUBTREES\"\n  },\n  \"membershipMappings\": {\n    \"groupMembershipMapping\": \"memberOf\"\n  },\n  \"userMappings\": {\n    \"building\": \"\",\n    \"department\": \"departmentNumber\",\n    \"emailAddress\": \"mail\",\n    \"objectClassLimitation\": \"ANY_OBJECT_CLASSES\",\n    \"objectClasses\": \"inetOrgPerson\",\n    \"phone\": \"\",\n    \"position\": \"title\",\n    \"realName\": \"displayName\",\n    \"room\": \"\",\n    \"searchBase\": \"ou=Users\",\n    \"searchScope\": \"ALL_SUBTREES\",\n    \"userID\": \"mail\",\n    \"userUuid\": \"uid\",\n    \"username\": \"uid\",\n    \"additionalSearchBase\": \"\"\n  }\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/cloud-ldaps/:id/mappings",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cloud-ldaps",
																":id",
																"mappings"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Cloud Identity Provider identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get Cloud Identity Provider configuration with given id.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"cloud-ldaps",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Cloud Identity Provider identifier"
												}
											]
										},
										"description": "Get Cloud Identity Provider configuration with given id."
									},
									"response": [
										{
											"name": "Cloud Identity Provider configuration returned.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"id\": \"1001\",\n    \"enabled\": true,\n    \"serverUrl\": \"ldap.google.com\",\n    \"domainName\": \"jamf.com\",\n    \"port\": 636,\n    \"keystore\": {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expirationDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"subject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"connectionTimeout\": 15,\n    \"searchTimeout\": 60,\n    \"useWildcards\": true,\n    \"connectionType\": \"LDAPS\"\n  },\n  \"mappings\": {\n    \"userMappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"emailAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"username\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"additionalSearchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"groupMappings\": {\n      \"groupID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"membershipMappings\": {\n      \"groupMembershipMapping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "Id can only be a number.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Specified Cloud Identity Provider configuration does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update Cloud Identity Provider configuration",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"connectionTimeout\": 15,\n    \"connectionType\": \"LDAPS\",\n    \"domainName\": \"jamf.com\",\n    \"enabled\": true,\n    \"port\": 636,\n    \"searchTimeout\": 60,\n    \"serverUrl\": \"ldap.google.com\",\n    \"useWildcards\": true,\n    \"keystore\": {\n      \"fileBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"password\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"mappings\": {\n    \"groupMappings\": {\n      \"groupID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"membershipMappings\": {\n      \"groupMembershipMapping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"userMappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"emailAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"username\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"additionalSearchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"cloud-ldaps",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Cloud Identity Provider identifier"
												}
											]
										},
										"description": "Update Cloud Identity Provider configuration. Cannot be used for partial updates, all content body must be sent."
									},
									"response": [
										{
											"name": "Cloud Identity Provider configuration updated",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"connectionTimeout\": 15,\n    \"connectionType\": \"LDAPS\",\n    \"domainName\": \"jamf.com\",\n    \"enabled\": true,\n    \"port\": 636,\n    \"searchTimeout\": 60,\n    \"serverUrl\": \"ldap.google.com\",\n    \"useWildcards\": true,\n    \"keystore\": {\n      \"fileBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"password\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"mappings\": {\n    \"groupMappings\": {\n      \"groupID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"membershipMappings\": {\n      \"groupMembershipMapping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"userMappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"emailAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"username\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"additionalSearchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"id\": \"1001\",\n    \"enabled\": true,\n    \"serverUrl\": \"ldap.google.com\",\n    \"domainName\": \"jamf.com\",\n    \"port\": 636,\n    \"keystore\": {\n      \"type\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"expirationDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"subject\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"connectionTimeout\": 15,\n    \"searchTimeout\": 60,\n    \"useWildcards\": true,\n    \"connectionType\": \"LDAPS\"\n  },\n  \"mappings\": {\n    \"userMappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"emailAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"username\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"additionalSearchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"groupMappings\": {\n      \"groupID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"membershipMappings\": {\n      \"groupMembershipMapping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "One or more parameters were invalid.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"connectionTimeout\": 15,\n    \"connectionType\": \"LDAPS\",\n    \"domainName\": \"jamf.com\",\n    \"enabled\": true,\n    \"port\": 636,\n    \"searchTimeout\": 60,\n    \"serverUrl\": \"ldap.google.com\",\n    \"useWildcards\": true,\n    \"keystore\": {\n      \"fileBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"password\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"mappings\": {\n    \"groupMappings\": {\n      \"groupID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"membershipMappings\": {\n      \"groupMembershipMapping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"userMappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"emailAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"username\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"additionalSearchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Cloud Identity Provider configuration does not exist.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"connectionTimeout\": 15,\n    \"connectionType\": \"LDAPS\",\n    \"domainName\": \"jamf.com\",\n    \"enabled\": true,\n    \"port\": 636,\n    \"searchTimeout\": 60,\n    \"serverUrl\": \"ldap.google.com\",\n    \"useWildcards\": true,\n    \"keystore\": {\n      \"fileBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"password\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"mappings\": {\n    \"groupMappings\": {\n      \"groupID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"membershipMappings\": {\n      \"groupMembershipMapping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"userMappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"emailAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"username\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"additionalSearchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "The request URL configuration id value does not match the id value in the request body.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"id\": \"1001\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"connectionTimeout\": 15,\n    \"connectionType\": \"LDAPS\",\n    \"domainName\": \"jamf.com\",\n    \"enabled\": true,\n    \"port\": 636,\n    \"searchTimeout\": 60,\n    \"serverUrl\": \"ldap.google.com\",\n    \"useWildcards\": true,\n    \"keystore\": {\n      \"fileBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"password\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"mappings\": {\n    \"groupMappings\": {\n      \"groupID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"membershipMappings\": {\n      \"groupMembershipMapping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"userMappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"emailAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"username\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"additionalSearchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete Cloud Identity Provider configuration.",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"cloud-ldaps",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Cloud Identity Provider identifier"
												}
											]
										},
										"description": "Delete Cloud Identity Provider configuration."
									},
									"response": [
										{
											"name": "Cloud Identity Provider configuration deleted.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Id can only be a number.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Cloud Identity Provider configuration does not exist.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cloud-ldaps/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cloud-ldaps",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Cloud Identity Provider identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create Cloud Identity Provider configuration",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"connectionTimeout\": 15,\n    \"connectionType\": \"LDAPS\",\n    \"domainName\": \"jamf.com\",\n    \"enabled\": true,\n    \"keystore\": {\n      \"fileBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"password\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"port\": 636,\n    \"searchTimeout\": 60,\n    \"serverUrl\": \"ldap.google.com\",\n    \"useWildcards\": true\n  },\n  \"mappings\": {\n    \"groupMappings\": {\n      \"groupID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"membershipMappings\": {\n      \"groupMembershipMapping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"userMappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"emailAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"username\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"additionalSearchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/cloud-ldaps",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"cloud-ldaps"
									]
								},
								"description": "Create new Cloud Identity Provider configuration with unique display name. If mappings not provided, then defaults will be generated instead."
							},
							"response": [
								{
									"name": "Cloud Identity Provider configuration created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"connectionTimeout\": 15,\n    \"connectionType\": \"LDAPS\",\n    \"domainName\": \"jamf.com\",\n    \"enabled\": true,\n    \"keystore\": {\n      \"fileBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"password\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"port\": 636,\n    \"searchTimeout\": 60,\n    \"serverUrl\": \"ldap.google.com\",\n    \"useWildcards\": true\n  },\n  \"mappings\": {\n    \"groupMappings\": {\n      \"groupID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"membershipMappings\": {\n      \"groupMembershipMapping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"userMappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"emailAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"username\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"additionalSearchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/cloud-ldaps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"cloud-ldaps"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								},
								{
									"name": "Cloud Identity Provider configuration cannot be saved.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"cloudIdPCommon\": {\n    \"displayName\": \"Google Secure LDAP\",\n    \"providerName\": \"GOOGLE\"\n  },\n  \"server\": {\n    \"connectionTimeout\": 15,\n    \"connectionType\": \"LDAPS\",\n    \"domainName\": \"jamf.com\",\n    \"enabled\": true,\n    \"keystore\": {\n      \"fileBytes\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"password\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"port\": 636,\n    \"searchTimeout\": 60,\n    \"serverUrl\": \"ldap.google.com\",\n    \"useWildcards\": true\n  },\n  \"mappings\": {\n    \"groupMappings\": {\n      \"groupID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"groupUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"membershipMappings\": {\n      \"groupMembershipMapping\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"userMappings\": {\n      \"building\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"department\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"emailAddress\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClassLimitation\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"objectClasses\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phone\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"position\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"realName\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"room\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"searchScope\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userID\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"userUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"username\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"additionalSearchBase\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/cloud-ldaps",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"cloud-ldaps"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "computer-prestages",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "scope",
									"item": [
										{
											"name": "Get device Scope for a specific Computer Prestage\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"computer-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												},
												"description": "Get device scope for a specific computer prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": \"1\",\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "Computer Prestage with that id does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Replace device Scope for a specific Computer Prestage\n",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"computer-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												},
												"description": "Replace device scope for a specific computer prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": \"1\",\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "One or more serial numbers are not valid",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Computer Prestage with that id does not exist",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add device Scope for a specific Computer Prestage\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"computer-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												},
												"description": "Add device scope for a specific computer prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": \"1\",\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "One or more serial numbers are not valid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Computer Prestage with that id does not exist",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Remove device Scope for a specific Computer Prestage\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope/delete-multiple",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"computer-prestages",
														":id",
														"scope",
														"delete-multiple"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												},
												"description": "Remove device scope for a specific computer prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope/delete-multiple",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope",
																"delete-multiple"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": \"1\",\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "One or more serial numbers are not valid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope/delete-multiple",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope",
																"delete-multiple"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Computer Prestage with that id does not exist",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope/delete-multiple",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope",
																"delete-multiple"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/computer-prestages/:id/scope/delete-multiple",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"computer-prestages",
																":id",
																"scope",
																"delete-multiple"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Computer Prestage identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve a Computer Prestage with the supplied id\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/computer-prestages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"computer-prestages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Computer Prestage identifier"
												}
											]
										},
										"description": "Retrieves a Computer Prestage with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": \"1\",\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installProfilesDuringSetup\": true,\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableRecoveryLock\": true,\n  \"recoveryLockPasswordType\": \"MANUAL\",\n  \"rotateRecoveryLockPassword\": true,\n  \"id\": \"1\",\n  \"profileUuid\": \"29d-a8d8f-b8sdjndf-dsa9\",\n  \"siteId\": \"5\",\n  \"versionLock\": 0\n}"
										},
										{
											"name": "Computer Prestage with that id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update a Computer Prestage\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": \"1\",\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installProfilesDuringSetup\": true,\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableRecoveryLock\": true,\n  \"recoveryLockPasswordType\": \"MANUAL\",\n  \"rotateRecoveryLockPassword\": true,\n  \"recoveryLockPassword\": \"password123\",\n  \"versionLock\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/computer-prestages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"computer-prestages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Computer Prestage identifier"
												}
											]
										},
										"description": "Updates a Computer Prestage"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": \"1\",\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installProfilesDuringSetup\": true,\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableRecoveryLock\": true,\n  \"recoveryLockPasswordType\": \"MANUAL\",\n  \"rotateRecoveryLockPassword\": true,\n  \"recoveryLockPassword\": \"password123\",\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": \"1\",\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installProfilesDuringSetup\": true,\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableRecoveryLock\": true,\n  \"recoveryLockPasswordType\": \"MANUAL\",\n  \"rotateRecoveryLockPassword\": true,\n  \"id\": \"1\",\n  \"profileUuid\": \"29d-a8d8f-b8sdjndf-dsa9\",\n  \"siteId\": \"5\",\n  \"versionLock\": 0\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": \"1\",\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installProfilesDuringSetup\": true,\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableRecoveryLock\": true,\n  \"recoveryLockPasswordType\": \"MANUAL\",\n  \"rotateRecoveryLockPassword\": true,\n  \"recoveryLockPassword\": \"password123\",\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Computer Prestage with that id does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": \"1\",\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installProfilesDuringSetup\": true,\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableRecoveryLock\": true,\n  \"recoveryLockPasswordType\": \"MANUAL\",\n  \"rotateRecoveryLockPassword\": true,\n  \"recoveryLockPassword\": \"password123\",\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "The Computer Prestage was modified by another process. Read the Computer Prestage again for updated changes.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": \"1\",\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installProfilesDuringSetup\": true,\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableRecoveryLock\": true,\n  \"recoveryLockPasswordType\": \"MANUAL\",\n  \"rotateRecoveryLockPassword\": true,\n  \"recoveryLockPassword\": \"password123\",\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a Computer Prestage with the supplied id\n",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/computer-prestages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"computer-prestages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Computer Prestage identifier"
												}
											]
										},
										"description": "Deletes a Computer Prestage with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/computer-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"computer-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Computer Prestage identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get sorted and paged Computer Prestages\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/computer-prestages?page=0&page-size=100&sort=id:desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"computer-prestages"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:desc",
											"description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Gets sorted and paged computer prestages"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/computer-prestages?page=0&page-size=100&sort=id:desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"computer-prestages"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"profileUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"siteId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"versionLock\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"profileUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"siteId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"versionLock\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create a Computer Prestage\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": \"1\",\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installProfilesDuringSetup\": true,\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableRecoveryLock\": true,\n  \"recoveryLockPasswordType\": \"MANUAL\",\n  \"rotateRecoveryLockPassword\": true,\n  \"recoveryLockPassword\": \"password123\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/computer-prestages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"computer-prestages"
									]
								},
								"description": "Create a computer prestage"
							},
							"response": [
								{
									"name": "Computer Prestage was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": \"1\",\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installProfilesDuringSetup\": true,\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableRecoveryLock\": true,\n  \"recoveryLockPasswordType\": \"MANUAL\",\n  \"rotateRecoveryLockPassword\": true,\n  \"recoveryLockPassword\": \"password123\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/computer-prestages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"computer-prestages"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"customPackageDistributionPointId\": \"1\",\n  \"customPackageIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"installProfilesDuringSetup\": true,\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"prestageInstalledProfileIds\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableRecoveryLock\": true,\n  \"recoveryLockPasswordType\": \"MANUAL\",\n  \"rotateRecoveryLockPassword\": true,\n  \"recoveryLockPassword\": \"password123\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/computer-prestages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"computer-prestages"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Get all device Scope for all Computer Prestages\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/computer-prestages/scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"computer-prestages",
										"scope"
									]
								},
								"description": "Get all device scope for all computer prestages"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/computer-prestages/scope",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"computer-prestages",
												"scope"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"serialsByPrestageId\": {\n    \"mollit_b\": \"ut Duis ess\"\n  }\n}"
								}
							]
						}
					]
				},
				{
					"name": "enrollment",
					"item": [
						{
							"name": "access-groups",
							"item": [
								{
									"name": "{server Id}/{group Id}",
									"item": [
										{
											"name": "Retrieve the configured LDAP groups configured for User-Initiated Enrollment\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/access-groups/:serverId/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"access-groups",
														":serverId",
														":groupId"
													],
													"variable": [
														{
															"key": "serverId",
															"value": "in aute",
															"description": "(Required) LDAP server id."
														},
														{
															"key": "groupId",
															"value": "in aute",
															"description": "(Required) LDAP group id."
														}
													]
												},
												"description": "Retrieves the configured LDAP groups configured for User-Initiated Enrollment."
											},
											"response": [
												{
													"name": "Successful query",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment/access-groups/:serverId/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment",
																"access-groups",
																":serverId",
																":groupId"
															],
															"variable": [
																{
																	"key": "serverId",
																	"value": "in aute",
																	"description": "(Required) LDAP server id."
																},
																{
																	"key": "groupId",
																	"value": "in aute",
																	"description": "(Required) LDAP group id."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1\",\n  \"ldapServerId\": \"1\",\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}"
												},
												{
													"name": "Group not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment/access-groups/:serverId/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment",
																"access-groups",
																":serverId",
																":groupId"
															],
															"variable": [
																{
																	"key": "serverId",
																	"value": "in aute",
																	"description": "(Required) LDAP server id."
																},
																{
																	"key": "groupId",
																	"value": "in aute",
																	"description": "(Required) LDAP group id."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify the configured LDAP groups configured for User-Initiated Enrollment\n",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/access-groups/:serverId/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"access-groups",
														":serverId",
														":groupId"
													],
													"variable": [
														{
															"key": "serverId",
															"value": "in aute",
															"description": "(Required) LDAP server id."
														},
														{
															"key": "groupId",
															"value": "in aute",
															"description": "(Required) LDAP group id."
														}
													]
												},
												"description": "Modifies the configured LDAP groups configured for User-Initiated Enrollment."
											},
											"response": [
												{
													"name": "Successful query",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment/access-groups/:serverId/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment",
																"access-groups",
																":serverId",
																":groupId"
															],
															"variable": [
																{
																	"key": "serverId",
																	"value": "in aute",
																	"description": "(Required) LDAP server id."
																},
																{
																	"key": "groupId",
																	"value": "in aute",
																	"description": "(Required) LDAP group id."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1\",\n  \"ldapServerId\": \"1\",\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}"
												},
												{
													"name": "Bad request.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment/access-groups/:serverId/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment",
																"access-groups",
																":serverId",
																":groupId"
															],
															"variable": [
																{
																	"key": "serverId",
																	"value": "in aute",
																	"description": "(Required) LDAP server id."
																},
																{
																	"key": "groupId",
																	"value": "in aute",
																	"description": "(Required) LDAP group id."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete an LDAP group's access to user initiated Enrollment\n",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/access-groups/:serverId/:groupId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"access-groups",
														":serverId",
														":groupId"
													],
													"variable": [
														{
															"key": "serverId",
															"value": "in aute",
															"description": "(Required) LDAP server id"
														},
														{
															"key": "groupId",
															"value": "in aute",
															"description": "(Required) LDAP group id."
														}
													]
												},
												"description": "Deletes an LDAP group's access to user initiated enrollment. The group \"All LDAP Users\" cannot be deleted, but it can be modified to disallow User-Initiated Enrollment."
											},
											"response": [
												{
													"name": "Successful deletion",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment/access-groups/:serverId/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment",
																"access-groups",
																":serverId",
																":groupId"
															],
															"variable": [
																{
																	"key": "serverId",
																	"value": "in aute",
																	"description": "(Required) LDAP server id"
																},
																{
																	"key": "groupId",
																	"value": "in aute",
																	"description": "(Required) LDAP group id."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Group not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment/access-groups/:serverId/:groupId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment",
																"access-groups",
																":serverId",
																":groupId"
															],
															"variable": [
																{
																	"key": "serverId",
																	"value": "in aute",
																	"description": "(Required) LDAP server id"
																},
																{
																	"key": "groupId",
																	"value": "in aute",
																	"description": "(Required) LDAP group id."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve the configured LDAP groups configured for User-Initiated Enrollment\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment/access-groups?page=0&page-size=100&sort=name:asc&all-users-option-first=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment",
												"access-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "name:asc",
													"description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `name:asc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n"
												},
												{
													"key": "all-users-option-first",
													"value": "false",
													"description": "Return \"All LDAP Users\" option on the first position if it is present in the current page"
												}
											]
										},
										"description": "Retrieves the configured LDAP groups configured for User-Initiated Enrollment."
									},
									"response": [
										{
											"name": "Found access groups matching search params.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/access-groups?page=0&page-size=100&sort=name:asc&all-users-option-first=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"access-groups"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "name:asc"
														},
														{
															"key": "all-users-option-first",
															"value": "false"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 10,\n  \"results\": [\n    {\n      \"id\": \"1\",\n      \"ldapServerId\": \"1\",\n      \"name\": \"Grade School Pupils\",\n      \"siteId\": \"1\",\n      \"enterpriseEnrollmentEnabled\": false,\n      \"personalEnrollmentEnabled\": false,\n      \"accountDrivenUserEnrollmentEnabled\": false,\n      \"requireEula\": false\n    },\n    {\n      \"id\": \"1\",\n      \"ldapServerId\": \"1\",\n      \"name\": \"Grade School Pupils\",\n      \"siteId\": \"1\",\n      \"enterpriseEnrollmentEnabled\": false,\n      \"personalEnrollmentEnabled\": false,\n      \"accountDrivenUserEnrollmentEnabled\": false,\n      \"requireEula\": false\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add the configured LDAP group for User-Initiated Enrollment.\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment/access-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment",
												"access-groups"
											]
										},
										"description": "Add the configured LDAP group for User-Initiated Enrollment.\n"
									},
									"response": [
										{
											"name": "Configured LDAP group record was created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/access-groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"access-groups"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "A record with given ldapServerId and name already exists.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/access-groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"access-groups"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "history",
							"item": [
								{
									"name": "Get sorted and paged Enrollment history object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment/history?page=0&page-size=100&sort=date:desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "date:desc",
													"description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `date:desc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n"
												}
											]
										},
										"description": "Gets sorted and paged Enrollment history object\n"
									},
									"response": [
										{
											"name": "Details of enrollment history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/history?page=0&page-size=100&sort=date:desc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add Enrollment history object notes\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment",
												"history"
											]
										},
										"description": "Adds Enrollment history object notes\n"
									},
									"response": [
										{
											"name": "Notes of enrollment history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "Enrollment history can not be saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Export enrollment history collection\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "text/csv,application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment/history/export?page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment",
												"history",
												"export"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=id:desc,name:asc "
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: id, name. This param can be combined with paging and sorting. Example: name==\"*script*\""
												}
											]
										},
										"description": "Export enrollment history collection\n"
									},
									"response": [
										{
											"name": "Export successful",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/history/export?page=0&page-size=100&sort=id:asc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"history",
														"export"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "id:asc"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/csv,application/json"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Export fields specified incorrectly - non-existing column or duplicate in the list.\nSupported columns: id,name,categoryName,categoryId,priority.\n",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/history/export?page=0&page-size=100&sort=id:asc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"history",
														"export"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "id:asc"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Export currently unavailable, all export-related resources are in use. Try again later.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/history/export?page=0&page-size=100&sort=id:asc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"history",
														"export"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "id:asc"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "languages",
							"item": [
								{
									"name": "{language Id}",
									"item": [
										{
											"name": "Retrieve the Enrollment messaging for a language\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/languages/:languageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"languages",
														":languageId"
													],
													"variable": [
														{
															"key": "languageId",
															"value": "in aute",
															"description": "(Required) Two letter ISO 639-1 Language Code"
														}
													]
												},
												"description": "Retrieves the enrollment messaging for a language."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment/languages/:languageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment",
																"languages",
																":languageId"
															],
															"variable": [
																{
																	"key": "languageId",
																	"value": "in aute",
																	"description": "(Required) Two letter ISO 639-1 Language Code"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"languageCode\": \"en\",\n  \"name\": \"English\",\n  \"title\": \"Enroll Your Device\",\n  \"loginDescription\": \"Log in to enroll your device.\",\n  \"username\": \"admin\",\n  \"password\": \"12345\",\n  \"loginButton\": \"Log in\",\n  \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n  \"deviceClassPersonal\": \"Personally Owned\",\n  \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n  \"deviceClassEnterprise\": \"Institutionally Owned\",\n  \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n  \"deviceClassButton\": \"Enroll\",\n  \"personalEula\": \"Personal Eula\",\n  \"enterpriseEula\": \"Enterprise Eula\",\n  \"eulaButton\": \"Accept\",\n  \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n  \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n  \"certificateButton\": \"Continue\",\n  \"certificateProfileName\": \"CA Certificate\",\n  \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n  \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n  \"personalButton\": \"Enroll\",\n  \"personalProfileName\": \"MDM Profile\",\n  \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n  \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n  \"userEnrollmentButton\": \"Continue\",\n  \"userEnrollmentProfileName\": \"MDM Profile\",\n  \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n  \"enterpriseButton\": \"Continue\",\n  \"enterpriseProfileName\": \"MDM Profile\",\n  \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n  \"quickAddText\": \"Download and install this package.\",\n  \"quickAddButton\": \"Download\",\n  \"quickAddName\": \"QuickAdd.pkg\",\n  \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n  \"completeMessage\": \"The enrollment process is complete.\",\n  \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n  \"tryAgainButton\": \"Try Again\",\n  \"checkNowButton\": \"Proceed\",\n  \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n  \"logoutButton\": \"Log Out\"\n}"
												},
												{
													"name": "Language not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment/languages/:languageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment",
																"languages",
																":languageId"
															],
															"variable": [
																{
																	"key": "languageId",
																	"value": "in aute",
																	"description": "(Required) Two letter ISO 639-1 Language Code"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Edit Enrollment messaging for a language\n",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"languageCode\": \"en\",\n  \"name\": \"English\",\n  \"title\": \"Enroll Your Device\",\n  \"loginDescription\": \"Log in to enroll your device.\",\n  \"username\": \"admin\",\n  \"password\": \"12345\",\n  \"loginButton\": \"Log in\",\n  \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n  \"deviceClassPersonal\": \"Personally Owned\",\n  \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n  \"deviceClassEnterprise\": \"Institutionally Owned\",\n  \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n  \"deviceClassButton\": \"Enroll\",\n  \"personalEula\": \"Personal Eula\",\n  \"enterpriseEula\": \"Enterprise Eula\",\n  \"eulaButton\": \"Accept\",\n  \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n  \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n  \"certificateButton\": \"Continue\",\n  \"certificateProfileName\": \"CA Certificate\",\n  \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n  \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n  \"personalButton\": \"Enroll\",\n  \"personalProfileName\": \"MDM Profile\",\n  \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n  \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n  \"userEnrollmentButton\": \"Continue\",\n  \"userEnrollmentProfileName\": \"MDM Profile\",\n  \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n  \"enterpriseButton\": \"Continue\",\n  \"enterpriseProfileName\": \"MDM Profile\",\n  \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n  \"quickAddText\": \"Download and install this package.\",\n  \"quickAddButton\": \"Download\",\n  \"quickAddName\": \"QuickAdd.pkg\",\n  \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n  \"completeMessage\": \"The enrollment process is complete.\",\n  \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n  \"tryAgainButton\": \"Try Again\",\n  \"checkNowButton\": \"Proceed\",\n  \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n  \"logoutButton\": \"Log Out\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/languages/:languageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"languages",
														":languageId"
													],
													"variable": [
														{
															"key": "languageId",
															"value": "in aute",
															"description": "(Required) Two letter ISO 639-1 Language Code"
														}
													]
												},
												"description": "Edit enrollment messaging for a language."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"languageCode\": \"en\",\n  \"name\": \"English\",\n  \"title\": \"Enroll Your Device\",\n  \"loginDescription\": \"Log in to enroll your device.\",\n  \"username\": \"admin\",\n  \"password\": \"12345\",\n  \"loginButton\": \"Log in\",\n  \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n  \"deviceClassPersonal\": \"Personally Owned\",\n  \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n  \"deviceClassEnterprise\": \"Institutionally Owned\",\n  \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n  \"deviceClassButton\": \"Enroll\",\n  \"personalEula\": \"Personal Eula\",\n  \"enterpriseEula\": \"Enterprise Eula\",\n  \"eulaButton\": \"Accept\",\n  \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n  \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n  \"certificateButton\": \"Continue\",\n  \"certificateProfileName\": \"CA Certificate\",\n  \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n  \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n  \"personalButton\": \"Enroll\",\n  \"personalProfileName\": \"MDM Profile\",\n  \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n  \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n  \"userEnrollmentButton\": \"Continue\",\n  \"userEnrollmentProfileName\": \"MDM Profile\",\n  \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n  \"enterpriseButton\": \"Continue\",\n  \"enterpriseProfileName\": \"MDM Profile\",\n  \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n  \"quickAddText\": \"Download and install this package.\",\n  \"quickAddButton\": \"Download\",\n  \"quickAddName\": \"QuickAdd.pkg\",\n  \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n  \"completeMessage\": \"The enrollment process is complete.\",\n  \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n  \"tryAgainButton\": \"Try Again\",\n  \"checkNowButton\": \"Proceed\",\n  \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n  \"logoutButton\": \"Log Out\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment/languages/:languageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment",
																"languages",
																":languageId"
															],
															"variable": [
																{
																	"key": "languageId",
																	"value": "in aute",
																	"description": "(Required) Two letter ISO 639-1 Language Code"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"languageCode\": \"en\",\n  \"name\": \"English\",\n  \"title\": \"Enroll Your Device\",\n  \"loginDescription\": \"Log in to enroll your device.\",\n  \"username\": \"admin\",\n  \"password\": \"12345\",\n  \"loginButton\": \"Log in\",\n  \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n  \"deviceClassPersonal\": \"Personally Owned\",\n  \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n  \"deviceClassEnterprise\": \"Institutionally Owned\",\n  \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n  \"deviceClassButton\": \"Enroll\",\n  \"personalEula\": \"Personal Eula\",\n  \"enterpriseEula\": \"Enterprise Eula\",\n  \"eulaButton\": \"Accept\",\n  \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n  \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n  \"certificateButton\": \"Continue\",\n  \"certificateProfileName\": \"CA Certificate\",\n  \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n  \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n  \"personalButton\": \"Enroll\",\n  \"personalProfileName\": \"MDM Profile\",\n  \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n  \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n  \"userEnrollmentButton\": \"Continue\",\n  \"userEnrollmentProfileName\": \"MDM Profile\",\n  \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n  \"enterpriseButton\": \"Continue\",\n  \"enterpriseProfileName\": \"MDM Profile\",\n  \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n  \"quickAddText\": \"Download and install this package.\",\n  \"quickAddButton\": \"Download\",\n  \"quickAddName\": \"QuickAdd.pkg\",\n  \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n  \"completeMessage\": \"The enrollment process is complete.\",\n  \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n  \"tryAgainButton\": \"Try Again\",\n  \"checkNowButton\": \"Proceed\",\n  \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n  \"logoutButton\": \"Log Out\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"languageCode\": \"en\",\n  \"name\": \"English\",\n  \"title\": \"Enroll Your Device\",\n  \"loginDescription\": \"Log in to enroll your device.\",\n  \"username\": \"admin\",\n  \"password\": \"12345\",\n  \"loginButton\": \"Log in\",\n  \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n  \"deviceClassPersonal\": \"Personally Owned\",\n  \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n  \"deviceClassEnterprise\": \"Institutionally Owned\",\n  \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n  \"deviceClassButton\": \"Enroll\",\n  \"personalEula\": \"Personal Eula\",\n  \"enterpriseEula\": \"Enterprise Eula\",\n  \"eulaButton\": \"Accept\",\n  \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n  \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n  \"certificateButton\": \"Continue\",\n  \"certificateProfileName\": \"CA Certificate\",\n  \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n  \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n  \"personalButton\": \"Enroll\",\n  \"personalProfileName\": \"MDM Profile\",\n  \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n  \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n  \"userEnrollmentButton\": \"Continue\",\n  \"userEnrollmentProfileName\": \"MDM Profile\",\n  \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n  \"enterpriseButton\": \"Continue\",\n  \"enterpriseProfileName\": \"MDM Profile\",\n  \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n  \"quickAddText\": \"Download and install this package.\",\n  \"quickAddButton\": \"Download\",\n  \"quickAddName\": \"QuickAdd.pkg\",\n  \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n  \"completeMessage\": \"The enrollment process is complete.\",\n  \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n  \"tryAgainButton\": \"Try Again\",\n  \"checkNowButton\": \"Proceed\",\n  \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n  \"logoutButton\": \"Log Out\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment/languages/:languageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment",
																"languages",
																":languageId"
															],
															"variable": [
																{
																	"key": "languageId",
																	"value": "in aute",
																	"description": "(Required) Two letter ISO 639-1 Language Code"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete the Enrollment messaging for a language\n",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/languages/:languageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"languages",
														":languageId"
													],
													"variable": [
														{
															"key": "languageId",
															"value": "in aute",
															"description": "(Required) Two letter ISO 639-1 Language Code"
														}
													]
												},
												"description": "Delete the enrollment messaging for a language."
											},
											"response": [
												{
													"name": "Successful deletetion",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment/languages/:languageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment",
																"languages",
																":languageId"
															],
															"variable": [
																{
																	"key": "languageId",
																	"value": "in aute",
																	"description": "(Required) Two letter ISO 639-1 Language Code"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Language not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment/languages/:languageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment",
																"languages",
																":languageId"
															],
															"variable": [
																{
																	"key": "languageId",
																	"value": "in aute",
																	"description": "(Required) Two letter ISO 639-1 Language Code"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get an array of the language codes that have Enrollment messaging\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment/languages?page=0&page-size=100&sort=languageCode:asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment",
												"languages"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "languageCode:asc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort\nis `languageCode:asc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n"
												}
											]
										},
										"description": "Returns an array of the language codes that have enrollment messaging currently configured."
									},
									"response": [
										{
											"name": "Found languages matching search params.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/languages?page=0&page-size=100&sort=languageCode:asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"languages"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "languageCode:asc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 10,\n  \"results\": [\n    {\n      \"languageCode\": \"en\",\n      \"name\": \"English\",\n      \"title\": \"Enroll Your Device\",\n      \"loginDescription\": \"Log in to enroll your device.\",\n      \"username\": \"admin\",\n      \"password\": \"12345\",\n      \"loginButton\": \"Log in\",\n      \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n      \"deviceClassPersonal\": \"Personally Owned\",\n      \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n      \"deviceClassEnterprise\": \"Institutionally Owned\",\n      \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n      \"deviceClassButton\": \"Enroll\",\n      \"personalEula\": \"Personal Eula\",\n      \"enterpriseEula\": \"Enterprise Eula\",\n      \"eulaButton\": \"Accept\",\n      \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n      \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n      \"certificateButton\": \"Continue\",\n      \"certificateProfileName\": \"CA Certificate\",\n      \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n      \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n      \"personalButton\": \"Enroll\",\n      \"personalProfileName\": \"MDM Profile\",\n      \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n      \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n      \"userEnrollmentButton\": \"Continue\",\n      \"userEnrollmentProfileName\": \"MDM Profile\",\n      \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n      \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n      \"enterpriseButton\": \"Continue\",\n      \"enterpriseProfileName\": \"MDM Profile\",\n      \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n      \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n      \"quickAddText\": \"Download and install this package.\",\n      \"quickAddButton\": \"Download\",\n      \"quickAddName\": \"QuickAdd.pkg\",\n      \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n      \"completeMessage\": \"The enrollment process is complete.\",\n      \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n      \"tryAgainButton\": \"Try Again\",\n      \"checkNowButton\": \"Proceed\",\n      \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n      \"logoutButton\": \"Log Out\"\n    },\n    {\n      \"languageCode\": \"en\",\n      \"name\": \"English\",\n      \"title\": \"Enroll Your Device\",\n      \"loginDescription\": \"Log in to enroll your device.\",\n      \"username\": \"admin\",\n      \"password\": \"12345\",\n      \"loginButton\": \"Log in\",\n      \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n      \"deviceClassPersonal\": \"Personally Owned\",\n      \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n      \"deviceClassEnterprise\": \"Institutionally Owned\",\n      \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n      \"deviceClassButton\": \"Enroll\",\n      \"personalEula\": \"Personal Eula\",\n      \"enterpriseEula\": \"Enterprise Eula\",\n      \"eulaButton\": \"Accept\",\n      \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n      \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n      \"certificateButton\": \"Continue\",\n      \"certificateProfileName\": \"CA Certificate\",\n      \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n      \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n      \"personalButton\": \"Enroll\",\n      \"personalProfileName\": \"MDM Profile\",\n      \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n      \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n      \"userEnrollmentButton\": \"Continue\",\n      \"userEnrollmentProfileName\": \"MDM Profile\",\n      \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n      \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n      \"enterpriseButton\": \"Continue\",\n      \"enterpriseProfileName\": \"MDM Profile\",\n      \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n      \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n      \"quickAddText\": \"Download and install this package.\",\n      \"quickAddButton\": \"Download\",\n      \"quickAddName\": \"QuickAdd.pkg\",\n      \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n      \"completeMessage\": \"The enrollment process is complete.\",\n      \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n      \"tryAgainButton\": \"Try Again\",\n      \"checkNowButton\": \"Proceed\",\n      \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n      \"logoutButton\": \"Log Out\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete multiple configured languages from User-Initiated Enrollment settings\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment/languages/delete-multiple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment",
												"languages",
												"delete-multiple"
											]
										},
										"description": "Delete multiple configured languages from User-Initiated Enrollment settings"
									},
									"response": [
										{
											"name": "All languages ids passed in request sucessfully deleted.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/languages/delete-multiple",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"languages",
														"delete-multiple"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request processed.  Returns ids and error codes of any language unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occurred trying to delete the language.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment/languages/delete-multiple",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment",
														"languages",
														"delete-multiple"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Enrollment object and Re-enrollment settings\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/enrollment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"enrollment"
									]
								},
								"description": "Gets Enrollment object and re-enrollment settings. The settings can be altered without providing the existing management password by providing the following value for `managementPassword`:\n`\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff\\uffff`.\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"managementUsername\": \"radmin\",\n  \"installSingleProfile\": false,\n  \"signingMdmProfileEnabled\": false,\n  \"mdmSigningCertificate\": {\n    \"filename\": \"null\",\n    \"md5Sum\": \"\"\n  },\n  \"restrictReenrollment\": false,\n  \"flushLocationInformation\": false,\n  \"flushLocationHistoryInformation\": false,\n  \"flushPolicyHistory\": false,\n  \"flushExtensionAttributes\": false,\n  \"flushMdmCommandsOnReenroll\": \"DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED\",\n  \"macOsEnterpriseEnrollmentEnabled\": false,\n  \"managementPasswordSet\": true,\n  \"passwordType\": \"STATIC\",\n  \"randomPasswordLength\": 8,\n  \"createManagementAccount\": true,\n  \"hideManagementAccount\": false,\n  \"allowSshOnlyManagementAccount\": false,\n  \"ensureSshRunning\": true,\n  \"launchSelfService\": false,\n  \"signQuickAdd\": false,\n  \"developerCertificateIdentity\": {\n    \"filename\": \"null\",\n    \"md5Sum\": \"\"\n  },\n  \"developerCertificateIdentityDetails\": {\n    \"subject\": \"\",\n    \"serialNumber\": \"\"\n  },\n  \"mdmSigningCertificateDetails\": {\n    \"subject\": \"\",\n    \"serialNumber\": \"\"\n  },\n  \"iosEnterpriseEnrollmentEnabled\": true,\n  \"iosPersonalEnrollmentEnabled\": false,\n  \"personalDeviceEnrollmentType\": \"PERSONALDEVICEPROFILES\",\n  \"accountDrivenUserEnrollmentEnabled\": false\n}"
								}
							]
						},
						{
							"name": "Update Enrollment object\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"managementUsername\": \"radmin\",\n  \"installSingleProfile\": false,\n  \"signingMdmProfileEnabled\": false,\n  \"mdmSigningCertificate\": {\n    \"filename\": \"null\",\n    \"keystorePassword\": \"\",\n    \"identityKeystore\": \"5Nh3juuoIARXUI7AURXuceuMkqIrjQx=\"\n  },\n  \"restrictReenrollment\": false,\n  \"flushLocationInformation\": false,\n  \"flushLocationHistoryInformation\": false,\n  \"flushPolicyHistory\": false,\n  \"flushExtensionAttributes\": false,\n  \"flushMdmCommandsOnReenroll\": \"DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED\",\n  \"macOsEnterpriseEnrollmentEnabled\": false,\n  \"managementPassword\": \"null\",\n  \"passwordType\": \"STATIC\",\n  \"randomPasswordLength\": 8,\n  \"createManagementAccount\": true,\n  \"hideManagementAccount\": false,\n  \"allowSshOnlyManagementAccount\": false,\n  \"ensureSshRunning\": true,\n  \"launchSelfService\": false,\n  \"signQuickAdd\": false,\n  \"developerCertificateIdentity\": {\n    \"filename\": \"null\",\n    \"keystorePassword\": \"\",\n    \"identityKeystore\": \"QHkHh04mU2BkyVZJdSdy2D3hhNh26u3N1VfbK7qL\"\n  },\n  \"developerCertificateIdentityDetails\": {\n    \"subject\": \"\",\n    \"serialNumber\": \"\"\n  },\n  \"mdmSigningCertificateDetails\": {\n    \"subject\": \"\",\n    \"serialNumber\": \"\"\n  },\n  \"iosEnterpriseEnrollmentEnabled\": true,\n  \"iosPersonalEnrollmentEnabled\": false,\n  \"personalDeviceEnrollmentType\": \"PERSONALDEVICEPROFILES\",\n  \"accountDrivenUserEnrollmentEnabled\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/enrollment",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"enrollment"
									]
								},
								"description": "Update enrollment object. Regarding the `developerCertificateIdentity`,\nif this object is omitted, the certificate will not be deleted from Jamf Pro.\nThe `identityKeystore` is the entire cert file as a base64 encoded string. The\n`md5Sum` field is not required in the PUT request, but is calculated and returned\nin the response.\n"
							},
							"response": [
								{
									"name": "Successfully updated enrollment object",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"managementUsername\": \"radmin\",\n  \"installSingleProfile\": false,\n  \"signingMdmProfileEnabled\": false,\n  \"mdmSigningCertificate\": {\n    \"filename\": \"null\",\n    \"keystorePassword\": \"\",\n    \"identityKeystore\": \"5Nh3juuoIARXUI7AURXuceuMkqIrjQx=\"\n  },\n  \"restrictReenrollment\": false,\n  \"flushLocationInformation\": false,\n  \"flushLocationHistoryInformation\": false,\n  \"flushPolicyHistory\": false,\n  \"flushExtensionAttributes\": false,\n  \"flushMdmCommandsOnReenroll\": \"DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED\",\n  \"macOsEnterpriseEnrollmentEnabled\": false,\n  \"managementPassword\": \"null\",\n  \"passwordType\": \"STATIC\",\n  \"randomPasswordLength\": 8,\n  \"createManagementAccount\": true,\n  \"hideManagementAccount\": false,\n  \"allowSshOnlyManagementAccount\": false,\n  \"ensureSshRunning\": true,\n  \"launchSelfService\": false,\n  \"signQuickAdd\": false,\n  \"developerCertificateIdentity\": {\n    \"filename\": \"null\",\n    \"keystorePassword\": \"\",\n    \"identityKeystore\": \"QHkHh04mU2BkyVZJdSdy2D3hhNh26u3N1VfbK7qL\"\n  },\n  \"developerCertificateIdentityDetails\": {\n    \"subject\": \"\",\n    \"serialNumber\": \"\"\n  },\n  \"mdmSigningCertificateDetails\": {\n    \"subject\": \"\",\n    \"serialNumber\": \"\"\n  },\n  \"iosEnterpriseEnrollmentEnabled\": true,\n  \"iosPersonalEnrollmentEnabled\": false,\n  \"personalDeviceEnrollmentType\": \"PERSONALDEVICEPROFILES\",\n  \"accountDrivenUserEnrollmentEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"managementUsername\": \"radmin\",\n  \"installSingleProfile\": false,\n  \"signingMdmProfileEnabled\": false,\n  \"mdmSigningCertificate\": {\n    \"filename\": \"null\",\n    \"md5Sum\": \"\"\n  },\n  \"restrictReenrollment\": false,\n  \"flushLocationInformation\": false,\n  \"flushLocationHistoryInformation\": false,\n  \"flushPolicyHistory\": false,\n  \"flushExtensionAttributes\": false,\n  \"flushMdmCommandsOnReenroll\": \"DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED\",\n  \"macOsEnterpriseEnrollmentEnabled\": false,\n  \"managementPasswordSet\": true,\n  \"passwordType\": \"STATIC\",\n  \"randomPasswordLength\": 8,\n  \"createManagementAccount\": true,\n  \"hideManagementAccount\": false,\n  \"allowSshOnlyManagementAccount\": false,\n  \"ensureSshRunning\": true,\n  \"launchSelfService\": false,\n  \"signQuickAdd\": false,\n  \"developerCertificateIdentity\": {\n    \"filename\": \"null\",\n    \"md5Sum\": \"\"\n  },\n  \"developerCertificateIdentityDetails\": {\n    \"subject\": \"\",\n    \"serialNumber\": \"\"\n  },\n  \"mdmSigningCertificateDetails\": {\n    \"subject\": \"\",\n    \"serialNumber\": \"\"\n  },\n  \"iosEnterpriseEnrollmentEnabled\": true,\n  \"iosPersonalEnrollmentEnabled\": false,\n  \"personalDeviceEnrollmentType\": \"PERSONALDEVICEPROFILES\",\n  \"accountDrivenUserEnrollmentEnabled\": false\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"managementUsername\": \"radmin\",\n  \"installSingleProfile\": false,\n  \"signingMdmProfileEnabled\": false,\n  \"mdmSigningCertificate\": {\n    \"filename\": \"null\",\n    \"keystorePassword\": \"\",\n    \"identityKeystore\": \"5Nh3juuoIARXUI7AURXuceuMkqIrjQx=\"\n  },\n  \"restrictReenrollment\": false,\n  \"flushLocationInformation\": false,\n  \"flushLocationHistoryInformation\": false,\n  \"flushPolicyHistory\": false,\n  \"flushExtensionAttributes\": false,\n  \"flushMdmCommandsOnReenroll\": \"DELETE_EVERYTHING_EXCEPT_ACKNOWLEDGED\",\n  \"macOsEnterpriseEnrollmentEnabled\": false,\n  \"managementPassword\": \"null\",\n  \"passwordType\": \"STATIC\",\n  \"randomPasswordLength\": 8,\n  \"createManagementAccount\": true,\n  \"hideManagementAccount\": false,\n  \"allowSshOnlyManagementAccount\": false,\n  \"ensureSshRunning\": true,\n  \"launchSelfService\": false,\n  \"signQuickAdd\": false,\n  \"developerCertificateIdentity\": {\n    \"filename\": \"null\",\n    \"keystorePassword\": \"\",\n    \"identityKeystore\": \"QHkHh04mU2BkyVZJdSdy2D3hhNh26u3N1VfbK7qL\"\n  },\n  \"developerCertificateIdentityDetails\": {\n    \"subject\": \"\",\n    \"serialNumber\": \"\"\n  },\n  \"mdmSigningCertificateDetails\": {\n    \"subject\": \"\",\n    \"serialNumber\": \"\"\n  },\n  \"iosEnterpriseEnrollmentEnabled\": true,\n  \"iosPersonalEnrollmentEnabled\": false,\n  \"personalDeviceEnrollmentType\": \"PERSONALDEVICEPROFILES\",\n  \"accountDrivenUserEnrollmentEnabled\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Retrieve the list of languages and corresponding ISO 639-1 Codes but only those not already added to Enrollment\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/enrollment/filtered-language-codes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"enrollment",
										"filtered-language-codes"
									]
								},
								"description": "Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment."
							},
							"response": [
								{
									"name": "Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment/filtered-language-codes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment",
												"filtered-language-codes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"en\",\n    \"name\": \"English\"\n  },\n  {\n    \"value\": \"en\",\n    \"name\": \"English\"\n  }\n]"
								}
							]
						},
						{
							"name": "Retrieve the list of languages and corresponding ISO 639-1 Codes\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/enrollment/language-codes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"enrollment",
										"language-codes"
									]
								},
								"description": "Retrieves the list of languages and corresponding ISO 639-1 Codes."
							},
							"response": [
								{
									"name": "List of languages and corresponding ISO 639-1 Codes.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment/language-codes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment",
												"language-codes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"en\",\n    \"name\": \"English\"\n  },\n  {\n    \"value\": \"en\",\n    \"name\": \"English\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "enrollment-customizations",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "history",
									"item": [
										{
											"name": "Get sorted and paged Enrollment Customization history objects\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment-customizations/:id/history?page=0&page-size=100&sort=date:desc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment-customizations",
														":id",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc",
															"description": "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												},
												"description": "Gets sorted and paged enrollment customization history objects"
											},
											"response": [
												{
													"name": "Details of enrollment customization history were found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment-customizations/:id/history?page=0&page-size=100&sort=date:desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment-customizations",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add Enrollment Customization history object notes\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment-customizations/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment-customizations",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												},
												"description": "Adds enrollment customization history object notes"
											},
											"response": [
												{
													"name": "Notes of enrollment customization history were added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment-customizations/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment-customizations",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": 1,\n  \"username\": \"admin\",\n  \"date\": \"2019-02-04T21:09:31.661Z\",\n  \"note\": \"Sso settings update\",\n  \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n}"
												},
												{
													"name": "Enrollment customization history can not be saved",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/enrollment-customizations/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"enrollment-customizations",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Enrollment Customization identifier"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve an Enrollment Customization with the supplied id\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment-customizations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment-customizations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Enrollment Customization identifier"
												}
											]
										},
										"description": "Retrieves an Enrollment Customization with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment-customizations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment-customizations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": \"0000FF\",\n    \"buttonColor\": \"0000FF\",\n    \"buttonTextColor\": \"0000FF\",\n    \"iconUrl\": \"https://jamfUrl/stored-images?id=1\",\n    \"textColor\": \"0000FF\"\n  },\n  \"siteId\": \"2\",\n  \"id\": \"1\"\n}"
										},
										{
											"name": "Enrollment Customization with that id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment-customizations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment-customizations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update an Enrollment Customization\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": \"0000FF\",\n    \"buttonColor\": \"0000FF\",\n    \"buttonTextColor\": \"0000FF\",\n    \"iconUrl\": \"https://jamfUrl/stored-images?id=1\",\n    \"textColor\": \"0000FF\"\n  },\n  \"siteId\": \"2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment-customizations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment-customizations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Enrollment Customization identifier"
												}
											]
										},
										"description": "Updates an Enrollment Customization"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": \"0000FF\",\n    \"buttonColor\": \"0000FF\",\n    \"buttonTextColor\": \"0000FF\",\n    \"iconUrl\": \"https://jamfUrl/stored-images?id=1\",\n    \"textColor\": \"0000FF\"\n  },\n  \"siteId\": \"2\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment-customizations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment-customizations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": \"0000FF\",\n    \"buttonColor\": \"0000FF\",\n    \"buttonTextColor\": \"0000FF\",\n    \"iconUrl\": \"https://jamfUrl/stored-images?id=1\",\n    \"textColor\": \"0000FF\"\n  },\n  \"siteId\": \"2\",\n  \"id\": \"1\"\n}"
										},
										{
											"name": "Enrollment Customization with that id does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": \"0000FF\",\n    \"buttonColor\": \"0000FF\",\n    \"buttonTextColor\": \"0000FF\",\n    \"iconUrl\": \"https://jamfUrl/stored-images?id=1\",\n    \"textColor\": \"0000FF\"\n  },\n  \"siteId\": \"2\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment-customizations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment-customizations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete an Enrollment Customization with the supplied id\n",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment-customizations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment-customizations",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Enrollment Customization identifier"
												}
											]
										},
										"description": "Deletes an Enrollment Customization with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment-customizations/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment-customizations",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Retrieve the list of Prestages using this Enrollment Customization\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment-customizations/:id/prestages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment-customizations",
												":id",
												"prestages"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Enrollment Customization identifier"
												}
											]
										},
										"description": "Retrieves the list of Prestages using this Enrollment Customization"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment-customizations/:id/prestages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment-customizations",
														":id",
														"prestages"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"dependencies\": [\n    {\n      \"name\": \"Name\",\n      \"humanReadableName\": \"Computer PreStage\",\n      \"hyperlink\": \"/mobile-prestage/id\"\n    },\n    {\n      \"name\": \"Name\",\n      \"humanReadableName\": \"Computer PreStage\",\n      \"hyperlink\": \"/mobile-prestage/id\"\n    }\n  ]\n}"
										},
										{
											"name": "Enrollment Customization with that id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/enrollment-customizations/:id/prestages",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"enrollment-customizations",
														":id",
														"prestages"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Enrollment Customization identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve sorted and paged Enrollment Customizations\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/enrollment-customizations?page=0&page-size=100&sort=id:asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"enrollment-customizations"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Retrieves sorted and paged Enrollment Customizations"
							},
							"response": [
								{
									"name": "Success",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment-customizations?page=0&page-size=100&sort=id:asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment-customizations"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"description\": \"Example description\",\n      \"displayName\": \"Example\",\n      \"enrollmentCustomizationBrandingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"siteId\": \"2\",\n      \"id\": \"1\"\n    },\n    {\n      \"description\": \"Example description\",\n      \"displayName\": \"Example\",\n      \"enrollmentCustomizationBrandingSettings\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"siteId\": \"2\",\n      \"id\": \"1\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create an Enrollment Customization\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": \"0000FF\",\n    \"buttonColor\": \"0000FF\",\n    \"buttonTextColor\": \"0000FF\",\n    \"iconUrl\": \"https://jamfUrl/stored-images?id=1\",\n    \"textColor\": \"0000FF\"\n  },\n  \"siteId\": \"2\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/enrollment-customizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"enrollment-customizations"
									]
								},
								"description": "Create an enrollment customization"
							},
							"response": [
								{
									"name": "Enrollment customization was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Example description\",\n  \"displayName\": \"Example\",\n  \"enrollmentCustomizationBrandingSettings\": {\n    \"backgroundColor\": \"0000FF\",\n    \"buttonColor\": \"0000FF\",\n    \"buttonTextColor\": \"0000FF\",\n    \"iconUrl\": \"https://jamfUrl/stored-images?id=1\",\n    \"textColor\": \"0000FF\"\n  },\n  \"siteId\": \"2\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment-customizations",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment-customizations"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								}
							]
						},
						{
							"name": "Upload an image",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"description": "(Required) The file to upload",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v2/enrollment-customizations/images",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"enrollment-customizations",
										"images"
									]
								},
								"description": "Uploads an image"
							},
							"response": [
								{
									"name": "Image successfully uploaded",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"description": "(Required) The file to upload",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/enrollment-customizations/images",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enrollment-customizations",
												"images"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"url\": \"https://jamfpro.jamf/image?1\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "inventory-preload",
					"item": [
						{
							"name": "csv",
							"item": [
								{
									"name": "Download all Inventory Preload records",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "text/csv"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/csv",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"csv"
											]
										},
										"description": "Returns all Inventory Preload records as a CSV file."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/csv",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"csv"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Disposition",
													"value": "in aute",
													"description": "A header field named `Content-Disposition` is returned with the file name contained in its value, which is always `inventory-preload-all.csv`.\n"
												},
												{
													"key": "Content-Type",
													"value": "text/csv"
												}
											],
											"cookie": [],
											"body": "Serial Number,Device Type,Full Name\nserial123,Computer,Test Name\n"
										}
									]
								},
								{
									"name": "Create one or more new Inventory Preload records using CSV\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "serial number,device type,full name\nserial123,Computer,Test Name\n",
													"description": "(Required) The CSV file to upload",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/csv",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"csv"
											]
										},
										"description": "Create one or more new Inventory Preload records using CSV.\nA CSV template can be downloaded from /v2/inventory-preload/csv-template.\nSerial number and device type are required. All other fields are optional.\nWhen a matching serial number exists in the Inventory Preload data, the record will be overwritten with the CSV data.\nIf the CSV file contains a new username and an email address is provided, the new user is created in Jamf Pro.\nIf the CSV file contains an existing username, the following user-related fields are updated in Jamf Pro.\nFull Name,\nEmail Address,\nPhone Number,\nPosition.\nThis endpoint does not do full validation of each record in the CSV data.\nTo do full validation, use the `/v2/inventory-preload/csv-validate` endpoint first.\n"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "serial number,device type,full name\nserial123,Computer,Test Name\n",
															"description": "(Required) The CSV file to upload",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/csv",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"csv"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  {\n    \"id\": \"1\",\n    \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n  },\n  {\n    \"id\": \"1\",\n    \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n  }\n]"
										},
										{
											"name": "Validation Failed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"value": "serial number,device type,full name\nserial123,Computer,Test Name\n",
															"description": "(Required) The CSV file to upload",
															"type": "text"
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/csv",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"csv"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"serialNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"line\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fieldSize\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"serialNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"line\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fieldSize\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "history",
							"item": [
								{
									"name": "Get Inventory Preload history entries\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/history?page=0&page-size=100&sort=date:desc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "date:desc",
													"description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `date:desc`. Multiple sort criteria are supported and must be separated\nwith a comma.\n\nExample: `sort=date:desc,name:asc`.\n"
												},
												{
													"key": "filter",
													"value": "",
													"description": "Allows filtering inventory preload history records.\nDefault search is empty query - returning all results for the requested page.\nAll inventory preload history fields are supported.\n\nQuery in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.\n\nExample: `filter=username==\"admin\"`\n"
												}
											]
										},
										"description": "Gets Inventory Preload history entries."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/history?page=0&page-size=100&sort=date:desc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add Inventory Preload history object notes",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"history"
											]
										},
										"description": "Adds Inventory Preload history object notes."
									},
									"response": [
										{
											"name": "Notes of Inventory Preload history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "Inventory Preload history can not be saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "records",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get an Inventory Preload record",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/records/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"records",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Inventory Preload identifier"
														}
													]
												},
												"description": "Retrieves an Inventory Preload record."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/inventory-preload/records/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"inventory-preload",
																"records",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Inventory Preload identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"id\": \"1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}"
												},
												{
													"name": "Inventory Preload record with specified id does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/inventory-preload/records/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"inventory-preload",
																"records",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Inventory Preload identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Update an Inventory Preload record",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/records/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"records",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Inventory Preload identifier"
														}
													]
												},
												"description": "Updates an Inventory Preload record."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/inventory-preload/records/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"inventory-preload",
																"records",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Inventory Preload identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"id\": \"1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}"
												},
												{
													"name": "Inventory Preload record with specified id does not exist",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/inventory-preload/records/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"inventory-preload",
																"records",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Inventory Preload identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete an Inventory Preload record\n",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/records/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"records",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Inventory Preload identifier"
														}
													]
												},
												"description": "Deletes an Inventory Preload record."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/inventory-preload/records/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"inventory-preload",
																"records",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Inventory Preload identifier"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Inventory Preload record with specified id does not exist",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/inventory-preload/records/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"inventory-preload",
																"records",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Inventory Preload identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Return all Inventory Preload records",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/records?page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"records"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc",
													"description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `id:asc`. Multiple sort criteria are supported and must be separated with\na comma. All inventory preload fields are supported, however fields added by\nextension attributes are not supported. If sorting by deviceType, use `0` for\nComputer and `1` for Mobile Device.\n\nExample: `sort=date:desc,name:asc`.\n"
												},
												{
													"key": "filter",
													"value": "",
													"description": "Allowing to filter inventory preload records.\nDefault search is empty query - returning all results for the requested page.\nAll inventory preload fields are supported, however fields added by extension\nattributes are not supported. If filtering by deviceType, use `0` for Computer\nand `1` for Mobile Device.\n\nQuery in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.\n\nExample: `filter=categoryName==\"Category\"`\n"
												}
											]
										},
										"description": "Returns all Inventory Preload records."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/records?page=0&page-size=100&sort=id:asc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"records"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "id:asc"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 10,\n  \"results\": [\n    {\n      \"deviceType\": \"Computer\",\n      \"serialNumber\": \"C02L29ECF8J1\",\n      \"id\": \"1\",\n      \"username\": \"admin\",\n      \"fullName\": \"Name\",\n      \"emailAddress\": \"ITBob@jamf.com\",\n      \"phoneNumber\": \"555-555-5555\",\n      \"position\": \"IT Team Lead\",\n      \"department\": \"IT\",\n      \"building\": \"Eau Claire\",\n      \"room\": \"4th Floor - Quad 3\",\n      \"poNumber\": \"8675309\",\n      \"poDate\": \"2019-02-04T21:09:31.661Z\",\n      \"warrantyExpiration\": \"2012-07-21\",\n      \"appleCareId\": \"5678\",\n      \"lifeExpectancy\": \"5 years\",\n      \"purchasePrice\": \"$399\",\n      \"purchasingContact\": \"Nick in IT\",\n      \"purchasingAccount\": \"IT Budget\",\n      \"leaseExpiration\": \"2015-06-19\",\n      \"barCode1\": \"123456789\",\n      \"barCode2\": \"123456789\",\n      \"assetTag\": \"ABCDEFG12345\",\n      \"vendor\": \"Apple\",\n      \"extensionAttributes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    {\n      \"deviceType\": \"Computer\",\n      \"serialNumber\": \"C02L29ECF8J1\",\n      \"id\": \"1\",\n      \"username\": \"admin\",\n      \"fullName\": \"Name\",\n      \"emailAddress\": \"ITBob@jamf.com\",\n      \"phoneNumber\": \"555-555-5555\",\n      \"position\": \"IT Team Lead\",\n      \"department\": \"IT\",\n      \"building\": \"Eau Claire\",\n      \"room\": \"4th Floor - Quad 3\",\n      \"poNumber\": \"8675309\",\n      \"poDate\": \"2019-02-04T21:09:31.661Z\",\n      \"warrantyExpiration\": \"2012-07-21\",\n      \"appleCareId\": \"5678\",\n      \"lifeExpectancy\": \"5 years\",\n      \"purchasePrice\": \"$399\",\n      \"purchasingContact\": \"Nick in IT\",\n      \"purchasingAccount\": \"IT Budget\",\n      \"leaseExpiration\": \"2015-06-19\",\n      \"barCode1\": \"123456789\",\n      \"barCode2\": \"123456789\",\n      \"assetTag\": \"ABCDEFG12345\",\n      \"vendor\": \"Apple\",\n      \"extensionAttributes\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Create a new Inventory Preload record using JSON",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/records",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"records"
											]
										},
										"description": "Create a new Inventory Preload record using JSON."
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"records"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"deviceType\": \"Computer\",\n  \"serialNumber\": \"C02L29ECF8J1\",\n  \"username\": \"admin\",\n  \"fullName\": \"Name\",\n  \"emailAddress\": \"ITBob@jamf.com\",\n  \"phoneNumber\": \"555-555-5555\",\n  \"position\": \"IT Team Lead\",\n  \"department\": \"IT\",\n  \"building\": \"Eau Claire\",\n  \"room\": \"4th Floor - Quad 3\",\n  \"poNumber\": \"8675309\",\n  \"poDate\": \"2019-02-04T21:09:31.661Z\",\n  \"warrantyExpiration\": \"2012-07-21\",\n  \"appleCareId\": \"5678\",\n  \"lifeExpectancy\": \"5 years\",\n  \"purchasePrice\": \"$399\",\n  \"purchasingContact\": \"Nick in IT\",\n  \"purchasingAccount\": \"IT Budget\",\n  \"leaseExpiration\": \"2015-06-19\",\n  \"barCode1\": \"123456789\",\n  \"barCode2\": \"123456789\",\n  \"assetTag\": \"ABCDEFG12345\",\n  \"vendor\": \"Apple\",\n  \"extensionAttributes\": [\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    },\n    {\n      \"name\": \"foo\",\n      \"value\": \"42\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/records",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"records"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete all Inventory Preload records\n",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/records/delete-all",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"records",
												"delete-all"
											]
										},
										"description": "Deletes all Inventory Preload records."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/inventory-preload/records/delete-all",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"inventory-preload",
														"records",
														"delete-all"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Download the Inventory Preload CSV template",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/csv"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/inventory-preload/csv-template",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"inventory-preload",
										"csv-template"
									]
								},
								"description": "Retrieves the Inventory Preload CSV file template."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/csv-template",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"csv-template"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Disposition",
											"value": "in aute",
											"description": "A header field named `Content-Disposition` is returned with the file name contained in its value, which is always `inventory-preload-template.csv`.\n"
										},
										{
											"key": "Content-Type",
											"value": "text/csv"
										}
									],
									"cookie": [],
									"body": "Serial Number,Device Type,Username,Full Name,Email Address"
								}
							]
						},
						{
							"name": "Validate a given CSV file\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "multipart/form-data"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"value": "serial number,device type,full name\nserial123,Computer,Test Name\n",
											"description": "(Required) The CSV file to upload",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/v2/inventory-preload/csv-validate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"inventory-preload",
										"csv-validate"
									]
								},
								"description": "Validate a given CSV file.\nSerial number and device type are required. All other fields are optional.\nA CSV template can be downloaded from `/v2/inventory-preload/csv-template`.\n"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "serial number,device type,full name\nserial123,Computer,Test Name\n",
													"description": "(Required) The CSV file to upload",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/csv-validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"csv-validate"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"recordCount\": 10\n}"
								},
								{
									"name": "Precondition Failed",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "file",
													"value": "serial number,device type,full name\nserial123,Computer,Test Name\n",
													"description": "(Required) The CSV file to upload",
													"type": "text"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/csv-validate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"csv-validate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"serialNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"line\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fieldSize\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"value\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"serialNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"line\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fieldSize\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"deviceType\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Retrieve a list of extension attribute columns\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/inventory-preload/ea-columns",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"inventory-preload",
										"ea-columns"
									]
								},
								"description": "Retrieve a list of extension attribute columns currently associated\nwith inventory preload records\n"
							},
							"response": [
								{
									"name": "Ok",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/ea-columns",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"ea-columns"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 10,\n  \"results\": [\n    {\n      \"name\": \"eaColumn1\",\n      \"fullName\": \"Column 1\"\n    },\n    {\n      \"name\": \"eaColumn1\",\n      \"fullName\": \"Column 1\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Export a collection of inventory preload records\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "text/csv"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/inventory-preload/export?page=0&page-size=100&sort=id:asc&filter=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"inventory-preload",
										"export"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `id:asc`. Multiple sort criteria are supported and must be separated with\na comma. All inventory preload fields are supported, however fields added by\nextension attributes are not supported. If sorting by deviceType, use `0` for\nComputer and `1` for Mobile Device.\n\nExample: `sort=date:desc,name:asc`.\n"
										},
										{
											"key": "filter",
											"value": "",
											"description": "Allowing to filter inventory preload records.\nDefault search is empty query - returning all results for the requested page.\nAll inventory preload fields are supported, however fields added by extension\nattributes are not supported. If filtering by deviceType, use `0` for Computer\nand `1` for Mobile Device.\n\nQuery in the RSQL format, allowing `==`, `!=`, `>`, `<`, and `=in=`.\n\nExample: `filter=categoryName==\"Category\"`\n"
										}
									]
								},
								"description": "Export a collection of inventory preload records\n"
							},
							"response": [
								{
									"name": "Export successful",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/export?page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"export"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												},
												{
													"key": "filter",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/csv"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unable to perform export operation.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"page\": 0,\n  \"pageSize\": 100,\n  \"sort\": [\n    \"id:asc\"\n  ],\n  \"filter\": \"id>=100\",\n  \"fields\": [\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    },\n    {\n      \"fieldName\": \"id\",\n      \"fieldLabelOverride\": \"identiteit\"\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/inventory-preload/export?page=0&page-size=100&sort=id:asc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"inventory-preload",
												"export"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												},
												{
													"key": "filter",
													"value": ""
												}
											]
										}
									},
									"status": "Service Unavailable",
									"code": 503,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "mobile-device-prestages",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "attachments",
									"item": [
										{
											"name": "Get attachments for a Mobile Device Prestage\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Get attachments for a Mobile Device Prestage"
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"1\",\n    \"name\": \"receipt.pdf\"\n  },\n  {\n    \"id\": \"1\",\n    \"name\": \"receipt.pdf\"\n  }\n]"
												},
												{
													"name": "Mobile Device Prestage with that id does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add an attachment to a Mobile Device Prestage\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "file",
															"description": "(Required) The file to upload",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/attachments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id",
														"attachments"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Identifier of the Mobile Device Prestage the attachment should be assigned to"
														}
													]
												},
												"description": "Add an attachment to a Mobile Device prestage"
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"description": "(Required) The file to upload",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Identifier of the Mobile Device Prestage the attachment should be assigned to"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1\",\n  \"name\": \"receipt.pdf\",\n  \"fileType\": \"pdf\"\n}"
												},
												{
													"name": "Mobile Device Prestage with that id does not exist",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"description": "(Required) The file to upload",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Identifier of the Mobile Device Prestage the attachment should be assigned to"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Payload Too Large",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "formdata",
															"formdata": [
																{
																	"key": "file",
																	"description": "(Required) The file to upload",
																	"type": "file",
																	"src": []
																}
															]
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/attachments",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"attachments"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Identifier of the Mobile Device Prestage the attachment should be assigned to"
																}
															]
														}
													},
													"status": "Request Entity Too Large",
													"code": 413,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Remove an attachment for a Mobile Device Prestage\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/attachments/delete-multiple",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id",
														"attachments",
														"delete-multiple"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Remove an attachment for a Mobile Device Prestage"
											},
											"response": [
												{
													"name": "Success",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/attachments/delete-multiple",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"attachments",
																"delete-multiple"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "history",
									"item": [
										{
											"name": "Get sorted and paged Mobile Device Prestage history objects\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/history?page=0&page-size=100&sort=date:desc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc",
															"description": "Sorting criteria in the format: property,asc/desc. Default sort order is descending. Multiple sort criteria are supported and must be entered on separate lines in Swagger UI. In the URI the 'sort' query param is duplicated for each sort criterion, e.g., ...&sort=name%2Casc&sort=date%2Cdesc"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Gets sorted and paged mobile device prestage history objects"
											},
											"response": [
												{
													"name": "Details of mobile device prestage history were found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/history?page=0&page-size=100&sort=date:desc",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"history"
															],
															"query": [
																{
																	"key": "page",
																	"value": "0"
																},
																{
																	"key": "page-size",
																	"value": "100"
																},
																{
																	"key": "sort",
																	"value": "date:desc"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": 1,\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add Mobile Device Prestage history object notes\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id",
														"history"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Adds mobile device prestage history object notes"
											},
											"response": [
												{
													"name": "Notes of mobile deivce prestage history were added",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
												},
												{
													"name": "Mobile device prestage history can not be saved",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/history",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"history"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Service Unavailable",
													"code": 503,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "scope",
									"item": [
										{
											"name": "Get Device Scope for a specific Mobile Device Prestage\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Get device scope for a specific mobile device prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": \"1\",\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "Mobile Device Prestage with that id does not exist",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Replace Device Scope for a specific Mobile Device Prestage\n",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Replace device scope for a specific mobile device prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": \"1\",\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "One or more serial numbers are not valid",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Mobile Device Prestage with that id does not exist",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Add Device Scope for a specific Mobile Device Prestage\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id",
														"scope"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Add device scope for a specific mobile device prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": \"1\",\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "One or more serial numbers are not valid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Mobile Device Prestage with that id does not exist",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Remove Device Scope for a specific Mobile Device Prestage\n",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope/delete-multiple",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id",
														"scope",
														"delete-multiple"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Remove device scope for a specific mobile device prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope/delete-multiple",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope",
																"delete-multiple"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"prestageId\": \"1\",\n  \"assignments\": [\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    },\n    {\n      \"serialNumber\": \"XYZ\",\n      \"assignmentDate\": \"2019-02-04T21:09:31.661Z\",\n      \"userAssigned\": \"admin\"\n    }\n  ],\n  \"versionLock\": 1\n}"
												},
												{
													"name": "One or more serial numbers are not valid",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope/delete-multiple",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope",
																"delete-multiple"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Mobile Device Prestage with that id does not exist",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope/delete-multiple",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope",
																"delete-multiple"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Optimistic Lock Error - The prestage you are trying to update has been updated by another process",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"serialNumbers\": [\n    \"DMQVGC0DHLF0\",\n    \"C02L29ECF8J1\"\n  ],\n  \"versionLock\": 1\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/scope/delete-multiple",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"scope",
																"delete-multiple"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "Conflict",
													"code": 409,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "syncs",
									"item": [
										{
											"name": "Get all prestage sync states for a single prestage\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/syncs",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id",
														"syncs"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Get all prestage sync states for a single prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/syncs",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"syncs"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"syncState\": \"CONNECTION_ERROR\",\n    \"prestageId\": \"1\",\n    \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n  },\n  {\n    \"syncState\": \"CONNECTION_ERROR\",\n    \"prestageId\": \"1\",\n    \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n  }\n]"
												}
											]
										},
										{
											"name": "Get the latest Sync State for a single Prestage\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/syncs/latest",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id",
														"syncs",
														"latest"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												},
												"description": "Get the latest sync state for a single prestage"
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id/syncs/latest",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"mobile-device-prestages",
																":id",
																"syncs",
																"latest"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Mobile Device Prestage identifier"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"syncState\": \"CONNECTION_ERROR\",\n  \"prestageId\": \"1\",\n  \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve a Mobile Device Prestage with the supplied id\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"mobile-device-prestages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Mobile Device Prestage identifier"
												}
											]
										},
										"description": "Retrieves a Mobile Device Prestage with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"allowPairing\": true,\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"configureDeviceBeforeSetupAssistant\": true,\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"multiUser\": true,\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sendTimezone\": true,\n  \"storageQuotaSizeMegabytes\": 4096,\n  \"supervised\": true,\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timezone\": \"America/Chicago\",\n  \"useStorageQuotaSize\": true,\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"temporarySessionOnly\": false,\n  \"enforceTemporarySessionTimeout\": false,\n  \"temporarySessionTimeout\": 30,\n  \"enforceUserSessionTimeout\": false,\n  \"userSessionTimeout\": 30,\n  \"id\": \"1\",\n  \"profileUuid\": \"29d-a8d8f-b8sdjndf-dsa9\",\n  \"siteId\": \"5\",\n  \"versionLock\": 0\n}"
										},
										{
											"name": "Mobile Device Prestage with that id does not exist",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update a Mobile Device Prestage\n",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"allowPairing\": true,\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"configureDeviceBeforeSetupAssistant\": true,\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"multiUser\": true,\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sendTimezone\": true,\n  \"storageQuotaSizeMegabytes\": 4096,\n  \"supervised\": true,\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timezone\": \"America/Chicago\",\n  \"useStorageQuotaSize\": true,\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"temporarySessionOnly\": false,\n  \"enforceTemporarySessionTimeout\": false,\n  \"temporarySessionTimeout\": 30,\n  \"enforceUserSessionTimeout\": false,\n  \"userSessionTimeout\": 30,\n  \"versionLock\": 0\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"mobile-device-prestages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Mobile Device Prestage identifier"
												}
											]
										},
										"description": "Updates a Mobile Device Prestage"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowPairing\": true,\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"configureDeviceBeforeSetupAssistant\": true,\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"multiUser\": true,\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sendTimezone\": true,\n  \"storageQuotaSizeMegabytes\": 4096,\n  \"supervised\": true,\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timezone\": \"America/Chicago\",\n  \"useStorageQuotaSize\": true,\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"temporarySessionOnly\": false,\n  \"enforceTemporarySessionTimeout\": false,\n  \"temporarySessionTimeout\": 30,\n  \"enforceUserSessionTimeout\": false,\n  \"userSessionTimeout\": 30,\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"allowPairing\": true,\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"configureDeviceBeforeSetupAssistant\": true,\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"multiUser\": true,\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sendTimezone\": true,\n  \"storageQuotaSizeMegabytes\": 4096,\n  \"supervised\": true,\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timezone\": \"America/Chicago\",\n  \"useStorageQuotaSize\": true,\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"temporarySessionOnly\": false,\n  \"enforceTemporarySessionTimeout\": false,\n  \"temporarySessionTimeout\": 30,\n  \"enforceUserSessionTimeout\": false,\n  \"userSessionTimeout\": 30,\n  \"id\": \"1\",\n  \"profileUuid\": \"29d-a8d8f-b8sdjndf-dsa9\",\n  \"siteId\": \"5\",\n  \"versionLock\": 0\n}"
										},
										{
											"name": "Mobile Device Prestage with that id does not exist",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowPairing\": true,\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"configureDeviceBeforeSetupAssistant\": true,\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"multiUser\": true,\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sendTimezone\": true,\n  \"storageQuotaSizeMegabytes\": 4096,\n  \"supervised\": true,\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timezone\": \"America/Chicago\",\n  \"useStorageQuotaSize\": true,\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"temporarySessionOnly\": false,\n  \"enforceTemporarySessionTimeout\": false,\n  \"temporarySessionTimeout\": 30,\n  \"enforceUserSessionTimeout\": false,\n  \"userSessionTimeout\": 30,\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "The Mobile Device Prestage was modified by another process. Read the Mobile Device Prestage again for updated changes.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"allowPairing\": true,\n  \"authenticationPrompt\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"autoAdvanceSetup\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"configureDeviceBeforeSetupAssistant\": true,\n  \"defaultPrestage\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"department\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"deviceEnrollmentProgramInstanceId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"displayName\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enableDeviceBasedActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentSiteId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingLocationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"keepExistingSiteMembership\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"locationInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"mandatory\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"maximumSharedAccounts\": 10,\n  \"mdmRemovable\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"multiUser\": true,\n  \"preventActivationLock\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"purchasingInformation\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"requireAuthentication\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"sendTimezone\": true,\n  \"storageQuotaSizeMegabytes\": 4096,\n  \"supervised\": true,\n  \"supportEmailAddress\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"supportPhoneNumber\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"timezone\": \"America/Chicago\",\n  \"useStorageQuotaSize\": true,\n  \"skipSetupItems\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"anchorCertificates\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"enrollmentCustomizationId\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"language\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"region\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"names\": {\n    \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n  },\n  \"temporarySessionOnly\": false,\n  \"enforceTemporarySessionTimeout\": false,\n  \"temporarySessionTimeout\": 30,\n  \"enforceUserSessionTimeout\": false,\n  \"userSessionTimeout\": 30,\n  \"versionLock\": 0\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												}
											},
											"status": "Conflict",
											"code": 409,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete a Mobile Device Prestage with the supplied id\n",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"mobile-device-prestages",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) Mobile Device Prestage identifier"
												}
											]
										},
										"description": "Deletes a Mobile Device Prestage with the supplied id"
									},
									"response": [
										{
											"name": "Success",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-device-prestages/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-device-prestages",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Mobile Device Prestage identifier"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Get sorted and paged Mobile Device Prestages\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/mobile-device-prestages?page=0&page-size=100&sort=id:desc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"mobile-device-prestages"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:desc",
											"description": "Sorting criteria in the format: property:asc/desc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Gets sorted and paged mobile device prestages"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/mobile-device-prestages?page=0&page-size=100&sort=id:desc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"mobile-device-prestages"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:desc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"profileUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"siteId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"versionLock\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"profileUuid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"siteId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"versionLock\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Create a Mobile Device Prestage\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"allowPairing\": true,\n  \"authenticationPrompt\": \"LDAP authentication prompt\",\n  \"autoAdvanceSetup\": true,\n  \"configureDeviceBeforeSetupAssistant\": true,\n  \"defaultPrestage\": false,\n  \"department\": \"Oxbow\",\n  \"deviceEnrollmentProgramInstanceId\": \"5\",\n  \"displayName\": \"Example Mobile Prestage Name\",\n  \"enableDeviceBasedActivationLock\": true,\n  \"enrollmentSiteId\": \"-1\",\n  \"keepExistingLocationInformation\": true,\n  \"keepExistingSiteMembership\": true,\n  \"locationInformation\": {\n    \"buildingId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"departmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"position\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"realname\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"room\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"username\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"mandatory\": false,\n  \"maximumSharedAccounts\": 10,\n  \"mdmRemovable\": true,\n  \"multiUser\": true,\n  \"preventActivationLock\": true,\n  \"purchasingInformation\": {\n    \"appleCareId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"leaseDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"leased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lifeExpectancy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasePrice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingAccount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingContact\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vendor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"warrantyDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"requireAuthentication\": true,\n  \"sendTimezone\": true,\n  \"storageQuotaSizeMegabytes\": 4096,\n  \"supervised\": true,\n  \"supportEmailAddress\": \"example@example.com\",\n  \"supportPhoneNumber\": \"5555555555\",\n  \"timezone\": \"America/Chicago\",\n  \"useStorageQuotaSize\": true,\n  \"skipSetupItems\": {\n    \"Location\": true,\n    \"Privacy\": false\n  },\n  \"anchorCertificates\": [\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"\n  ],\n  \"enrollmentCustomizationId\": \"2\",\n  \"language\": \"en\",\n  \"region\": \"US\",\n  \"names\": {\n    \"assignNamesUsing\": \"List of Names\",\n    \"prestageDeviceNames\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"deviceNamePrefix\": \"prefix\",\n    \"deviceNameSuffix\": \"suffix\",\n    \"singleDeviceName\": \"name\",\n    \"manageNames\": true,\n    \"deviceNamingConfigured\": true\n  },\n  \"temporarySessionOnly\": false,\n  \"enforceTemporarySessionTimeout\": false,\n  \"temporarySessionTimeout\": 30,\n  \"enforceUserSessionTimeout\": false,\n  \"userSessionTimeout\": 30\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/mobile-device-prestages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"mobile-device-prestages"
									]
								},
								"description": "Create a mobile device prestage"
							},
							"response": [
								{
									"name": "Mobile Device Prestage was created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"allowPairing\": true,\n  \"authenticationPrompt\": \"LDAP authentication prompt\",\n  \"autoAdvanceSetup\": true,\n  \"configureDeviceBeforeSetupAssistant\": true,\n  \"defaultPrestage\": false,\n  \"department\": \"Oxbow\",\n  \"deviceEnrollmentProgramInstanceId\": \"5\",\n  \"displayName\": \"Example Mobile Prestage Name\",\n  \"enableDeviceBasedActivationLock\": true,\n  \"enrollmentSiteId\": \"-1\",\n  \"keepExistingLocationInformation\": true,\n  \"keepExistingSiteMembership\": true,\n  \"locationInformation\": {\n    \"buildingId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"departmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"email\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phone\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"position\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"realname\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"room\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"username\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"mandatory\": false,\n  \"maximumSharedAccounts\": 10,\n  \"mdmRemovable\": true,\n  \"multiUser\": true,\n  \"preventActivationLock\": true,\n  \"purchasingInformation\": {\n    \"appleCareId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"leaseDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"leased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lifeExpectancy\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"poNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasePrice\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchased\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingAccount\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasingContact\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"vendor\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"versionLock\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"warrantyDate\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"requireAuthentication\": true,\n  \"sendTimezone\": true,\n  \"storageQuotaSizeMegabytes\": 4096,\n  \"supervised\": true,\n  \"supportEmailAddress\": \"example@example.com\",\n  \"supportPhoneNumber\": \"5555555555\",\n  \"timezone\": \"America/Chicago\",\n  \"useStorageQuotaSize\": true,\n  \"skipSetupItems\": {\n    \"Location\": true,\n    \"Privacy\": false\n  },\n  \"anchorCertificates\": [\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\",\n    \"xNE5HRgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==\"\n  ],\n  \"enrollmentCustomizationId\": \"2\",\n  \"language\": \"en\",\n  \"region\": \"US\",\n  \"names\": {\n    \"assignNamesUsing\": \"List of Names\",\n    \"prestageDeviceNames\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"deviceNamePrefix\": \"prefix\",\n    \"deviceNameSuffix\": \"suffix\",\n    \"singleDeviceName\": \"name\",\n    \"manageNames\": true,\n    \"deviceNamingConfigured\": true\n  },\n  \"temporarySessionOnly\": false,\n  \"enforceTemporarySessionTimeout\": false,\n  \"temporarySessionTimeout\": 30,\n  \"enforceUserSessionTimeout\": false,\n  \"userSessionTimeout\": 30\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/mobile-device-prestages",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"mobile-device-prestages"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
								}
							]
						},
						{
							"name": "Get all Device Scope for all Mobile Device Prestages\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/mobile-device-prestages/scope",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"mobile-device-prestages",
										"scope"
									]
								},
								"description": "Get all device scope for all mobile device prestages"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/mobile-device-prestages/scope",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"mobile-device-prestages",
												"scope"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"serialsByPrestageId\": {\n    \"mollit_b\": \"ut Duis ess\"\n  }\n}"
								}
							]
						},
						{
							"name": "Get all Prestage sync States for all prestages\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/mobile-device-prestages/syncs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"mobile-device-prestages",
										"syncs"
									]
								},
								"description": "Get all prestage sync states for all prestages"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/mobile-device-prestages/syncs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"mobile-device-prestages",
												"syncs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"syncState\": \"CONNECTION_ERROR\",\n    \"prestageId\": \"1\",\n    \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n  },\n  {\n    \"syncState\": \"CONNECTION_ERROR\",\n    \"prestageId\": \"1\",\n    \"timestamp\": \"2019-04-17T14:08:06.706+0000\"\n  }\n]"
								}
							]
						}
					]
				},
				{
					"name": "mobile-devices",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get Mobile Device\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/mobile-devices/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"mobile-devices",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of mobile device record"
												}
											]
										},
										"description": "Get MobileDevice"
									},
									"response": [
										{
											"name": "Succesful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-devices/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-devices",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of mobile device record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"name\": \"iPad\",\n  \"serialNumber\": \"DMQVGC0DHLA0\",\n  \"wifiMacAddress\": \"C4:84:66:92:78:00\",\n  \"udid\": \"0dad565fb40b010a9e490440188063a378721069\",\n  \"phoneNumber\": \"651-555-5555 Ext111\",\n  \"model\": \"iPad 5th Generation (Wi-Fi)\",\n  \"modelIdentifier\": \"iPad6,11\",\n  \"username\": \"admin\",\n  \"type\": \"ios\",\n  \"managementId\": \"73226fb6-61df-4c10-9552-eb9bc353d507\",\n  \"softwareUpdateDeviceId\": \"J132AP\"\n}"
										},
										{
											"name": "Specified mobile device object does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-devices/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-devices",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of mobile device record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Update fields on a mobile device that are allowed to be modified by users\n",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"Jan's Mobile Device\",\n  \"enforceName\": true,\n  \"assetTag\": \"8675309\",\n  \"siteId\": \"1\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"location\": {\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"emailAddress\": \"ITBob@jamf.com\",\n    \"position\": \"IT Team Lead\",\n    \"phoneNumber\": \"555-555-5555\",\n    \"departmentId\": \"1\",\n    \"buildingId\": \"1\",\n    \"room\": \"4th Floor - Quad 3\"\n  },\n  \"updatedExtensionAttributes\": [\n    {\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"extensionAttributeCollectionAllowed\": false\n    },\n    {\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"extensionAttributeCollectionAllowed\": false\n    }\n  ],\n  \"ios\": {\n    \"purchasing\": {\n      \"purchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tvos\": {\n    \"airplayPassword\": \"12345\",\n    \"purchasing\": {\n      \"purchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/mobile-devices/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"mobile-devices",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of mobile device record"
												}
											]
										},
										"description": "Updates fields on a mobile device that are allowed to be modified by users."
									},
									"response": [
										{
											"name": "Succesful response",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Jan's Mobile Device\",\n  \"enforceName\": true,\n  \"assetTag\": \"8675309\",\n  \"siteId\": \"1\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"location\": {\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"emailAddress\": \"ITBob@jamf.com\",\n    \"position\": \"IT Team Lead\",\n    \"phoneNumber\": \"555-555-5555\",\n    \"departmentId\": \"1\",\n    \"buildingId\": \"1\",\n    \"room\": \"4th Floor - Quad 3\"\n  },\n  \"updatedExtensionAttributes\": [\n    {\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"extensionAttributeCollectionAllowed\": false\n    },\n    {\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"extensionAttributeCollectionAllowed\": false\n    }\n  ],\n  \"ios\": {\n    \"purchasing\": {\n      \"purchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tvos\": {\n    \"airplayPassword\": \"12345\",\n    \"purchasing\": {\n      \"purchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-devices/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-devices",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of mobile device record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"name\": \"Jon's iPad\",\n  \"enforceName\": false,\n  \"assetTag\": \"12345\",\n  \"lastInventoryUpdateTimestamp\": \"2018-10-15T16:39:56Z\",\n  \"osVersion\": \"11.4\",\n  \"osBuild\": \"15F79\",\n  \"softwareUpdateDeviceId\": \"J132AP\",\n  \"serialNumber\": \"DMQVGC0DHLF0\",\n  \"udid\": \"0dad565fb40b010a9e490440188063a378721069\",\n  \"ipAddress\": \"10.0.0.1\",\n  \"wifiMacAddress\": \"ee:00:7c:f0:e5:ff\",\n  \"bluetoothMacAddress\": \"ee:00:7c:f0:e5:aa\",\n  \"managed\": true,\n  \"timeZone\": \"Europe/Warsaw\",\n  \"initialEntryTimestamp\": \"2018-10-15T16:39:56.307Z\",\n  \"lastEnrollmentTimestamp\": \"2018-10-15T16:39:56.307Z\",\n  \"mdmProfileExpirationTimestamp\": \"2018-10-15T16:39:56.307Z\",\n  \"deviceOwnershipLevel\": \"institutional\",\n  \"enrollmentMethod\": \"User-initiated - no invitation\",\n  \"enrollmentSessionTokenValid\": false,\n  \"site\": {\n    \"id\": \"1\",\n    \"name\": \"Eau Claire\"\n  },\n  \"extensionAttributes\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"extensionAttributeCollectionAllowed\": false\n    },\n    {\n      \"id\": \"1\",\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"extensionAttributeCollectionAllowed\": false\n    }\n  ],\n  \"location\": {\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"emailAddress\": \"ITBob@jamf.com\",\n    \"position\": \"IT Team Lead\",\n    \"phoneNumber\": \"555-555-5555\",\n    \"departmentId\": \"1\",\n    \"buildingId\": \"1\",\n    \"room\": \"4th Floor - Quad 3\"\n  },\n  \"type\": \"ios\",\n  \"ios\": {\n    \"model\": \"iPad 5th Generation (Wi-Fi)\",\n    \"modelIdentifier\": \"ipad6,11\",\n    \"modelNumber\": \"MP2F2LL\",\n    \"supervised\": true,\n    \"batteryLevel\": 100,\n    \"lastBackupTimestamp\": \"2018-10-15T16:39:56Z\",\n    \"capacityMb\": 27503,\n    \"availableMb\": 26646,\n    \"percentageUsed\": 3,\n    \"shared\": false,\n    \"deviceLocatorServiceEnabled\": false,\n    \"doNotDisturbEnabled\": false,\n    \"cloudBackupEnabled\": false,\n    \"lastCloudBackupTimestamp\": \"2018-10-15T16:39:56.307Z\",\n    \"locationServicesEnabled\": false,\n    \"iTunesStoreAccountActive\": false,\n    \"bleCapable\": false,\n    \"computer\": {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"name\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"purchasing\": {\n      \"purchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"security\": {\n      \"dataProtected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"blockLevelEncryptionCapable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"fileLevelEncryptionCapable\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"passcodePresent\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"passcodeCompliant\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"passcodeCompliantWithProfile\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"hardwareEncryption\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"activationLockEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"jailBreakDetected\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"network\": {\n      \"cellularTechnology\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"voiceRoamingEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"imei\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"iccid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"meid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"eid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"carrierSettingsVersion\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentCarrierNetwork\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentMobileCountryCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"currentMobileNetworkCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"homeCarrierNetwork\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"homeMobileCountryCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"homeMobileNetworkCode\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"dataRoamingEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"roaming\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"personalHotspotEnabled\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"phoneNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"applications\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"certificates\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"ebooks\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"configurationProfiles\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"provisioningProfiles\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"attachments\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"tvos\": {\n    \"model\": \"Apple TV 3rd Generation Rev 2\",\n    \"modelIdentifier\": \"AppleTV3,2\",\n    \"modelNumber\": \"MD199LL\",\n    \"supervised\": true,\n    \"airplayPassword\": \"1234\",\n    \"deviceId\": \"1\",\n    \"locales\": \"null\",\n    \"purchasing\": {\n      \"purchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    \"configurationProfiles\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"certificates\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Account not allowed to modify device",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Jan's Mobile Device\",\n  \"enforceName\": true,\n  \"assetTag\": \"8675309\",\n  \"siteId\": \"1\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"location\": {\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"emailAddress\": \"ITBob@jamf.com\",\n    \"position\": \"IT Team Lead\",\n    \"phoneNumber\": \"555-555-5555\",\n    \"departmentId\": \"1\",\n    \"buildingId\": \"1\",\n    \"room\": \"4th Floor - Quad 3\"\n  },\n  \"updatedExtensionAttributes\": [\n    {\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"extensionAttributeCollectionAllowed\": false\n    },\n    {\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"extensionAttributeCollectionAllowed\": false\n    }\n  ],\n  \"ios\": {\n    \"purchasing\": {\n      \"purchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tvos\": {\n    \"airplayPassword\": \"12345\",\n    \"purchasing\": {\n      \"purchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-devices/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-devices",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of mobile device record"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										},
										{
											"name": "Specified mobile device object does not exist.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"Jan's Mobile Device\",\n  \"enforceName\": true,\n  \"assetTag\": \"8675309\",\n  \"siteId\": \"1\",\n  \"timeZone\": \"Europe/Warsaw\",\n  \"location\": {\n    \"username\": \"admin\",\n    \"realName\": \"IT Bob\",\n    \"emailAddress\": \"ITBob@jamf.com\",\n    \"position\": \"IT Team Lead\",\n    \"phoneNumber\": \"555-555-5555\",\n    \"departmentId\": \"1\",\n    \"buildingId\": \"1\",\n    \"room\": \"4th Floor - Quad 3\"\n  },\n  \"updatedExtensionAttributes\": [\n    {\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"extensionAttributeCollectionAllowed\": false\n    },\n    {\n      \"name\": \"Example EA\",\n      \"type\": \"STRING\",\n      \"value\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ],\n      \"extensionAttributeCollectionAllowed\": false\n    }\n  ],\n  \"ios\": {\n    \"purchasing\": {\n      \"purchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  },\n  \"tvos\": {\n    \"airplayPassword\": \"12345\",\n    \"purchasing\": {\n      \"purchased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leased\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poNumber\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"vendor\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"appleCareId\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasePrice\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingAccount\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"poDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"warrantyExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"leaseExpiresDate\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"lifeExpectancy\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"purchasingContact\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-devices/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-devices",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of mobile device record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Get Mobile Device\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/mobile-devices/:id/detail",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"mobile-devices",
												":id",
												"detail"
											],
											"variable": [
												{
													"key": "id",
													"value": "in aute",
													"description": "(Required) instance id of mobile device record"
												}
											]
										},
										"description": "Get MobileDevice"
									},
									"response": [
										{
											"name": "Succesful response",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-devices/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-devices",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of mobile device record"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"name\": \"Jon's iPad\",\n  \"enforceName\": false,\n  \"assetTag\": \"12345\",\n  \"lastInventoryUpdateTimestamp\": \"2018-10-15T16:39:56Z\",\n  \"osVersion\": \"11.4\",\n  \"osBuild\": \"15F79\",\n  \"softwareUpdateDeviceId\": \"J132AP\",\n  \"serialNumber\": \"DMQVGC0DHLF0\",\n  \"udid\": \"0dad565fb40b010a9e490440188063a378721069\",\n  \"ipAddress\": \"10.0.0.1\",\n  \"wifiMacAddress\": \"ee:00:7c:f0:e5:ff\",\n  \"bluetoothMacAddress\": \"ee:00:7c:f0:e5:aa\",\n  \"managed\": true,\n  \"timeZone\": \"Europe/Warsaw\",\n  \"initialEntryTimestamp\": \"2018-10-15T16:39:56.307Z\",\n  \"lastEnrollmentTimestamp\": \"2018-10-15T16:39:56.307Z\",\n  \"mdmProfileExpirationTimestamp\": \"2018-10-15T16:39:56.307Z\",\n  \"deviceOwnershipLevel\": \"institutional\",\n  \"enrollmentMethod\": \"User-initiated - no invitation\",\n  \"enrollmentSessionTokenValid\": false,\n  \"site\": {\n    \"id\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"name\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"extensionAttributes\": [\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  ],\n  \"location\": {\n    \"username\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"realName\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"emailAddress\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"position\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"phoneNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"departmentId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"buildingId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"room\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"type\": \"ios\",\n  \"ios\": {\n    \"model\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"modelIdentifier\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"modelNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"supervised\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"batteryLevel\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastBackupTimestamp\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"capacityMb\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"availableMb\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"percentageUsed\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"shared\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceLocatorServiceEnabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"doNotDisturbEnabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"cloudBackupEnabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"lastCloudBackupTimestamp\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"locationServicesEnabled\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"iTunesStoreAccountActive\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"bleCapable\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"computer\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasing\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"security\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"network\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"applications\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"certificates\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"ebooks\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"configurationProfiles\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"provisioningProfiles\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"attachments\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"tvos\": {\n    \"model\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"modelIdentifier\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"modelNumber\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"supervised\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"airplayPassword\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"deviceId\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"locales\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"purchasing\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"configurationProfiles\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    },\n    \"certificates\": {\n      \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n    }\n  },\n  \"managementId\": \"73226fb6-61df-4c10-9552-eb9bc353d507\"\n}"
										},
										{
											"name": "Specified mobile device object does not exist.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/mobile-devices/:id/detail",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"mobile-devices",
														":id",
														"detail"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) instance id of mobile device record"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Mobile Device objects\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/mobile-devices?page=0&page-size=100&sort=id:asc",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"mobile-devices"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "page-size",
											"value": "100"
										},
										{
											"key": "sort",
											"value": "id:asc",
											"description": "Sorting criteria in the format: property:asc/desc. Default sort is id:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,name:asc "
										}
									]
								},
								"description": "Gets Mobile Device objects.\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/mobile-devices?page=0&page-size=100&sort=id:asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"mobile-devices"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "id:asc"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"totalCount\": 3,\n  \"results\": [\n    {\n      \"id\": \"1\",\n      \"name\": \"iPad\",\n      \"serialNumber\": \"DMQVGC0DHLA0\",\n      \"wifiMacAddress\": \"C4:84:66:92:78:00\",\n      \"udid\": \"0dad565fb40b010a9e490440188063a378721069\",\n      \"phoneNumber\": \"651-555-5555 Ext111\",\n      \"model\": \"iPad 5th Generation (Wi-Fi)\",\n      \"modelIdentifier\": \"iPad6,11\",\n      \"username\": \"admin\",\n      \"type\": \"ios\",\n      \"managementId\": \"73226fb6-61df-4c10-9552-eb9bc353d507\",\n      \"softwareUpdateDeviceId\": \"J132AP\"\n    },\n    {\n      \"id\": \"1\",\n      \"name\": \"iPad\",\n      \"serialNumber\": \"DMQVGC0DHLA0\",\n      \"wifiMacAddress\": \"C4:84:66:92:78:00\",\n      \"udid\": \"0dad565fb40b010a9e490440188063a378721069\",\n      \"phoneNumber\": \"651-555-5555 Ext111\",\n      \"model\": \"iPad 5th Generation (Wi-Fi)\",\n      \"modelIdentifier\": \"iPad6,11\",\n      \"username\": \"admin\",\n      \"type\": \"ios\",\n      \"managementId\": \"73226fb6-61df-4c10-9552-eb9bc353d507\",\n      \"softwareUpdateDeviceId\": \"J132AP\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "sso/cert",
					"item": [
						{
							"name": "Retrieve the certificate currently configured for use with SSO\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/sso/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"sso",
										"cert"
									]
								},
								"description": "Retrieves the certificate currently configured for use with SSO."
							},
							"response": [
								{
									"name": "Successful operation.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/sso/cert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"sso",
												"cert"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"keystore\": {\n    \"key\": \" \",\n    \"keys\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"type\": \"PKCS12\",\n    \"keystoreSetupType\": \"UPLOADED\",\n    \"keystoreFileName\": \"keystore.p12\"\n  },\n  \"keystoreDetails\": {\n    \"keys\": [\n      \"\",\n      \"\"\n    ],\n    \"serialNumber\": 2322472237,\n    \"subject\": \"CN=SSO:jamf.com, OU=JSS, O=JAMF Software, L=Minneapolis, ST=MN, C=US\",\n    \"issuer\": \"CN= Jamf Pro JSS Built-in Certificate Authority\",\n    \"expiration\": \"2030-02-24T12:18:32.000\"\n  }\n}"
								}
							]
						},
						{
							"name": "Update the certificate used by Jamf Pro to sign SSO requests to the identify provider\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \" \",\n  \"keystoreFile\": \"G2C+DhKu\",\n  \"keystoreFileName\": \"keystore.p12\",\n  \"type\": \"PKCS12\",\n  \"keystorePassword\": \"***\",\n  \"keys\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"password\": \"***\",\n  \"keystoreSetupType\": \"UPLOADED\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/sso/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"sso",
										"cert"
									]
								},
								"description": "Update the certificate used by Jamf Pro to sign SSO requests to the identify provider."
							},
							"response": [
								{
									"name": "Successfully changed the keystore.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \" \",\n  \"keystoreFile\": \"G2C+DhKu\",\n  \"keystoreFileName\": \"keystore.p12\",\n  \"type\": \"PKCS12\",\n  \"keystorePassword\": \"***\",\n  \"keys\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"password\": \"***\",\n  \"keystoreSetupType\": \"UPLOADED\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/sso/cert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"sso",
												"cert"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"keystore\": {\n    \"key\": \" \",\n    \"keys\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"type\": \"PKCS12\",\n    \"keystoreSetupType\": \"UPLOADED\",\n    \"keystoreFileName\": \"keystore.p12\"\n  },\n  \"keystoreDetails\": {\n    \"keys\": [\n      \"\",\n      \"\"\n    ],\n    \"serialNumber\": 2322472237,\n    \"subject\": \"CN=SSO:jamf.com, OU=JSS, O=JAMF Software, L=Minneapolis, ST=MN, C=US\",\n    \"issuer\": \"CN= Jamf Pro JSS Built-in Certificate Authority\",\n    \"expiration\": \"2030-02-24T12:18:32.000\"\n  }\n}"
								},
								{
									"name": "One or more parameters were invalid.",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"key\": \" \",\n  \"keystoreFile\": \"G2C+DhKu\",\n  \"keystoreFileName\": \"keystore.p12\",\n  \"type\": \"PKCS12\",\n  \"keystorePassword\": \"***\",\n  \"keys\": [\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    },\n    {\n      \"id\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      \"valid\": {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    }\n  ],\n  \"password\": \"***\",\n  \"keystoreSetupType\": \"UPLOADED\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/sso/cert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"sso",
												"cert"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						},
						{
							"name": "Jamf Pro will generate a new certificate and use it to sign SSO\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/sso/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"sso",
										"cert"
									]
								},
								"description": "Jamf Pro will generate a new certificate and use it to sign SSO requests to the identity provider."
							},
							"response": [
								{
									"name": "Newly generated will be set and returned.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/sso/cert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"sso",
												"cert"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"keystore\": {\n    \"key\": \" \",\n    \"keys\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ],\n    \"type\": \"PKCS12\",\n    \"keystoreSetupType\": \"UPLOADED\",\n    \"keystoreFileName\": \"keystore.p12\"\n  },\n  \"keystoreDetails\": {\n    \"keys\": [\n      \"\",\n      \"\"\n    ],\n    \"serialNumber\": 2322472237,\n    \"subject\": \"CN=SSO:jamf.com, OU=JSS, O=JAMF Software, L=Minneapolis, ST=MN, C=US\",\n    \"issuer\": \"CN= Jamf Pro JSS Built-in Certificate Authority\",\n    \"expiration\": \"2030-02-24T12:18:32.000\"\n  }\n}"
								}
							]
						},
						{
							"name": "Delete the currently configured certificate used by SSO\n",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v2/sso/cert",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"sso",
										"cert"
									]
								},
								"description": "Deletes the currently configured certificate used by SSO."
							},
							"response": [
								{
									"name": "Operation successful.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/sso/cert",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"sso",
												"cert"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Download the certificate currently configured for use with Jamf Pro's SSO configuration\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "text/plain"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/sso/cert/download",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"sso",
										"cert",
										"download"
									]
								},
								"description": "Downloads the certificate currently configured for use with Jamf Pro's SSO configuration"
							},
							"response": [
								{
									"name": "Request successful",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/sso/cert/download",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"sso",
												"cert",
												"download"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": "in aute"
								}
							]
						},
						{
							"name": "Parse the certificate to get details about certificate type and keys needed to upload certificate file\n",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"keystoreFile\": \"XRqW9aBXsQnwhdVFp+I3vw==\",\n  \"keystoreFileName\": \"keystore.p12\",\n  \"keystorePassword\": \"***\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/sso/cert/parse",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"sso",
										"cert",
										"parse"
									]
								},
								"description": "Parse the certificate to get details about certificate type and keys needed to upload certificate file."
							},
							"response": [
								{
									"name": "Successfully parsed the certificate.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"keystoreFile\": \"XRqW9aBXsQnwhdVFp+I3vw==\",\n  \"keystoreFileName\": \"keystore.p12\",\n  \"keystorePassword\": \"***\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/sso/cert/parse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"sso",
												"cert",
												"parse"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"key\": \" \",\n  \"keys\": [\n    {\n      \"id\": \"1\",\n      \"valid\": true\n    },\n    {\n      \"id\": \"1\",\n      \"valid\": true\n    }\n  ],\n  \"type\": \"PKCS12\",\n  \"keystoreSetupType\": \"UPLOADED\",\n  \"keystoreFile\": [\n    \"927yaVsHG75V7cF0\",\n    \"ryTD8WX8MkylEG6JkSZXOfYOyaeRuVZH\"\n  ],\n  \"keystoreFileName\": \"keystore.p12\"\n}"
								},
								{
									"name": "One or more parameters were invalid.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"keystoreFile\": \"XRqW9aBXsQnwhdVFp+I3vw==\",\n  \"keystoreFileName\": \"keystore.p12\",\n  \"keystorePassword\": \"***\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/sso/cert/parse",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"sso",
												"cert",
												"parse"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get the packages for a given Jamf application\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/jamf-package?application=protect",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"jamf-package"
							],
							"query": [
								{
									"key": "application",
									"value": "protect",
									"description": "(Required) The Jamf Application key. The only supported values are protect and connect."
								}
							]
						},
						"description": "Get the packages for a given Jamf application."
					},
					"response": [
						{
							"name": "Properties for the given application.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/jamf-package?application=protect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"jamf-package"
									],
									"query": [
										{
											"key": "application",
											"value": "protect"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"displayName\": \"Jamf Connect\",\n  \"releaseHistoryUrl\": \"https://docs.jamf.com/jamf-connect/administrator-guide/Release_History.html\",\n  \"artifacts\": [\n    {\n      \"id\": \"B84F9904-868B-4862-A8F5-33706AADED71\",\n      \"filename\": \"JamfProtect-1.2.2.pkg\",\n      \"version\": \"1.2.2\",\n      \"created\": \"1970-01-01T00:00:00Z\",\n      \"url\": \"https://example.jamf.com/path/to/JamfProtect-1.2.2.pkg\"\n    },\n    {\n      \"id\": \"B84F9904-868B-4862-A8F5-33706AADED71\",\n      \"filename\": \"JamfProtect-1.2.2.pkg\",\n      \"version\": \"1.2.2\",\n      \"created\": \"1970-01-01T00:00:00Z\",\n      \"url\": \"https://example.jamf.com/path/to/JamfProtect-1.2.2.pkg\"\n    }\n  ]\n}"
						},
						{
							"name": "Invalid Content. It is possible that there is no application with the given application id. Or Cloud Services Connection has not been established.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/jamf-package?application=protect",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"jamf-package"
									],
									"query": [
										{
											"key": "application",
											"value": "protect"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get basic information about the Jamf Pro Server\n",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/jamf-pro-information",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"jamf-pro-information"
							]
						},
						"description": "Get basic information about the Jamf Pro Server\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/jamf-pro-information",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"jamf-pro-information"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"vppTokenEnabled\": false,\n  \"depAccountEnabled\": false,\n  \"byodEnabled\": false,\n  \"userMigrationEnabled\": false,\n  \"cloudDeploymentsEnabled\": false,\n  \"patchEnabled\": false,\n  \"ssoSamlEnabled\": false,\n  \"smtpEnabled\": false\n}"
						}
					]
				}
			]
		},
		{
			"name": "v3",
			"item": [
				{
					"name": "check-in",
					"item": [
						{
							"name": "history",
							"item": [
								{
									"name": "Get Client Check-In history object\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/check-in/history?page=0&page-size=100&sort=date:desc&filter=",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"check-in",
												"history"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "date:desc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort is name:asc. Multiple sort criteria are supported and must be separated with a comma. Example: sort=date:desc,username:asc "
												},
												{
													"key": "filter",
													"value": "",
													"description": "Query in the RSQL format, allowing to filter history notes collection. Default filter is empty query - returning all results for the requested page. Fields allowed in the query: username, date, note, details. This param can be combined with paging and sorting. Example: filter=username!=admin and details==*disabled* and date<2019-12-15"
												}
											]
										},
										"description": "Gets Client Check-In history object\n"
									},
									"response": [
										{
											"name": "Details of Client Check-In history were found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/check-in/history?page=0&page-size=100&sort=date:desc&filter=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"check-in",
														"history"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "date:desc"
														},
														{
															"key": "filter",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 1,\n  \"results\": [\n    {\n      \"id\": \"1\",\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    },\n    {\n      \"id\": \"1\",\n      \"username\": \"admin\",\n      \"date\": \"2019-02-04T21:09:31.661Z\",\n      \"note\": \"Sso settings update\",\n      \"details\": \"Is SSO Enabled false\\\\nSelected SSO Provider\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add a Note to Client Check-In History\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/check-in/history",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"check-in",
												"history"
											]
										},
										"description": "Adds Client Check-In history object notes\n"
									},
									"response": [
										{
											"name": "Notes of Client Check-In history were added",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/check-in/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"check-in",
														"history"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "Client Check-In history can not be saved",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"note\": \"A generic note can sometimes be useful, but generally not.\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/check-in/history",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"check-in",
														"history"
													]
												}
											},
											"status": "Service Unavailable",
											"code": 503,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get Client Check-In settings\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/check-in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"check-in"
									]
								},
								"description": "Gets `Client Check-In` object.\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/check-in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"check-in"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"checkInFrequency\": 15,\n  \"createHooks\": false,\n  \"hookLog\": false,\n  \"hookPolicies\": false,\n  \"createStartupScript\": false,\n  \"startupLog\": false,\n  \"startupPolicies\": false,\n  \"startupSsh\": false,\n  \"enableLocalConfigurationProfiles\": false\n}"
								}
							]
						},
						{
							"name": "Update Client Check-In object\n",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"checkInFrequency\": 15,\n  \"createHooks\": false,\n  \"hookLog\": false,\n  \"hookPolicies\": false,\n  \"createStartupScript\": false,\n  \"startupLog\": false,\n  \"startupPolicies\": false,\n  \"startupSsh\": false,\n  \"enableLocalConfigurationProfiles\": false\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v3/check-in",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"check-in"
									]
								},
								"description": "Update Client Check-In object\n"
							},
							"response": [
								{
									"name": "Client Check-In was updated",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"checkInFrequency\": 15,\n  \"createHooks\": false,\n  \"hookLog\": false,\n  \"hookPolicies\": false,\n  \"createStartupScript\": false,\n  \"startupLog\": false,\n  \"startupPolicies\": false,\n  \"startupSsh\": false,\n  \"enableLocalConfigurationProfiles\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/check-in",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"check-in"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"checkInFrequency\": 15,\n  \"createHooks\": false,\n  \"hookLog\": false,\n  \"hookPolicies\": false,\n  \"createStartupScript\": false,\n  \"startupLog\": false,\n  \"startupPolicies\": false,\n  \"startupSsh\": false,\n  \"enableLocalConfigurationProfiles\": false\n}"
								}
							]
						}
					]
				},
				{
					"name": "enrollment",
					"item": [
						{
							"name": "access-groups",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Retrieve the configured LDAP groups configured for User-Initiated Enrollment\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/enrollment/access-groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"enrollment",
														"access-groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Autogenerated Access Group ID."
														}
													]
												},
												"description": "Retrieves the configured LDAP groups configured for User-Initiated Enrollment."
											},
											"response": [
												{
													"name": "Successful query",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/access-groups/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"access-groups",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Autogenerated Access Group ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"groupId\": \"1\",\n  \"ldapServerId\": \"1\",\n  \"name\": \"Grade School Pupils\",\n  \"id\": \"1\",\n  \"siteId\": \"-1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}"
												},
												{
													"name": "Group not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/access-groups/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"access-groups",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Autogenerated Access Group ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Modify the configured LDAP groups configured for User-Initiated Enrollment. Only exiting Access Groups can be updated.\n",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupId\": \"1\",\n  \"ldapServerId\": \"1\",\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"-1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/enrollment/access-groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"enrollment",
														"access-groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Autogenerated Access Group ID."
														}
													]
												},
												"description": "Modify the configured LDAP groups configured for User-Initiated Enrollment. Only exiting Access Groups can be updated.\n"
											},
											"response": [
												{
													"name": "Successful update",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groupId\": \"1\",\n  \"ldapServerId\": \"1\",\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"-1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/access-groups/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"access-groups",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Autogenerated Access Group ID."
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"groupId\": \"1\",\n  \"ldapServerId\": \"1\",\n  \"name\": \"Grade School Pupils\",\n  \"id\": \"1\",\n  \"siteId\": \"-1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}"
												},
												{
													"name": "Bad request.",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"groupId\": \"1\",\n  \"ldapServerId\": \"1\",\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"-1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/access-groups/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"access-groups",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Autogenerated Access Group ID."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete an LDAP group's access to user initiated Enrollment.\n",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/enrollment/access-groups/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"enrollment",
														"access-groups",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "in aute",
															"description": "(Required) Autogenerated Access Group ID."
														}
													]
												},
												"description": "Deletes an LDAP group's access to user initiated enrollment. The group \"All LDAP Users\" cannot be deleted, but it can be modified to disallow User-Initiated Enrollment."
											},
											"response": [
												{
													"name": "Successful deletion",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/access-groups/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"access-groups",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Autogenerated Access Group ID."
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "\"All LDAP Users\" cannot be deleted.\n",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/access-groups/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"access-groups",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Autogenerated Access Group ID."
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												},
												{
													"name": "Group not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/access-groups/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"access-groups",
																":id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "in aute",
																	"description": "(Required) Autogenerated Access Group ID."
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Retrieve the configured LDAP groups configured for User-Initiated Enrollment.\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/enrollment/access-groups?page=0&page-size=100&sort=name:asc&all-users-option-first=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"enrollment",
												"access-groups"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "name:asc",
													"description": "Sorting criteria in the format: `property:asc/desc`. Default sort\nis `name:asc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n"
												},
												{
													"key": "all-users-option-first",
													"value": "false",
													"description": "Return \"All LDAP Users\" option on the first position if it is present in the current page"
												}
											]
										},
										"description": "Retrieves the configured LDAP groups configured for User-Initiated Enrollment.\n"
									},
									"response": [
										{
											"name": "Found access groups matching search params.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/enrollment/access-groups?page=0&page-size=100&sort=name:asc&all-users-option-first=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"enrollment",
														"access-groups"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "name:asc"
														},
														{
															"key": "all-users-option-first",
															"value": "false"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 10,\n  \"results\": [\n    {\n      \"groupId\": \"1\",\n      \"ldapServerId\": \"1\",\n      \"name\": \"Grade School Pupils\",\n      \"id\": \"1\",\n      \"siteId\": \"-1\",\n      \"enterpriseEnrollmentEnabled\": false,\n      \"personalEnrollmentEnabled\": false,\n      \"accountDrivenUserEnrollmentEnabled\": false,\n      \"requireEula\": false\n    },\n    {\n      \"groupId\": \"1\",\n      \"ldapServerId\": \"1\",\n      \"name\": \"Grade School Pupils\",\n      \"id\": \"1\",\n      \"siteId\": \"-1\",\n      \"enterpriseEnrollmentEnabled\": false,\n      \"personalEnrollmentEnabled\": false,\n      \"accountDrivenUserEnrollmentEnabled\": false,\n      \"requireEula\": false\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Add the configured LDAP group for User-Initiated Enrollment.\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"groupId\": \"1\",\n  \"ldapServerId\": \"1\",\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"-1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/enrollment/access-groups",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"enrollment",
												"access-groups"
											]
										},
										"description": "Add the configured LDAP group for User-Initiated Enrollment.\n"
									},
									"response": [
										{
											"name": "Configured LDAP group record was created.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupId\": \"1\",\n  \"ldapServerId\": \"1\",\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"-1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/enrollment/access-groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"enrollment",
														"access-groups"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": \"1\",\n  \"href\": \"https://yourJamfProUrl.jamf/api/v1/resource/1\"\n}"
										},
										{
											"name": "A record with given ldapServerId and name already exists.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"groupId\": \"1\",\n  \"ldapServerId\": \"1\",\n  \"name\": \"Grade School Pupils\",\n  \"siteId\": \"-1\",\n  \"enterpriseEnrollmentEnabled\": false,\n  \"personalEnrollmentEnabled\": false,\n  \"accountDrivenUserEnrollmentEnabled\": false,\n  \"requireEula\": false\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/enrollment/access-groups",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"enrollment",
														"access-groups"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "languages",
							"item": [
								{
									"name": "{language Id}",
									"item": [
										{
											"name": "Retrieve the Enrollment messaging for a language\n",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/enrollment/languages/:languageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"enrollment",
														"languages",
														":languageId"
													],
													"variable": [
														{
															"key": "languageId",
															"value": "in aute",
															"description": "(Required) Two letter ISO 639-1 Language Code"
														}
													]
												},
												"description": "Retrieves the enrollment messaging for a language."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/languages/:languageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"languages",
																":languageId"
															],
															"variable": [
																{
																	"key": "languageId",
																	"value": "in aute",
																	"description": "(Required) Two letter ISO 639-1 Language Code"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"languageCode\": \"en\",\n  \"name\": \"English\",\n  \"title\": \"Enroll Your Device\",\n  \"loginDescription\": \"Log in to enroll your device.\",\n  \"username\": \"admin\",\n  \"password\": \"12345\",\n  \"loginButton\": \"Log in\",\n  \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n  \"deviceClassPersonal\": \"Personally Owned\",\n  \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n  \"deviceClassEnterprise\": \"Institutionally Owned\",\n  \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n  \"deviceClassButton\": \"Enroll\",\n  \"personalEula\": \"Personal Eula\",\n  \"enterpriseEula\": \"Enterprise Eula\",\n  \"eulaButton\": \"Accept\",\n  \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n  \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n  \"certificateButton\": \"Continue\",\n  \"certificateProfileName\": \"CA Certificate\",\n  \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n  \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n  \"personalButton\": \"Enroll\",\n  \"personalProfileName\": \"MDM Profile\",\n  \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n  \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n  \"userEnrollmentButton\": \"Continue\",\n  \"userEnrollmentProfileName\": \"MDM Profile\",\n  \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n  \"enterpriseButton\": \"Continue\",\n  \"enterpriseProfileName\": \"MDM Profile\",\n  \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n  \"quickAddText\": \"Download and install this package.\",\n  \"quickAddButton\": \"Download\",\n  \"quickAddName\": \"QuickAdd.pkg\",\n  \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n  \"completeMessage\": \"The enrollment process is complete.\",\n  \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n  \"tryAgainButton\": \"Try Again\",\n  \"checkNowButton\": \"Proceed\",\n  \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n  \"logoutButton\": \"Log Out\"\n}"
												},
												{
													"name": "Language not found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/languages/:languageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"languages",
																":languageId"
															],
															"variable": [
																{
																	"key": "languageId",
																	"value": "in aute",
																	"description": "(Required) Two letter ISO 639-1 Language Code"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Edit Enrollment messaging for a language\n",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"languageCode\": \"en\",\n  \"name\": \"English\",\n  \"title\": \"Enroll Your Device\",\n  \"loginDescription\": \"Log in to enroll your device.\",\n  \"username\": \"admin\",\n  \"password\": \"12345\",\n  \"loginButton\": \"Log in\",\n  \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n  \"deviceClassPersonal\": \"Personally Owned\",\n  \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n  \"deviceClassEnterprise\": \"Institutionally Owned\",\n  \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n  \"deviceClassButton\": \"Enroll\",\n  \"personalEula\": \"Personal Eula\",\n  \"enterpriseEula\": \"Enterprise Eula\",\n  \"eulaButton\": \"Accept\",\n  \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n  \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n  \"certificateButton\": \"Continue\",\n  \"certificateProfileName\": \"CA Certificate\",\n  \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n  \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n  \"personalButton\": \"Enroll\",\n  \"personalProfileName\": \"MDM Profile\",\n  \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n  \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n  \"userEnrollmentButton\": \"Continue\",\n  \"userEnrollmentProfileName\": \"MDM Profile\",\n  \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n  \"enterpriseButton\": \"Continue\",\n  \"enterpriseProfileName\": \"MDM Profile\",\n  \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n  \"quickAddText\": \"Download and install this package.\",\n  \"quickAddButton\": \"Download\",\n  \"quickAddName\": \"QuickAdd.pkg\",\n  \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n  \"completeMessage\": \"The enrollment process is complete.\",\n  \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n  \"tryAgainButton\": \"Try Again\",\n  \"checkNowButton\": \"Proceed\",\n  \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n  \"logoutButton\": \"Log Out\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/enrollment/languages/:languageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"enrollment",
														"languages",
														":languageId"
													],
													"variable": [
														{
															"key": "languageId",
															"value": "in aute",
															"description": "(Required) Two letter ISO 639-1 Language Code"
														}
													]
												},
												"description": "Edit enrollment messaging for a language."
											},
											"response": [
												{
													"name": "Successful response",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"languageCode\": \"en\",\n  \"name\": \"English\",\n  \"title\": \"Enroll Your Device\",\n  \"loginDescription\": \"Log in to enroll your device.\",\n  \"username\": \"admin\",\n  \"password\": \"12345\",\n  \"loginButton\": \"Log in\",\n  \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n  \"deviceClassPersonal\": \"Personally Owned\",\n  \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n  \"deviceClassEnterprise\": \"Institutionally Owned\",\n  \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n  \"deviceClassButton\": \"Enroll\",\n  \"personalEula\": \"Personal Eula\",\n  \"enterpriseEula\": \"Enterprise Eula\",\n  \"eulaButton\": \"Accept\",\n  \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n  \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n  \"certificateButton\": \"Continue\",\n  \"certificateProfileName\": \"CA Certificate\",\n  \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n  \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n  \"personalButton\": \"Enroll\",\n  \"personalProfileName\": \"MDM Profile\",\n  \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n  \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n  \"userEnrollmentButton\": \"Continue\",\n  \"userEnrollmentProfileName\": \"MDM Profile\",\n  \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n  \"enterpriseButton\": \"Continue\",\n  \"enterpriseProfileName\": \"MDM Profile\",\n  \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n  \"quickAddText\": \"Download and install this package.\",\n  \"quickAddButton\": \"Download\",\n  \"quickAddName\": \"QuickAdd.pkg\",\n  \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n  \"completeMessage\": \"The enrollment process is complete.\",\n  \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n  \"tryAgainButton\": \"Try Again\",\n  \"checkNowButton\": \"Proceed\",\n  \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n  \"logoutButton\": \"Log Out\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/languages/:languageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"languages",
																":languageId"
															],
															"variable": [
																{
																	"key": "languageId",
																	"value": "in aute",
																	"description": "(Required) Two letter ISO 639-1 Language Code"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"languageCode\": \"en\",\n  \"name\": \"English\",\n  \"title\": \"Enroll Your Device\",\n  \"loginDescription\": \"Log in to enroll your device.\",\n  \"username\": \"admin\",\n  \"password\": \"12345\",\n  \"loginButton\": \"Log in\",\n  \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n  \"deviceClassPersonal\": \"Personally Owned\",\n  \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n  \"deviceClassEnterprise\": \"Institutionally Owned\",\n  \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n  \"deviceClassButton\": \"Enroll\",\n  \"personalEula\": \"Personal Eula\",\n  \"enterpriseEula\": \"Enterprise Eula\",\n  \"eulaButton\": \"Accept\",\n  \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n  \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n  \"certificateButton\": \"Continue\",\n  \"certificateProfileName\": \"CA Certificate\",\n  \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n  \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n  \"personalButton\": \"Enroll\",\n  \"personalProfileName\": \"MDM Profile\",\n  \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n  \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n  \"userEnrollmentButton\": \"Continue\",\n  \"userEnrollmentProfileName\": \"MDM Profile\",\n  \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n  \"enterpriseButton\": \"Continue\",\n  \"enterpriseProfileName\": \"MDM Profile\",\n  \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n  \"quickAddText\": \"Download and install this package.\",\n  \"quickAddButton\": \"Download\",\n  \"quickAddName\": \"QuickAdd.pkg\",\n  \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n  \"completeMessage\": \"The enrollment process is complete.\",\n  \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n  \"tryAgainButton\": \"Try Again\",\n  \"checkNowButton\": \"Proceed\",\n  \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n  \"logoutButton\": \"Log Out\"\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"languageCode\": \"en\",\n  \"name\": \"English\",\n  \"title\": \"Enroll Your Device\",\n  \"loginDescription\": \"Log in to enroll your device.\",\n  \"username\": \"admin\",\n  \"password\": \"12345\",\n  \"loginButton\": \"Log in\",\n  \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n  \"deviceClassPersonal\": \"Personally Owned\",\n  \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n  \"deviceClassEnterprise\": \"Institutionally Owned\",\n  \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n  \"deviceClassButton\": \"Enroll\",\n  \"personalEula\": \"Personal Eula\",\n  \"enterpriseEula\": \"Enterprise Eula\",\n  \"eulaButton\": \"Accept\",\n  \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n  \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n  \"certificateButton\": \"Continue\",\n  \"certificateProfileName\": \"CA Certificate\",\n  \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n  \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n  \"personalButton\": \"Enroll\",\n  \"personalProfileName\": \"MDM Profile\",\n  \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n  \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n  \"userEnrollmentButton\": \"Continue\",\n  \"userEnrollmentProfileName\": \"MDM Profile\",\n  \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n  \"enterpriseButton\": \"Continue\",\n  \"enterpriseProfileName\": \"MDM Profile\",\n  \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n  \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n  \"quickAddText\": \"Download and install this package.\",\n  \"quickAddButton\": \"Download\",\n  \"quickAddName\": \"QuickAdd.pkg\",\n  \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n  \"completeMessage\": \"The enrollment process is complete.\",\n  \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n  \"tryAgainButton\": \"Try Again\",\n  \"checkNowButton\": \"Proceed\",\n  \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n  \"logoutButton\": \"Log Out\"\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/languages/:languageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"languages",
																":languageId"
															],
															"variable": [
																{
																	"key": "languageId",
																	"value": "in aute",
																	"description": "(Required) Two letter ISO 639-1 Language Code"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Delete the Enrollment messaging for a language\n",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/enrollment/languages/:languageId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"enrollment",
														"languages",
														":languageId"
													],
													"variable": [
														{
															"key": "languageId",
															"value": "in aute",
															"description": "(Required) Two letter ISO 639-1 Language Code"
														}
													]
												},
												"description": "Delete the enrollment messaging for a language."
											},
											"response": [
												{
													"name": "Successful deletetion",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/languages/:languageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"languages",
																":languageId"
															],
															"variable": [
																{
																	"key": "languageId",
																	"value": "in aute",
																	"description": "(Required) Two letter ISO 639-1 Language Code"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												},
												{
													"name": "Language not found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"description": "Added as a part of security scheme: bearer",
																"key": "Authorization",
																"value": "Bearer <token>"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v3/enrollment/languages/:languageId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v3",
																"enrollment",
																"languages",
																":languageId"
															],
															"variable": [
																{
																	"key": "languageId",
																	"value": "in aute",
																	"description": "(Required) Two letter ISO 639-1 Language Code"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get an array of the language codes that have Enrollment messaging\n",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/enrollment/languages?page=0&page-size=100&sort=languageCode:asc",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"enrollment",
												"languages"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "page-size",
													"value": "100"
												},
												{
													"key": "sort",
													"value": "languageCode:asc",
													"description": "Sorting criteria in the format: property:asc/desc. Default sort\nis `languageCode:asc`. Multiple sort criteria are supported and must be separated\nwith a comma. Example: `sort=date:desc,name:asc`.\n"
												}
											]
										},
										"description": "Returns an array of the language codes that have enrollment messaging currently configured."
									},
									"response": [
										{
											"name": "Found languages matching search params.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v3/enrollment/languages?page=0&page-size=100&sort=languageCode:asc",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"enrollment",
														"languages"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "page-size",
															"value": "100"
														},
														{
															"key": "sort",
															"value": "languageCode:asc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalCount\": 10,\n  \"results\": [\n    {\n      \"languageCode\": \"en\",\n      \"name\": \"English\",\n      \"title\": \"Enroll Your Device\",\n      \"loginDescription\": \"Log in to enroll your device.\",\n      \"username\": \"admin\",\n      \"password\": \"12345\",\n      \"loginButton\": \"Log in\",\n      \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n      \"deviceClassPersonal\": \"Personally Owned\",\n      \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n      \"deviceClassEnterprise\": \"Institutionally Owned\",\n      \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n      \"deviceClassButton\": \"Enroll\",\n      \"personalEula\": \"Personal Eula\",\n      \"enterpriseEula\": \"Enterprise Eula\",\n      \"eulaButton\": \"Accept\",\n      \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n      \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n      \"certificateButton\": \"Continue\",\n      \"certificateProfileName\": \"CA Certificate\",\n      \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n      \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n      \"personalButton\": \"Enroll\",\n      \"personalProfileName\": \"MDM Profile\",\n      \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n      \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n      \"userEnrollmentButton\": \"Continue\",\n      \"userEnrollmentProfileName\": \"MDM Profile\",\n      \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n      \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n      \"enterpriseButton\": \"Continue\",\n      \"enterpriseProfileName\": \"MDM Profile\",\n      \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n      \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n      \"quickAddText\": \"Download and install this package.\",\n      \"quickAddButton\": \"Download\",\n      \"quickAddName\": \"QuickAdd.pkg\",\n      \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n      \"completeMessage\": \"The enrollment process is complete.\",\n      \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n      \"tryAgainButton\": \"Try Again\",\n      \"checkNowButton\": \"Proceed\",\n      \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n      \"logoutButton\": \"Log Out\"\n    },\n    {\n      \"languageCode\": \"en\",\n      \"name\": \"English\",\n      \"title\": \"Enroll Your Device\",\n      \"loginDescription\": \"Log in to enroll your device.\",\n      \"username\": \"admin\",\n      \"password\": \"12345\",\n      \"loginButton\": \"Log in\",\n      \"deviceClassDescription\": \"Specify if this device is institutionally owned or personally owned.\",\n      \"deviceClassPersonal\": \"Personally Owned\",\n      \"deviceClassPersonalDescription\": \"For personally owned devices, IT administrators **can**\\n\\n         *   Lock the device\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n\\n\\n         For personally owned devices, IT administrators **cannot**\\n\\n         *   Wipe all data and settings from your device\\n         *   Track the location of your device\\n         *   Remove anything they did not install\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\",\n      \"deviceClassEnterprise\": \"Institutionally Owned\",\n      \"deviceClassEnterpriseDescription\": \"For institutionally owned devices, IT administrators **can**\\n\\n         *   Wipe all data and settings from the device\\n         *   Lock the device\\n         *   Remove the passcode\\n         *   Apply institutional settings\\n         *   Install and remove institutional data\\n         *   Install and remove institutional apps\\n         *   Add/remove configuration profiles\\n         *   Add/remove provisioning profiles\\n\\n         For institutionally owned devices, IT administrators **cannot**:\\n\\n         *   Remove anything they did not install\\n\",\n      \"deviceClassButton\": \"Enroll\",\n      \"personalEula\": \"Personal Eula\",\n      \"enterpriseEula\": \"Enterprise Eula\",\n      \"eulaButton\": \"Accept\",\n      \"siteDescription\": \"Select the site to use for enrolling this computer or mobile device.\",\n      \"certificateText\": \"To continue with enrollment, you need to install the CA certificate for your organization.\",\n      \"certificateButton\": \"Continue\",\n      \"certificateProfileName\": \"CA Certificate\",\n      \"certificateProfileDescription\": \"CA Certificate for mobile device management\",\n      \"personalText\": \"To continue with enrollment, you need to install the MDM profile.\",\n      \"personalButton\": \"Enroll\",\n      \"personalProfileName\": \"MDM Profile\",\n      \"personalProfileDescription\": \"MDM Profile for mobile device management\",\n      \"userEnrollmentText\": \"Enter your Managed Apple id to install the MDM Profile.\",\n      \"userEnrollmentButton\": \"Continue\",\n      \"userEnrollmentProfileName\": \"MDM Profile\",\n      \"userEnrollmentProfileDescription\": \"MDM Profile for mobile device management\",\n      \"enterpriseText\": \"To continue with enrollment, you need to install the MDM profile for your organization.\",\n      \"enterpriseButton\": \"Continue\",\n      \"enterpriseProfileName\": \"MDM Profile\",\n      \"enterpriseProfileDescription\": \"MDM Profile for mobile device management\",\n      \"enterprisePending\": \"To continue with enrollment, install the CA Certificate and MDM Profile that were downloaded to your computer.\",\n      \"quickAddText\": \"Download and install this package.\",\n      \"quickAddButton\": \"Download\",\n      \"quickAddName\": \"QuickAdd.pkg\",\n      \"quickAddPending\": \"Install the downloaded QuickAdd.pkg.\",\n      \"completeMessage\": \"The enrollment process is complete.\",\n      \"failedMessage\": \"The enrollment process could not be completed. Contact your IT administrator.\",\n      \"tryAgainButton\": \"Try Again\",\n      \"checkNowButton\": \"Proceed\",\n      \"checkEnrollmentMessage\": \"Tap \\\"Proceed\\\" to view the enrollment status for this device.\",\n      \"logoutButton\": \"Log Out\"\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Delete multiple configured languages from User-Initiated Enrollment settings\n",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v3/enrollment/languages/delete-multiple",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"enrollment",
												"languages",
												"delete-multiple"
											]
										},
										"description": "Delete multiple configured languages from User-Initiated Enrollment settings"
									},
									"response": [
										{
											"name": "All languages ids passed in request sucessfully deleted.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/enrollment/languages/delete-multiple",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"enrollment",
														"languages",
														"delete-multiple"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Request processed.  Returns ids and error codes of any language unable to be deleted.  Expected error codes: INVALID_ID - id does not exist SYSTEM_EXCEPTION - a system exception occurred trying to delete the language.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"description": "Added as a part of security scheme: bearer",
														"key": "Authorization",
														"value": "Bearer <token>"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"1\",\n    \"1\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v3/enrollment/languages/delete-multiple",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v3",
														"enrollment",
														"languages",
														"delete-multiple"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"httpStatus\": 400,\n  \"errors\": [\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    },\n    {\n      \"field\": \"Name\",\n      \"code\": \"8675309\",\n      \"description\": \"I've just picked up a fault in the AE35 unit. It's going to go 100% failure in 72 hours\",\n      \"id\": \"3\"\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve the list of languages and corresponding ISO 639-1 Codes but only those not already added to Enrollment\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/enrollment/filtered-language-codes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"enrollment",
										"filtered-language-codes"
									]
								},
								"description": "Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment."
							},
							"response": [
								{
									"name": "Retrieves the list of languages and corresponding ISO 639-1 Codes, but only those not already added to Enrollment.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/enrollment/filtered-language-codes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"enrollment",
												"filtered-language-codes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"en\",\n    \"name\": \"English\"\n  },\n  {\n    \"value\": \"en\",\n    \"name\": \"English\"\n  }\n]"
								}
							]
						},
						{
							"name": "Retrieve the list of languages and corresponding ISO 639-1 Codes\n",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v3/enrollment/language-codes",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"enrollment",
										"language-codes"
									]
								},
								"description": "Retrieves the list of languages and corresponding ISO 639-1 Codes."
							},
							"response": [
								{
									"name": "List of languages and corresponding ISO 639-1 Codes.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v3/enrollment/language-codes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v3",
												"enrollment",
												"language-codes"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"value\": \"en\",\n    \"name\": \"English\"\n  },\n  {\n    \"value\": \"en\",\n    \"name\": \"English\"\n  }\n]"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "vpp",
			"item": [
				{
					"name": "subscriptions",
					"item": [
						{
							"name": "Found all VPP - subscriptions\n",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "<Bearer Token>",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/vpp/subscriptions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vpp",
										"subscriptions"
									]
								},
								"description": "Found all vpp - subscriptions.\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/vpp/subscriptions",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vpp",
												"subscriptions"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Deprecation",
											"value": "quis aliqua ut esse",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"id\": 1,\n    \"name\": \"Subscription name\",\n    \"enabled\": false,\n    \"recipients\": {\n      \"recipientList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"adminAccounts\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"siteID\": -1,\n    \"siteName\": \"site A\"\n  },\n  {\n    \"id\": 1,\n    \"name\": \"Subscription name\",\n    \"enabled\": false,\n    \"recipients\": {\n      \"recipientList\": [\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        },\n        {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      ]\n    },\n    \"adminAccounts\": [\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      },\n      {\n        \"id\": {\n          \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n        }\n      }\n    ],\n    \"siteID\": -1,\n    \"siteName\": \"site A\"\n  }\n]"
								}
							]
						},
						{
							"name": "Found VPP subscription by id\n",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "<Bearer Token>",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/vpp/subscriptions/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vpp",
										"subscriptions",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "44454440",
											"description": "(Required) id of vpp subscription to be retrieved"
										}
									]
								},
								"description": "Found vpp subscription by id.\n"
							},
							"response": [
								{
									"name": "Successful response",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"description": "Added as a part of security scheme: bearer",
												"key": "Authorization",
												"value": "Bearer <token>"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/vpp/subscriptions/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"vpp",
												"subscriptions",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "44454440",
													"description": "(Required) id of vpp subscription to be retrieved"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Deprecation",
											"value": "quis aliqua ut esse",
											"description": ""
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 1,\n  \"name\": \"Subscription name\",\n  \"enabled\": false,\n  \"recipients\": {\n    \"recipientList\": [\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      },\n      {\n        \"value\": \"<Error: Too many levels of nesting to fake this schema>\"\n      }\n    ]\n  },\n  \"adminAccounts\": [\n    {\n      \"id\": 1\n    },\n    {\n      \"id\": 1\n    }\n  ],\n  \"siteID\": -1,\n  \"siteName\": \"site A\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Found all VPP Admin Accounts\n",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "<Bearer Token>",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/vpp/admin-accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"vpp",
								"admin-accounts"
							]
						},
						"description": "Found all vpp admin accounts.\n"
					},
					"response": [
						{
							"name": "Successful response",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: bearer",
										"key": "Authorization",
										"value": "Bearer <token>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/vpp/admin-accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"vpp",
										"admin-accounts"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"id\": 1,\n    \"name\": \"VPP Admin Account\",\n    \"licenseCount\": 42,\n    \"usedLicenseCount\": 40,\n    \"location\": \"Public School\",\n    \"expirationDate\": \"2000-10-31\",\n    \"site\": {\n      \"id\": 1,\n      \"name\": \"Eau Claire\"\n    }\n  },\n  {\n    \"id\": 1,\n    \"name\": \"VPP Admin Account\",\n    \"licenseCount\": 42,\n    \"usedLicenseCount\": 40,\n    \"location\": \"Public School\",\n    \"expirationDate\": \"2000-10-31\",\n    \"site\": {\n      \"id\": 1,\n      \"name\": \"Eau Claire\"\n    }\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Get Mobile Device Extension Attribute values placed in select paramter\n",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/devices/extensionAttributes?select=name",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"devices",
						"extensionAttributes"
					],
					"query": [
						{
							"key": "select",
							"value": "name",
							"description": "Acceptable values currently include:\n* name\n"
						}
					]
				},
				"description": "Gets Mobile Device Extension Attribute values placed in select parameter."
			},
			"response": [
				{
					"name": "Successful response - Extension Attributes retrieved",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/devices/extensionAttributes?select=name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								"extensionAttributes"
							],
							"query": [
								{
									"key": "select",
									"value": "name"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"extensionAttributes\": [\n    {\n      \"name\": \"extAttribute1\"\n    },\n    {\n      \"name\": \"extAttribute1\"\n    }\n  ]\n}"
				}
			]
		},
		{
			"name": "Upload an image\n",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "multipart/form-data"
					},
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file",
							"description": "(Required) The file to upload",
							"type": "file",
							"src": []
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/self-service/branding/images",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"self-service",
						"branding",
						"images"
					]
				},
				"description": "Uploads an image"
			},
			"response": [
				{
					"name": "Image successfully uploaded",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"description": "(Required) The file to upload",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/self-service/branding/images",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"self-service",
								"branding",
								"images"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"url\": \"https://jamfpro.jamf/image?1\"\n}"
				}
			]
		},
		{
			"name": "Retrieve information about application startup\n",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{baseUrl}}/startup-status",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"startup-status"
					]
				},
				"description": "Retrieves information about application startup. Current startup operation taking place (if any) and overall startup completion percentage."
			},
			"response": [
				{
					"name": "OK",
					"originalRequest": {
						"method": "GET",
						"header": [
							{
								"description": "Added as a part of security scheme: bearer",
								"key": "Authorization",
								"value": "Bearer <token>"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/startup-status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"startup-status"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n  \"step\": \"Initializing\",\n  \"stepCode\": \"SERVER_INIT_START\",\n  \"stepParam\": \"buildings\",\n  \"percentage\": 50,\n  \"warning\": \"Converting buildings, do not restart your JSS\",\n  \"warningCode\": \"SERVER_INIT_WARNING_DB_TABLE_ENCODING\",\n  \"warningParam\": \"13 MB\",\n  \"error\": \"Jamf Pro Startup Suspended\",\n  \"errorCode\": \"MEMCACHED_ERROR\"\n}"
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{currentAccessToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"let encodedAuth = btoa(pm.collectionVariables.get('username') + ':' + pm.collectionVariables.get('password'));",
					"",
					"let CleanURL = (pm.collectionVariables.get('baseUrl'))",
					"CleanURL = CleanURL.split('/api')[0];",
					"console.log(CleanURL)",
					"",
					"const echoPostRequest = {",
					"  url: CleanURL + '/uapi/auth/tokens',",
					"  method: 'POST',",
					"  header: 'Authorization: Basic ' + encodedAuth,",
					"};",
					"",
					"var getToken = true;",
					"var accessTokenExpiry = pm.globals.get('accessTokenExpiry');",
					"var currentTime = new Date().toISOString();",
					"console.log(\"Expires: \" + accessTokenExpiry + \" Current: \" + currentTime);",
					"",
					"if (!pm.globals.get('accessTokenExpiry') || ",
					"    !pm.globals.get('currentAccessToken')) {",
					"    console.log('Token or expiry date are missing')",
					"} else if (accessTokenExpiry <= currentTime) {",
					"    console.log('Token is expired')",
					"} else {",
					"    getToken = false;",
					"    console.log('Token and expiry date are all good');",
					"}",
					"",
					"if (getToken === true) {",
					"    pm.sendRequest(echoPostRequest, function (err, res) {",
					"    console.log(err ? err : res.json());",
					"        if (err === null) {",
					"            console.log('Saving the token and expiry date')",
					"            var responseJson = res.json();",
					"            pm.globals.set('currentAccessToken', responseJson.token)",
					"    ",
					"            var expiryDate = new Date(responseJson.expires);",
					"            pm.globals.set('accessTokenExpiry', expiryDate);",
					"        }",
					"    });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://server.jamfcloud.com/api"
		},
		{
			"key": "username",
			"value": "YourUsername"
		},
		{
			"key": "password",
			"value": "YourPassword"
		}
	]
}